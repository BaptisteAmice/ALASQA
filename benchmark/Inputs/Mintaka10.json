[
    {
        "Question": "Did Tom Brady win a Super Bowl before 2005?",
        "ID": "a0888a5b",
        "Entities": "Q32096:Super Bowl,Q313381:Tom Brady,2005:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Tom Brady] has a <member of sports team> that is the <winner> of a [Super Bowl] that has a <point in time> before 2005",
        "Sparklis ID based": "<Q313381> has a <P54> that is the <P1346> of a <Q32096> that has a <P585> before 2005",
        "Sparql label based": "ASK { wd:[Tom Brady] p:<member of sports team> [ ps:<member of sports team> ?p54_155 ] . ?q32096_258 wdt:<instance of> wd:[Super Bowl] . ?q32096_258 p:<winner> [ ps:<winner> ?p54_155 ] . ?q32096_258 p:<point in time> [ ps:<point in time> ?p585_297 ] . filter ( str(?p585_297) <= \"2005\" ) }",
        "Sparql ID based": "ASK { wd:Q313381 p:P54 [ ps:P54 ?p54_155 ] . ?q32096_258 wdt:P31 wd:Q32096 . ?q32096_258 p:P1346 [ ps:P1346 ?p54_155 ] . ?q32096_258 p:P585 [ ps:P585 ?p585_297 ] . filter ( str(?p585_297) <= \"2005\" ) }",
        "Squall label based": "whether [Tom Brady] has <member of sports team> a <winner> of a [Super Bowl] that has a <point in time> lesser or equal to 2005?",
        "Squall ID based": "whether <Q313381> has <P54> a <P1346> of a <Q32096> that has a <P585> lesser or equal to 2005?"
    },
    {
        "Question": "Which Sonic game did Tails not appear in?",
        "ID": "a67b72e6",
        "Entities": "Q194135:Miles \"Tails\" Prower",
        "Mintaka Answer": "Q37123:Sonic the Hedgehog",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Sonic the Hedgehog] and that not has as a <characters> [Miles Tails\" Prower\"]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q22974163> and that not has as a <P674> <Q194135>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Sonic The Hedgehog] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<characters> [ ps:<characters> wd:[Miles Tails\" Prower\"] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q22974163 ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P674 [ ps:P674 wd:Q194135 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Sonic The Hedgehog] and has not <characters> [Miles Tails\" Prower\"]?",
        "Squall ID based": "which <Q7889> has <P179> <Q22974163> and has not <P674> <Q194135>?"
    },
    {
        "Question": "Which N64 racing game did Donkey Kong not appear in?",
        "ID": "cceddcf7",
        "Entities": "Q184839:Nintendo 64, Q12389:Donkey Kong",
        "Mintaka Answer": "Q545072:Diddy Kong Racing",
        "Sparklis label based": "give me every [video game] that has as a <genre> [racing video game] and that has as a <platform> [Nintendo 64] and that has as a <characters> and not [Donkey Kong]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P136> <Q860750> and that has as a <P400> <Q184839> and that has as a <P674> and not <Q12384>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<genre> [ ps:<genre> wd:[Racing Video Game] ] . ?Q7889_8 p:<platform> [ ps:<platform> wd:[Nintendo 64] ] . ?Q7889_8 p:<characters> [ ps:<characters> [] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<characters> [ ps:<characters> wd:[Donkey Kong 3] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P136 [ ps:P136 wd:Q860750 ] . ?Q7889_8 p:P400 [ ps:P400 wd:Q184839 ] . ?Q7889_8 p:P674 [ ps:P674 [] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P674 [ ps:P674 wd:Q12389 ] . } ) }",
        "Squall label based": "which [Video Game] has <genre> [Racing Video Game] and has <platform> [Nintendo 64] and has a <characters> and has not <characters> [Donkey Kong 3]?",
        "Squall ID based": "which <Q7889> has <P136> <Q860750> and has <P400> <Q184839> and has a <P674> and has not <P674> <Q12389>?"
    },
    {
        "Question": "What is the last movie in Nolan's Dark Knight Trilogy?",
        "ID": "9f16f758",
        "Entities": "Q12859908:The Dark Knight Trilogy, Q25191:Christopher Nolan",
        "Mintaka Answer": "Q189330:The Dark Knight Rises",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Dark Knight trilogy] and that has as a <director> [Christopher Nolan] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q12859908> and that has as a <P57> <Q25191> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Dark Knight Trilogy] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q12859908 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Dark Knight Trilogy] and has <director> [Christopher Nolan] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q12859908> and has <P57> <Q25191> and has the highest <P577>?"
    },
    {
        "Question": "Which X-Men movies did Patrick Stewart not appear in?",
        "ID": "93177ace",
        "Entities": "Q2006869:X-Men,Q16296:Patrick Stewart",
        "Mintaka Answer": "Q223596:X-Men: First Class,Q17042878:X-Men: Apocalypse",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [X-Men 3] and that not has as a <cast member> [Patrick Stewart]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q219776> and that not has as a <P161> <Q16296>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[X-men 3] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Patrick Stewart] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q2006869 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q16296 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [X-men 3] and has not <cast member> [Patrick Stewart]?",
        "Squall ID based": "which <Q11424> has <P179> <Q2006869> and has not <P161> <Q16296>?"
    },
    {
        "Question": "What was the first Tony Hawk game to not be published by Activision?",
        "ID": "a52ed56d",
        "Entities": "Q295020:Tony Hawk, Q200491:Activision Publishing",
        "Mintaka Answer": "Q60760774:Tony Hawk's Skate Jam",
        "Sparklis label based": "give me every [video game] that not has as a <publisher> [Activision Publishing] and that has as a <part of the series> [Tony Hawk's] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P123> <Q200491> and that has as a <P179> <Q1189289> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Tony Hawk's] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<publisher> [ ps:<publisher> wd:[Activision Publishing] ] . } ) ?Q7889_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q1189289 ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P123 [ ps:P123 wd:Q200491 ] . } ) ?Q7889_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Tony Hawk's] and has not <publisher> [Activision Publishing] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1189289> and has not <P123> <Q200491> and has the lowest <P577>?"
    },
    {
        "Question": "When did Eminem win his first Grammy?",
        "ID": "4c69cdcc",
        "Entities": "Q5608:Eminem, Q41254:Grammy Award",
        "Mintaka Answer": "2000",
        "Sparklis label based": "[Eminem] <award received> with a <point in time> with a <point in time>  something that is the <instance of> [Grammy Award]   and give me lowest-to-highest the year of the 1st <point in time>",
        "Sparklis ID based": "<Q5608> <P166> with a <P585> with a <P585> something that is the <P31> <Q41254> and give me lowest-to-highest the year of the 1st <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_106 WHERE { wd:[Eminem] p:<award received> [ n1:<point in time> ?P585_17 ; n1:<point in time> ?P585_12 ; ps:<award received> ?P31_7 ] . ?P31_7 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . BIND (year(?P585_17) AS ?expr_106) } ORDER BY ASC(?expr_106) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_106 WHERE { wd:Q5608 p:P166 [ n1:P585 ?P585_17 ; n1:P585 ?P585_12 ; ps:P166 ?P31_7 ] . ?P31_7 p:P31 [ ps:P31 wd:Q41254 ] . BIND (year(?P585_17) AS ?expr_106) } ORDER BY ASC(?expr_106) LIMIT 1",
        "Squall label based": "what is the lowest year of a thing at which <point in time> [Eminem] has <award received> at a <point in time> a thing that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the lowest year of a thing at which <P585> <Q5608> has <P166> at a <P585> a thing that has <P31> <Q41254>?"
    },
    {
        "Question": "When was the second to last Super Bowl won by the San Francisco 49ers?",
        "ID": "4f254128",
        "Entities": "Q337758:San Francisco 49ers,Q32096:Super Bowl,2:None",
        "Mintaka Answer": "1989",
        "Sparklis label based": "give me every [Super Bowl] that has as a <winner> [San Francisco 49ers] and that has the highest-to-lowest <point in time>",
        "Sparklis ID based": "give me every <Q32096> that has as a <P1346> <Q337758> and that has the highest-to-lowest <P585>",
        "Sparql label based": "select distinct ?p585_5 where { ?q32096_1 wdt:<instance of> wd:[Super Bowl] . ?q32096_1 p:<winner> [ ps:<winner> wd:[San Francisco 49ers] ] . ?q32096_1 p:<point in time> [ ps:<point in time> ?p585_5 ] . } order by desc(?p585_5) limit 1 offset 1",
        "Sparql ID based": "select distinct ?p585_5 where { ?q32096_1 wdt:P31 wd:Q32096 . ?q32096_1 p:P1346 [ ps:P1346 wd:Q337758 ] . ?q32096_1 p:P585 [ ps:P585 ?p585_5 ] . } order by desc(?p585_5) limit 1 offset 1",
        "Squall label based": "what is the 2nd highest <point in time> of a [Super Bowl] that has <winner> [San Francisco 49ers]?",
        "Squall ID based": "what is the 2nd highest <P585> of a <Q32096> that has <P1346> <Q337758>?"
    },
    {
        "Question": "What river flows through Nebraska and is the longest river in the United States?",
        "ID": "6a275cdf",
        "Entities": "Q30:United States of America, Q1553:Nebraska",
        "Mintaka Answer": "Q1581:Missouri",
        "Sparklis label based": "give me every [river] that has as a country  [United States of America]  and that has as a <located in the administrative territorial entity>  [Nebraska]  and that has  the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a country <Q30> and that has as a <P131> <Q1553> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_7 WHERE { ?Q4022_7 wdt:<instance of> wd:[River] . ?Q4022_7 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q4022_7 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Nebraska] ] . ?Q4022_7 p:<length> [ ps:<length> ?P2043_43 ] . } ORDER BY DESC(?P2043_43) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_7 WHERE { ?Q4022_7 wdt:P31 wd:Q4022 . ?Q4022_7 p:P17 [ ps:P17 wd:Q30 ] . ?Q4022_7 p:P131 [ ps:P131 wd:Q1553 ] . ?Q4022_7 p:P2043 [ ps:P2043 ?P2043_43 ] . } ORDER BY DESC(?P2043_43) LIMIT 1",
        "Squall label based": "which [River] has <country> [United States Of America] and has <located in the administrative territorial entity> [Nebraska] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q30> and has <P131> <Q1553> and has the highest <P2043>?"
    },
    {
        "Question": "Which movie had a higher lifetime gross, Titanic or Avatar?",
        "ID": "28cf6720",
        "Entities": "Q44578:Titanic,Q24871:Avatar",
        "Mintaka Answer": "Q24871:Avatar",
        "Sparklis label based": "[Titanic] has  a <box office>  and [Avatar] has  a <box office>  and give me the total 1st <box office> and give me the total 2nd <box office> and where the total 2nd <box office> < the total 1st <box office>",
        "Sparklis ID based": "<Q25173> has a <P2142> and <Q24871> has a <P2142> and give me the total 1st <P2142> and give me the total 2nd <P2142> and where the total 2nd <P2142> < the total 1st <P2142>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Titanic 2] wd:[Avatar] } ?x p:<box office> [ ps:<box office> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q44578 wd:Q24871 } ?x p:P2142 [ ps:P2142 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Titanic 2] or [Avatar] and has the lowest <box office>?",
        "Squall ID based": "what is <Q44578> or <Q24871> and has the lowest <P2142>?"
    }
]