[
    {
        "Question": "Did Tom Brady win a Super Bowl before 2005?",
        "ID": "a0888a5b",
        "Entities": "Q32096:Super Bowl,Q313381:Tom Brady,2005:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Tom Brady] has a <member of sports team> that is the <winner> of a [Super Bowl] that has a <point in time> before 2005",
        "Sparklis ID based": "<Q313381> has a <P54> that is the <P1346> of a <Q32096> that has a <P585> before 2005",
        "Sparql label based": "ASK { wd:[Tom Brady] p:<member of sports team> [ ps:<member of sports team> ?p54_155 ] . ?q32096_258 wdt:<instance of> wd:[Super Bowl] . ?q32096_258 p:<winner> [ ps:<winner> ?p54_155 ] . ?q32096_258 p:<point in time> [ ps:<point in time> ?p585_297 ] . filter ( str(?p585_297) <= \"2005\" ) }",
        "Sparql ID based": "ASK { wd:Q313381 p:P54 [ ps:P54 ?p54_155 ] . ?q32096_258 wdt:P31 wd:Q32096 . ?q32096_258 p:P1346 [ ps:P1346 ?p54_155 ] . ?q32096_258 p:P585 [ ps:P585 ?p585_297 ] . filter ( str(?p585_297) <= \"2005\" ) }",
        "Squall label based": "whether [Tom Brady] has <member of sports team> a <winner> of a [Super Bowl] that has a <point in time> lesser or equal to 2005?",
        "Squall ID based": "whether <Q313381> has <P54> a <P1346> of a <Q32096> that has a <P585> lesser or equal to 2005?"
    },
    {
        "Question": "Which Sonic game did Tails not appear in?",
        "ID": "a67b72e6",
        "Entities": "Q194135:Miles \"Tails\" Prower",
        "Mintaka Answer": "Q37123:Sonic the Hedgehog",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Sonic the Hedgehog] and that not has as a <characters> [Miles Tails\" Prower\"]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q22974163> and that not has as a <P674> <Q194135>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Sonic The Hedgehog] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<characters> [ ps:<characters> wd:[Miles Tails\" Prower\"] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q22974163 ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P674 [ ps:P674 wd:Q194135 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Sonic The Hedgehog] and has not <characters> [Miles Tails\" Prower\"]?",
        "Squall ID based": "which <Q7889> has <P179> <Q22974163> and has not <P674> <Q194135>?"
    },
    {
        "Question": "Which N64 racing game did Donkey Kong not appear in?",
        "ID": "cceddcf7",
        "Entities": "Q184839:Nintendo 64, Q12389:Donkey Kong",
        "Mintaka Answer": "Q545072:Diddy Kong Racing",
        "Sparklis label based": "give me every [video game] that has as a <genre> [racing video game] and that has as a <platform> [Nintendo 64] and that has as a <characters> and not [Donkey Kong]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P136> <Q860750> and that has as a <P400> <Q184839> and that has as a <P674> and not <Q12384>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<genre> [ ps:<genre> wd:[Racing Video Game] ] . ?Q7889_8 p:<platform> [ ps:<platform> wd:[Nintendo 64] ] . ?Q7889_8 p:<characters> [ ps:<characters> [] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<characters> [ ps:<characters> wd:[Donkey Kong 3] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P136 [ ps:P136 wd:Q860750 ] . ?Q7889_8 p:P400 [ ps:P400 wd:Q184839 ] . ?Q7889_8 p:P674 [ ps:P674 [] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P674 [ ps:P674 wd:Q12389 ] . } ) }",
        "Squall label based": "which [Video Game] has <genre> [Racing Video Game] and has <platform> [Nintendo 64] and has a <characters> and has not <characters> [Donkey Kong 3]?",
        "Squall ID based": "which <Q7889> has <P136> <Q860750> and has <P400> <Q184839> and has a <P674> and has not <P674> <Q12389>?"
    },
    {
        "Question": "What is the last movie in Nolan's Dark Knight Trilogy?",
        "ID": "9f16f758",
        "Entities": "Q12859908:The Dark Knight Trilogy, Q25191:Christopher Nolan",
        "Mintaka Answer": "Q189330:The Dark Knight Rises",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Dark Knight trilogy] and that has as a <director> [Christopher Nolan] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q12859908> and that has as a <P57> <Q25191> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Dark Knight Trilogy] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q12859908 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Dark Knight Trilogy] and has <director> [Christopher Nolan] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q12859908> and has <P57> <Q25191> and has the highest <P577>?"
    },
    {
        "Question": "Which X-Men movies did Patrick Stewart not appear in?",
        "ID": "93177ace",
        "Entities": "Q2006869:X-Men,Q16296:Patrick Stewart",
        "Mintaka Answer": "Q223596:X-Men: First Class,Q17042878:X-Men: Apocalypse",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [X-Men 3] and that not has as a <cast member> [Patrick Stewart]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q219776> and that not has as a <P161> <Q16296>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[X-men 3] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Patrick Stewart] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q2006869 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q16296 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [X-men 3] and has not <cast member> [Patrick Stewart]?",
        "Squall ID based": "which <Q11424> has <P179> <Q2006869> and has not <P161> <Q16296>?"
    },
    {
        "Question": "What was the first Tony Hawk game to not be published by Activision?",
        "ID": "a52ed56d",
        "Entities": "Q295020:Tony Hawk, Q200491:Activision Publishing",
        "Mintaka Answer": "Q60760774:Tony Hawk's Skate Jam",
        "Sparklis label based": "give me every [video game] that not has as a <publisher> [Activision Publishing] and that has as a <part of the series> [Tony Hawk's] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P123> <Q200491> and that has as a <P179> <Q1189289> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Tony Hawk's] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<publisher> [ ps:<publisher> wd:[Activision Publishing] ] . } ) ?Q7889_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q1189289 ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P123 [ ps:P123 wd:Q200491 ] . } ) ?Q7889_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Tony Hawk's] and has not <publisher> [Activision Publishing] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1189289> and has not <P123> <Q200491> and has the lowest <P577>?"
    },
    {
        "Question": "When did Eminem win his first Grammy?",
        "ID": "4c69cdcc",
        "Entities": "Q5608:Eminem, Q41254:Grammy Award",
        "Mintaka Answer": "2000",
        "Sparklis label based": "[Eminem] <award received> with a <point in time> with a <point in time>  something that is the <instance of> [Grammy Award]   and give me lowest-to-highest the year of the 1st <point in time>",
        "Sparklis ID based": "<Q5608> <P166> with a <P585> with a <P585> something that is the <P31> <Q41254> and give me lowest-to-highest the year of the 1st <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_106 WHERE { wd:[Eminem] p:<award received> [ n1:<point in time> ?P585_17 ; n1:<point in time> ?P585_12 ; ps:<award received> ?P31_7 ] . ?P31_7 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . BIND (year(?P585_17) AS ?expr_106) } ORDER BY ASC(?expr_106) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_106 WHERE { wd:Q5608 p:P166 [ n1:P585 ?P585_17 ; n1:P585 ?P585_12 ; ps:P166 ?P31_7 ] . ?P31_7 p:P31 [ ps:P31 wd:Q41254 ] . BIND (year(?P585_17) AS ?expr_106) } ORDER BY ASC(?expr_106) LIMIT 1",
        "Squall label based": "what is the lowest year of a thing at which <point in time> [Eminem] has <award received> at a <point in time> a thing that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the lowest year of a thing at which <P585> <Q5608> has <P166> at a <P585> a thing that has <P31> <Q41254>?"
    },
    {
        "Question": "When was the second to last Super Bowl won by the San Francisco 49ers?",
        "ID": "4f254128",
        "Entities": "Q337758:San Francisco 49ers,Q32096:Super Bowl,2:None",
        "Mintaka Answer": "1989",
        "Sparklis label based": "give me every [Super Bowl] that has as a <winner> [San Francisco 49ers] and that has the highest-to-lowest <point in time>",
        "Sparklis ID based": "give me every <Q32096> that has as a <P1346> <Q337758> and that has the highest-to-lowest <P585>",
        "Sparql label based": "select distinct ?p585_5 where { ?q32096_1 wdt:<instance of> wd:[Super Bowl] . ?q32096_1 p:<winner> [ ps:<winner> wd:[San Francisco 49ers] ] . ?q32096_1 p:<point in time> [ ps:<point in time> ?p585_5 ] . } order by desc(?p585_5) limit 1 offset 1",
        "Sparql ID based": "select distinct ?p585_5 where { ?q32096_1 wdt:P31 wd:Q32096 . ?q32096_1 p:P1346 [ ps:P1346 wd:Q337758 ] . ?q32096_1 p:P585 [ ps:P585 ?p585_5 ] . } order by desc(?p585_5) limit 1 offset 1",
        "Squall label based": "what is the 2nd highest <point in time> of a [Super Bowl] that has <winner> [San Francisco 49ers]?",
        "Squall ID based": "what is the 2nd highest <P585> of a <Q32096> that has <P1346> <Q337758>?"
    },
    {
        "Question": "What river flows through Nebraska and is the longest river in the United States?",
        "ID": "6a275cdf",
        "Entities": "Q30:United States of America, Q1553:Nebraska",
        "Mintaka Answer": "Q1581:Missouri",
        "Sparklis label based": "give me every [river] that has as a country  [United States of America]  and that has as a <located in the administrative territorial entity>  [Nebraska]  and that has  the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a country <Q30> and that has as a <P131> <Q1553> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_7 WHERE { ?Q4022_7 wdt:<instance of> wd:[River] . ?Q4022_7 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q4022_7 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Nebraska] ] . ?Q4022_7 p:<length> [ ps:<length> ?P2043_43 ] . } ORDER BY DESC(?P2043_43) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_7 WHERE { ?Q4022_7 wdt:P31 wd:Q4022 . ?Q4022_7 p:P17 [ ps:P17 wd:Q30 ] . ?Q4022_7 p:P131 [ ps:P131 wd:Q1553 ] . ?Q4022_7 p:P2043 [ ps:P2043 ?P2043_43 ] . } ORDER BY DESC(?P2043_43) LIMIT 1",
        "Squall label based": "which [River] has <country> [United States Of America] and has <located in the administrative territorial entity> [Nebraska] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q30> and has <P131> <Q1553> and has the highest <P2043>?"
    },
    {
        "Question": "Which movie had a higher lifetime gross, Titanic or Avatar?",
        "ID": "28cf6720",
        "Entities": "Q44578:Titanic,Q24871:Avatar",
        "Mintaka Answer": "Q24871:Avatar",
        "Sparklis label based": "[Titanic] has  a <box office>  and [Avatar] has  a <box office>  and give me the total 1st <box office> and give me the total 2nd <box office> and where the total 2nd <box office> < the total 1st <box office>",
        "Sparklis ID based": "<Q25173> has a <P2142> and <Q24871> has a <P2142> and give me the total 1st <P2142> and give me the total 2nd <P2142> and where the total 2nd <P2142> < the total 1st <P2142>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Titanic 2] wd:[Avatar] } ?x p:<box office> [ ps:<box office> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q44578 wd:Q24871 } ?x p:P2142 [ ps:P2142 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Titanic 2] or [Avatar] and has the lowest <box office>?",
        "Squall ID based": "what is <Q44578> or <Q24871> and has the lowest <P2142>?"
    },
    {
        "Question": "When did the first Super Mario Bros. came come out?",
        "ID": "37e85d0c",
        "Entities": "Q23902998:Super Mario Bros.",
        "Mintaka Answer": "1985-09-13",
        "Sparklis label based": "[Super Mario Bros. 2 2] <has part(s)> that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "<Q23902998> <P527> that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_44 WHERE { wd:[Super Mario Bros. 2 2] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . ?P527_7 p:<publication date> [ ps:<publication date> ?P577_44 ] . } ORDER BY ASC(?P577_44) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P577_44 WHERE { wd:Q23902998 p:P527 [ ps:P527 ?P527_7 ] . ?P527_7 p:P577 [ ps:P577 ?P577_44 ] . } ORDER BY ASC(?P577_44) LIMIT 1",
        "Squall label based": "what is the lowest <publication date> of a <has part(s)> of [Super Mario Bros. 2 2]?",
        "Squall ID based": "what is the lowest <P577> of a <P527> of <Q23902998>?"
    },
    {
        "Question": "Which G-Idle members were not born in South Korea?",
        "ID": "ab5b1a22",
        "Entities": "Q884:South Korea,Q51885404:(G)I-dle",
        "Mintaka Answer": "Q55287305:Shuhua,Q56761923:Minnie,Q55287306:Song Yuqi",
        "Sparklis label based": "[(G)I-dle] has a member that has a <place of birth> that not has as a <country> [South Korea]",
        "Sparklis ID based": "<Q51885404> has a member that has a <P19> that not has as a <P17> <Q884>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 ?P19_111 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[(g)i-dle] ] . ?P463_8 p:<place of birth> [ ps:<place of birth> ?P19_111 ] . FILTER ( NOT EXISTS { ?P19_111 p:<country> [ ps:<country> wd:[South Korea] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 ?P19_111 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q51885404 ] . ?P463_8 p:P19 [ ps:P19 ?P19_111 ] . FILTER ( NOT EXISTS { ?P19_111 p:P17 [ ps:P17 wd:Q884 ] . } ) }",
        "Squall label based": "what has <member of> [(g)i-dle] and has a <place of birth> that has not <country> [South Korea]?",
        "Squall ID based": "what has <P463> <Q51885404> and has a <P19> that has not <P17> <Q884>?"
    },
    {
        "Question": "What is the fourth book in Stephen King's Dark Tower series?",
        "ID": "ddaa49c1",
        "Entities": "Q39829:Stephen King, Q280898:The Dark Tower",
        "Mintaka Answer": "Q58881397:Wizard and Glass",
        "Sparklis label based": "[The Dark Tower 2] has as an <author> Stephen King and <has part(s)> with <series ordinal> 4",
        "Sparklis ID based": "<Q280898> has as an <P50> Stephen King and <P527> with <P1545> 4",
        "Sparql label based": "SELECT DISTINCT ?P527_4 WHERE { wd:[The Dark Tower 2] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ; n1:<series ordinal> \"4\" ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_4 WHERE { wd:Q280898 p:P527 [ ps:P527 ?P527_4 ; n1:P1545 \"4\" ] . } LIMIT 1",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"4\" of [The Dark Tower 2]?",
        "Squall ID based": "what is a <P527> at <P1545> \"4\" of <Q280898>?"
    },
    {
        "Question": "How many houses are in Hogwarts in the Harry Potter books?",
        "ID": "27c69df0",
        "Entities": "Q174097:Hogwarts, Q8337:Harry Potter",
        "Mintaka Answer": "4",
        "Sparklis label based": "give me every [Hogwarts House] that has a <present in work> that is <named after> [Harry Potter] and give me the number of [Hogwarts House]",
        "Sparklis ID based": "give me every <Q933971> that has a <P1441> that is <P138> <Q3244512> and give me the number of <Q933971>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q933971_1) AS ?number_of_75) WHERE { ?Q933971_1 wdt:<instance of> wd:[Hogwarts House] . ?Q933971_1 p:<present in work> [ ps:<present in work> ?P1441_38 ] . ?P1441_38 p:<named after> [ ps:<named after> wd:[Harry Potter] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q933971_1) AS ?number_of_75) WHERE { ?Q933971_1 wdt:P31 wd:Q933971 . ?Q933971_1 p:P1441 [ ps:P1441 ?P1441_38 ] . ?P1441_38 p:P138 [ ps:P138 wd:Q3244512 ] . } LIMIT 1",
        "Squall label based": "how many [Hogwarts House] has a <present in work> that has <named after> [Harry Potter]?",
        "Squall ID based": "how many <Q933971> has a <P1441> that has <P138> <Q3244512>?"
    },
    {
        "Question": "How many Grammys did Nirvana win in 1996?",
        "ID": "9a142958",
        "Entities": "Q41254:Grammy Award, Q11649:Nirvana",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Nirvana] <award received> with a <point in time>  something that is the part of [Grammy Awards]   and give me the year of the <point in time> and where the year of the <point in time> = 1996",
        "Sparklis ID based": "<Q11649> <P166> with a <P585> something that is the part of <Q41254> and give me the year of the <P585> and where the year of the <P585> = 1996",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P361_7) AS ?nb) WHERE { wd:[Nirvana] p:<award received> [ pq:<point in time> ?P585_12 ; ps:<award received> ?P361_7 ] . ?P361_7 p:<part of> [ ps:<part of> wd:[Grammy Awards] ] . BIND (year(?P585_12) AS ?expr_99) FILTER (?expr_99 = \"1996\"^^xsd:integer) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P361_7) AS ?nb) WHERE { wd:Q11649 p:P166 [ pq:P585 ?P585_12 ; ps:P166 ?P361_7 ] . ?P361_7 p:P361 [ ps:P361 wd:Q41254 ] . BIND (year(?P585_12) AS ?expr_99) FILTER (?expr_99 = \"1996\"^^xsd:integer) }",
        "Squall label based": "how many thing is a <award received> at a <point in time> whose year is 1996 of [Nirvana] and has <part of> [Grammy Awards]?",
        "Squall ID based": "how many thing is a <P166> at a <P585> whose year is 1996 of <Q11649> and has <P361> <Q41254>?"
    },
    {
        "Question": "Is Brazil larger than Argentina?",
        "ID": "28d6ebbc",
        "Entities": "Q414:Argentina, Q155:Brazil",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Argentina] has  an <area>  and [Brazil] has  an <area>  and give me the total 1st <area> and give me the total 2nd <area> and where the total 2nd <area> > the total 1st <area>",
        "Sparklis ID based": "<Q414> has an <P2046> and <Q155> has an <P2046> and give me the total 1st <P2046> and give me the total 2nd <P2046> and where the total 2nd <P2046> > the total 1st <P2046>",
        "Sparql label based": "ASK { wd:[Argentina] p:<area> [ ps:<area> ?area1 ] . wd:[Brazil] p:<area> [ ps:<area> ?area2 ] . FILTER (?area1 < ?area2) }",
        "Sparql ID based": "ASK { wd:Q414 p:P2046 [ ps:P2046 ?area1 ] . wd:Q155 p:P2046 [ ps:P2046 ?area2 ] . FILTER (?area1 < ?area2) }",
        "Squall label based": "whether [Argentina] has a <area> lesser than a <area> of [Brazil]?",
        "Squall ID based": "whether <Q414> has a <P2046> lesser than a <P2046> of <Q155>?"
    },
    {
        "Question": "Which Harry Potter movie is shortest?",
        "ID": "e66f4db5",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q232009:Harry Potter and the Deathly Hallows \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY ASC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY ASC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the lowest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the lowest <P2047>?"
    },
    {
        "Question": "Did Call of Duty: Black Ops come out before Call of Duty: Advanced Warfare?",
        "ID": "e5dafff3",
        "Entities": "Q16743064:Call of Duty: Advanced Warfare, Q207986:Call of Duty: Black Ops",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Call of Duty: Advanced Warfare] has a <publication date> and [Call of Duty: Black Ops] has a <publication date> and give me the year of the 1st <publication date> and give me the year of the 2nd <publication date>",
        "Sparklis ID based": "<Q16743064> has a <P577> and <Q207986> has a <P577> and give me the year of the 1st <P577> and give me the year of the 2nd <P577>",
        "Sparql label based": "ASK { wd:[Call Of Duty: Advanced Warfare] p:<publication date> [ ps:<publication date> ?date1 ] . wd:[Call Of Duty: Black Ops] p:<publication date> [ ps:<publication date> ?date2 ] . FILTER (?date1 > ?date2) }",
        "Sparql ID based": "ASK { wd:Q16743064 p:P577 [ ps:P577 ?date1 ] . wd:Q207986 p:P577 [ ps:P577 ?date2 ] . FILTER (?date1 > ?date2) }",
        "Squall label based": "whether [Call Of Duty: Advanced Warfare] has a <publication date> greater than a <publication date> of [Call Of Duty: Black Ops]?",
        "Squall ID based": "whether <Q16743064> has a <P577> greater than a <P577> of <Q207986>?"
    },
    {
        "Question": "Which Scary Movie did not have Anna Faris in it?",
        "ID": "6a761609",
        "Entities": "Q4491:Anna Faris",
        "Mintaka Answer": "Q867294:Scary Movie 5",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Anna Faris] and that has as a <part of the series> [Scary Movie pentalogy]",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q4491> and that has as a <P179> <Q82269>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Scary Movie Pentalogy] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Anna Faris] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q82269 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q4491 ] . } ) } LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Scary Movie Pentalogy] and has not <cast member> [Anna Faris]?",
        "Squall ID based": "which <Q11424> has <P179> <Q82269> and has not <P161> <Q4491>?"
    },
    {
        "Question": "Who wrote the Percy Jackson series?",
        "ID": "7bfa6eb1",
        "Entities": "Q3899725:Percy Jackson",
        "Mintaka Answer": "Q212727:Rick Riordan",
        "Sparklis label based": "give me everything that is named after [Percy Jackson] and that has an <author>",
        "Sparklis ID based": "give me everything that is named after <Q3899725> and that has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_12 WHERE { ?thing_8 p:<named after> [ ps:<named after> wd:[Percy Jackson] ] .?thing_8 p:<author> [ ps:<author> ?P50_12 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P50_12 WHERE { ?thing_8 p:P138 [ ps:P138 wd:Q3899725 ] .?thing_8 p:P50 [ ps:P50 ?P50_12 ] . }",
        "Squall label based": "what is a <author> of a thing that has <named after> [Percy Jackson]?",
        "Squall ID based": "what is a <P50> of a thing that has <P138> <Q3899725>?"
    },
    {
        "Question": "What is the deepest lake in the world?",
        "ID": "5dc48009",
        "Entities": "Q23397:lake",
        "Mintaka Answer": "Q5513:Lake Baikal",
        "Sparklis label based": "give me every [lake] that has the highest-to-lowest <vertical depth>",
        "Sparklis ID based": "give me every <Q23397> that has the highest-to-lowest <P4511>",
        "Sparql label based": "SELECT DISTINCT ?Q23397_8 WHERE { ?Q23397_8 wdt:<instance of> wd:[Lake] . ?Q23397_8 p:<vertical depth> [ ps:<vertical depth> ?P4511_45 ] . } ORDER BY DESC(?P4511_45) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q23397_8 WHERE { ?Q23397_8 wdt:P31 wd:Q23397 . ?Q23397_8 p:P4511 [ ps:P4511 ?P4511_45 ] . } ORDER BY DESC(?P4511_45) LIMIT 1",
        "Squall label based": "which [Lake] has the highest <vertical depth>?",
        "Squall ID based": "which <Q23397> has the highest <P4511>?"
    },
    {
        "Question": "Which TWICE members were not born in South Korea?",
        "ID": "f3da5e99",
        "Entities": "Q884:South Korea",
        "Mintaka Answer": "Q23012025:Sana Minatozaki,Q20688186:Mina Myoi,Q23779926:Momo Hirai,Q20688219:Chou Tzu-yu",
        "Sparklis label based": "[Twice] has a member that has a <place of birth> that not has as a <country> [South Korea]",
        "Sparklis ID based": "<Q20645861> has a member that has a <P19> that not has as a <P17> <Q884>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[Twice] ] . ?P463_8 p:<place of birth> [ ps:<place of birth> ?P19_111 ] . FILTER ( NOT EXISTS { ?P19_111 p:<country> [ ps:<country> wd:[South Korea] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q20645861 ] . ?P463_8 p:P19 [ ps:P19 ?P19_111 ] . FILTER ( NOT EXISTS { ?P19_111 p:P17 [ ps:P17 wd:Q884 ] . } ) }",
        "Squall label based": "what has <member of> [Twice] and has a <place of birth> that has not <country> [South Korea]?",
        "Squall ID based": "what has <P463> <Q20645861> and has a <P19> that has not <P17> <Q884>?"
    },
    {
        "Question": "Which Fast and the Furious movies did not star Paul Walker?",
        "ID": "cbb4db0e",
        "Entities": "Q213864:Paul Walker,Q1576873:Fast & Furious",
        "Mintaka Answer": "Q19829521:The Fate of the Furious,Q56559254:Hobbs & Shaw,Q29466808:F9",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Fast & Furious 2] and that not has as a <cast member> [Paul Walker]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1576873> and that not has as a <P161> <Q213864>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Fast & Furious 2] ] . filter ( not exists { ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Paul Walker] ] . } ) }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P179 [ ps:P179 wd:Q1576873 ] . filter ( not exists { ?q11424_1 p:P161 [ ps:P161 wd:Q213864 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Fast & Furious 2] and has not <cast member> [Paul Walker]?",
        "Squall ID based": "which <Q11424> has <P179> <Q1576873> and has not <P161> <Q213864>?"
    },
    {
        "Question": "Who played Ron Weasley?",
        "ID": "57693ff7",
        "Entities": "Q173998:Ron Weasley",
        "Mintaka Answer": "Q19190:Rupert Grint",
        "Sparklis label based": "give me every [human] that is the cast member with <character role> [Ron Weasley] of something",
        "Sparklis ID based": "give me every <Q5> that is the cast member with <P453> <Q173998> of something",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?thing_23 p:<cast member> [ ps:<cast member> ?q5_1 ; n1:<character role> wd:[Ron Weasley] ] . } limit 1",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?thing_23 p:P161 [ ps:P161 ?q5_1 ; n1:P453 wd:Q173998 ] . } limit 1",
        "Squall label based": "which [Human] is a <cast member> at <character role> [Ron Weasley] of a thing?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q173998> of a thing?"
    },
    {
        "Question": "Which actor starred in Fight Club and also is a environmental lawyer?",
        "ID": "4e497e31",
        "Entities": "Q190050:Fight Club",
        "Mintaka Answer": "Q125904:Edward Norton",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Fight Club] and that has as an <occupation> [environmentalist]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q190050> and that has as an <P106> <Q3578589>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Fight Club] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Environmentalist] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q190050 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q3578589 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Fight Club] and has <occupation> [Environmentalist]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q190050> and has <P106> <Q3578589>?"
    },
    {
        "Question": "What was the last Marvel movie with Thanos in it?",
        "ID": "c1ae4b68",
        "Entities": "Q642878:Marvel Cinematic Universe,Q2276627:Thanos",
        "Mintaka Answer": "Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Marvel Cinematic Universe] and that has as a <characters> [Thanos] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q642878> and that has as a <P674> <Q64825451> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Marvel Cinematic Universe] ] . ?Q11424_8 p:<characters> [ ps:<characters> wd:[Thanos] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q642878 ] . ?Q11424_8 p:P674 [ ps:P674 wd:Q64825451 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Marvel Cinematic Universe] and has <characters> [Thanos] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q642878> and has <P674> <Q64825451> and has the highest <P577>?"
    },
    {
        "Question": "Which of the Transformers movies is the longest?",
        "ID": "0878c86f",
        "Entities": "Q1323565:Transformers",
        "Mintaka Answer": "Q6151665:Transformers: Age of Extinction",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Transformers 3] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2073466> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Transformers 3] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q2073466 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Transformers 3] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q2073466> and has the highest <P2047>?"
    },
    {
        "Question": "How many oceans border Russia?",
        "ID": "144632d9",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Russia] has a <located next to body of water> that is the <instance of> [ocean] and give me the number of <located next to body of water>",
        "Sparklis ID based": "<Q159> has a <P206> that is the <P31> <Q9430> and give me the number of <P206>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:[Russia] p:<located in or next to body of water> [ ps:<located in or next to body of water> ?P206_8 ] . ?P206_8 p:<instance of> [ ps:<instance of> wd:[Ocean] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:Q159 p:P206 [ ps:P206 ?P206_8 ] . ?P206_8 p:P31 [ ps:P31 wd:Q9430 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <located in or next to body of water> of [Russia] and has <instance of> [Ocean]?",
        "Squall ID based": "how many thing is a <P206> of <Q159> and has <P31> <Q9430>?"
    },
    {
        "Question": "Is Mount Baker taller than Mount St. Helens?",
        "ID": "512e5818",
        "Entities": "Q4675:Mount St. Helens, Q594387:Mount Baker",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Mount St. Helens] has  an <elevation above sea level>  and [Mount Baker] has  an <elevation above sea level>  and give me the total 1st <elevation above sea level> and give me the total 2nd <elevation above sea level> and where the total 2nd <elevation above sea level> > the total 1st <elevation above sea level>",
        "Sparklis ID based": "<Q4675> has an <P2044> and <Q594387> has an <P2044> and give me the total 1st <P2044> and give me the total 2nd <P2044> and where the total 2nd <P2044> > the total 1st <P2044>",
        "Sparql label based": "ASK { wd:[Mount St. Helens] p:<elevation above sea level> [ ps:<elevation above sea level> ?elev1 ] . wd:[Mount Baker] p:<elevation above sea level> [ ps:<elevation above sea level> ?elev2 ] . FILTER (?elev1 < ?elev2) }",
        "Sparql ID based": "ASK { wd:Q4675 p:P2044 [ ps:P2044 ?elev1 ] . wd:Q594387 p:P2044 [ ps:P2044 ?elev2 ] . FILTER (?elev1 < ?elev2) }",
        "Squall label based": "whether [Mount St. Helens] has a <elevation above sea level> lesser than a <elevation above sea level> of [Mount Baker]?",
        "Squall ID based": "whether <Q4675> has a <P2044> lesser than a <P2044> of <Q594387>?"
    },
    {
        "Question": "How many Olympic medals does Kerri Walsh Jennings have?",
        "ID": "119bd571",
        "Entities": "Q636830:Olympic medal, Q232666:Kerri Walsh Jennings",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Kerri Walsh Jennings] is <participant in> something and give me the number of thing",
        "Sparklis ID based": "<Q232666> is <P1344> something and give me the number of thing",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?thing_53) AS ?number_of_90) WHERE { wd:[Kerri Walsh Jennings] p:<participant in> [ ps:<participant in> ?thing_53 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?thing_53) AS ?number_of_90) WHERE { wd:Q232666 p:P1344 [ ps:P1344 ?thing_53 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <participant in> of [Kerri Walsh Jennings]?",
        "Squall ID based": "how many thing is a <P1344> of <Q232666>?"
    },
    {
        "Question": "What was Steven Spielberg's last movie?",
        "ID": "7090ef9c",
        "Entities": "Q8877:Steven Spielberg",
        "Mintaka Answer": "Q22000542:Ready Player One",
        "Sparklis label based": "give me every [film] that has as a <director> [Steven Spielberg] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q8877> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P57 [ ps:P57 wd:Q8877 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Squall label based": "which [Film] has <director> [Steven Spielberg] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P57> <Q8877> and has the highest <P577>?"
    },
    {
        "Question": "Which book in the Game of Thrones series was released in 2005?",
        "ID": "7ae81704",
        "Entities": "Q45875:A Song of Ice and Fire,2005:None",
        "Mintaka Answer": "Q1764445:A Feast for Crows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [A Song of Ice and Fire] and that has a <publication date> and where the year of the <publication date> = 2005",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q45875> and that has a <P577> and where the year of the <P577> = 2005",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[A Song Of Ice And Fire] ] . ?Q7725634_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . FILTER ( (year(?P577_12) = \"2005\"^^xsd:integer) ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q45875 ] . ?Q7725634_8 p:P577 [ ps:P577 ?P577_12 ] . FILTER ( (year(?P577_12) = \"2005\"^^xsd:integer) ) } LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [A Song Of Ice And Fire] and has a <publication date> whose year is 2005?",
        "Squall ID based": "which <Q7725634> has <P179> <Q45875> and has a <P577> whose year is 2005?"
    },
    {
        "Question": "What is the longest ocean in the world?",
        "ID": "8d92aa60",
        "Entities": "Q9430:ocean",
        "Mintaka Answer": "Q98:Pacific Ocean",
        "Sparklis label based": "give me every [ocean] that has the highest-to-lowest <width>",
        "Sparklis ID based": "give me every <Q9430> that has the highest-to-lowest <P2049>",
        "Sparql label based": "SELECT DISTINCT ?Q9430_1 ?P2049_38 WHERE { ?Q9430_1 wdt:<instance of> wd:[Ocean] . ?Q9430_1 p:<width> [ ps:<width> ?P2049_38 ] . } ORDER BY DESC(?P2049_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q9430_1 ?P2049_38 WHERE { ?Q9430_1 wdt:P31 wd:Q9430 . ?Q9430_1 p:P2049 [ ps:P2049 ?P2049_38 ] . } ORDER BY DESC(?P2049_38) LIMIT 1",
        "Squall label based": "which [Ocean] has the highest <width>?",
        "Squall ID based": "which <Q9430> has the highest <P2049>?"
    },
    {
        "Question": "What Amazon Games Studio game was released in 2021?",
        "ID": "3a24477d",
        "Entities": "Q28129037:Amazon Games,2021:None",
        "Mintaka Answer": "Q61643718:New World",
        "Sparklis label based": "give me every [video game] that has as a <publisher> [Amazon Games] and that has a <publication date> and where the year of the <publication date> = 2021",
        "Sparklis ID based": "give me every <Q7889> that has as a <P123> <Q28129037> and that has a <P577> and where the year of the <P577> = 2021",
        "Sparql label based": "SELECT DISTINCT ?Q7889_98 WHERE { ?Q7889_98 wdt:<instance of> wd:[Video Game] . ?Q7889_98 p:<publisher> [ ps:<publisher> wd:[Amazon Games] ] . ?Q7889_98 p:<publication date> [ ps:<publication date> ?P577_102 ] . FILTER ( (year(?P577_102) = \"2021\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_98 WHERE { ?Q7889_98 wdt:P31 wd:Q7889 . ?Q7889_98 p:P123 [ ps:P123 wd:Q28129037 ] . ?Q7889_98 p:P577 [ ps:P577 ?P577_102 ] . FILTER ( (year(?P577_102) = \"2021\"^^xsd:integer) ) }",
        "Squall label based": "which [Video Game] has <publisher> [Amazon Games] and has a <publication date> whose year is 2021?",
        "Squall ID based": "which <Q7889> has <P123> <Q28129037> and has a <P577> whose year is 2021?"
    },
    {
        "Question": "Which Pirates of the Caribbean movie has the longest run time?",
        "ID": "98b29d28",
        "Entities": "Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q54274:Pirates of the Caribbean: At World's End",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "select distinct ?q11424_8 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . ?q11424_8 p:<duration> [ ps:<duration> ?p2047_12 ] . } order by desc(?p2047_12) limit 1",
        "Sparql ID based": "select distinct ?q11424_8 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P179 [ ps:P179 wd:Q194318 ] . ?q11424_8 p:P2047 [ ps:P2047 ?p2047_12 ] . } order by desc(?p2047_12) limit 1",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has the highest <P2047>?"
    },
    {
        "Question": "How many Scary Movie movies did Anna Faris appear in?",
        "ID": "421d87a1",
        "Entities": "Q219424:Scary Movie,Q4491:Anna Faris",
        "Mintaka Answer": "Q219424:Scary Movie,Q642501:Scary Movie 2,Q635937:Scary Movie 3,Q1055299:Scary Movie 4",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Scary Movie pentalogy] and that has as a <cast member> [Anna Faris] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q82269> and that has as a <P161> <Q4491> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_46) AS ?number_of_83) WHERE { ?Q11424_46 wdt:<instance of> wd:[Film] . ?Q11424_46 p:<part of the series> [ ps:<part of the series> wd:[Scary Movie Pentalogy] ] . ?Q11424_46 p:<cast member> [ ps:<cast member> wd:[Anna Faris] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_46) AS ?number_of_83) WHERE { ?Q11424_46 wdt:P31 wd:Q11424 . ?Q11424_46 p:P179 [ ps:P179 wd:Q82269 ] . ?Q11424_46 p:P161 [ ps:P161 wd:Q4491 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Scary Movie Pentalogy] and has <cast member> [Anna Faris]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q82269> and has <P161> <Q4491>?"
    },
    {
        "Question": "Which of Prince Charles' sons did not marry someone from the UK?",
        "ID": "8b981b27",
        "Entities": "Q145:United Kingdom, Q43274:Charles, Prince of Wales",
        "Mintaka Answer": "Q152316:Prince Harry, Duke of Sussex",
        "Sparklis label based": "[Charles] has a <child> that has a <spouse> that not has as a <country of citizenship> [United Kingdom]",
        "Sparklis ID based": "<Q43274> has a <P40> that has a <P26> that not has as a <P27> <Q145>",
        "Sparql label based": "SELECT DISTINCT ?P40_8 WHERE { wd:[Charles] p:<child> [ ps:<child> ?P40_8 ] . ?P40_8 p:<spouse> [ ps:<spouse> ?P26_47 ] . FILTER ( NOT EXISTS { ?P26_47 p:<country of citizenship> [ ps:<country of citizenship> wd:[United Kingdom] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P40_8 WHERE { wd:Q43274 p:P40 [ ps:P40 ?P40_8 ] . ?P40_8 p:P26 [ ps:P26 ?P26_47 ] . FILTER ( NOT EXISTS { ?P26_47 p:P27 [ ps:P27 wd:Q145 ] . } ) }",
        "Squall label based": "what is a <child> of [Charles] and has a <spouse> that has not <country of citizenship> [United Kingdom]?",
        "Squall ID based": "what is a <P40> of <Q43274> and has a <P26> that has not <P27> <Q145>?"
    },
    {
        "Question": "What is the largest city in Egypt by population according to the UN 2018 population estimates?",
        "ID": "d175d8ca",
        "Entities": "Q79:Egypt, Q1065:United Nations",
        "Mintaka Answer": "Q85:Cairo",
        "Sparklis label based": "give me every [largest city] that has as a <country> [Egypt 2] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q51929311> that has as a <P17> <Q79> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q51929311_1 WHERE { ?Q51929311_1 wdt:<instance of> wd:[Largest City] . ?Q51929311_1 p:<country> [ ps:<country> wd:[Egypt 2] ] . ?Q51929311_1 p:<population> [ ps:<population> ?P1082_37 ] . } ORDER BY DESC(?P1082_37)",
        "Sparql ID based": "SELECT DISTINCT ?Q51929311_1 WHERE { ?Q51929311_1 wdt:P31 wd:Q51929311 . ?Q51929311_1 p:P17 [ ps:P17 wd:Q79 ] . ?Q51929311_1 p:P1082 [ ps:P1082 ?P1082_37 ] . } ORDER BY DESC(?P1082_37)",
        "Squall label based": "which [Largest City] has <country> [Egypt 2] and has the descending <population>?",
        "Squall ID based": "which <Q51929311> has <P17> <Q79> and has the descending <P1082>?"
    },
    {
        "Question": "Which mountain in Brazil is smaller: Pedra da Mina or Monte Caburai?",
        "ID": "5edaa144",
        "Entities": "Q2305072:Monte Cabura\u00ed, Q2328821:Pedra da Mina, Q155:Brazil",
        "Mintaka Answer": "Q2305072:Monte Cabura\u00ed",
        "Sparklis label based": "give me every [mountain] that has  the lowest-to-highest <elevation above sea level>  and that is [Monte Cabura\u00ed] or that is [Pedra da Mina]",
        "Sparklis ID based": "give me every <Q8502> that has the lowest-to-highest <P2044> and that is <Q2305072> or that is <Q2328821>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Monte Cabura\u00ed] wd:[Pedra Da Mina] } ?x p:<elevation above sea level> [ ps:<elevation above sea level> ?elevation] . } ORDER BY ASC(?elevation) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q2305072 wd:Q2328821 } ?x p:P2044 [ ps:P2044 ?elevation] . } ORDER BY ASC(?elevation) LIMIT 1",
        "Squall label based": "what is [Monte Cabura\u00ed] or [Pedra Da Mina] and has the lowest <elevation above sea level>?",
        "Squall ID based": "what is <Q2305072> or <Q2328821> and has the lowest <P2044>?"
    },
    {
        "Question": "Which movie is part of the Marvel Cinematic Universe and has Chadwick Boseman in the titular role?",
        "ID": "b6c5c17c",
        "Entities": "Q5066520:Chadwick Boseman,Q642878:Marvel Cinematic Universe",
        "Mintaka Answer": "Q23780734:Black Panther",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Chadwick Boseman] and that [Marvel Cinematic Universe] is <fictional universe described in>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q5066520> and that <Q642878> is <P1445>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Chadwick Boseman] ] . wd:[Marvel Cinematic Universe] p:<fictional universe described in> [ ps:<fictional universe described in> ?Q11424_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q5066520 ] . wd:Q642878 p:P1445 [ ps:P1445 ?Q11424_1 ] . }",
        "Squall label based": "which [Film] has <cast member> [Chadwick Boseman] and is a <fictional universe described in> of [Marvel Cinematic Universe]?",
        "Squall ID based": "which <Q11424> has <P161> <Q5066520> and is a <P1445> of <Q642878>?"
    },
    {
        "Question": "Which Harry Potter book sold the best?",
        "ID": "0d725892",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that has a <units sold>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that has a <P2664>",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?q7725634_1 p:<units sold> [ ps:<units sold> ?p2664_39 ] . } limit 1",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ ps:P179 wd:Q8337 ] . ?q7725634_1 p:P2664 [ ps:P2664 ?p2664_39 ] . } limit 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has a <units sold>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has a <P2664>?"
    },
    {
        "Question": "What is the latest US state to be admitted to the union that is not Hawaii?",
        "ID": "faa4e84c",
        "Entities": "Q30: United States of America, Q782: Hawaii",
        "Mintaka Answer": "Q797: Alaska",
        "Sparklis label based": "give me every [U.S. state] that has the highest-to-lowest <inception> and that not is [Hawaii]",
        "Sparklis ID based": "give me every <Q35657> that has the highest-to-lowest <P571> and that not is <Q547795>",
        "Sparql label based": "SELECT DISTINCT ?Q35657_188 WHERE { ?Q35657_188 wdt:<instance of> wd:[U.s. State] . ?Q35657_188 p:<inception> [ ps:<inception> ?P571_225 ] . FILTER ( !( ?Q35657_188 = wd:[Hawaii 2] ) ) } ORDER BY DESC(?P571_225) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q35657_188 WHERE { ?Q35657_188 wdt:P31 wd:Q35657 . ?Q35657_188 p:P571 [ ps:P571 ?P571_225 ] . FILTER ( !( ?Q35657_188 = wd:Q782 ) ) } ORDER BY DESC(?P571_225) LIMIT 1",
        "Squall label based": "which [U.s. State] has the highest <inception> and is not [Hawaii 2]?",
        "Squall ID based": "which <Q35657> has the highest <P571> and is not <Q782>?"
    },
    {
        "Question": "Which country has a larger population, Haiti or Benin?",
        "ID": "e8d2b9e0",
        "Entities": "Q790:Haiti,Q962:Benin",
        "Mintaka Answer": "Q962:Benin",
        "Sparklis label based": "[Haiti] has  a <population>  and [Benin] has  a <population>  and give me the total 1st <population> and give me the total 2nd <population> and where the total 2nd <population> < the total 1st <population>",
        "Sparklis ID based": "<Q790> has a <P1082> and <Q962> has a <P1082> and give me the total 1st <P1082> and give me the total 2nd <P1082> and where the total 2nd <P1082> <_the_total_1st_<population>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Haiti] wd:[Benin] } ?x p:<population> [ ps:<population> ?population ] . } ORDER BY DESC(?population) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q790 wd:Q962 } ?x p:P1082 [ ps:P1082 ?population ] . } ORDER BY DESC(?population) LIMIT 1",
        "Squall label based": "what is [Haiti] or [Benin] and has the highest <population>?",
        "Squall ID based": "what is <Q790> or <Q962> and has the highest <P1082>?"
    },
    {
        "Question": "How many books are in Stieg Larsson's Millennium novel series?",
        "ID": "42ebeb52",
        "Entities": "Q186317:Stieg Larsson, Q847022:Millennium",
        "Mintaka Answer": "3",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Millennium]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q847022>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:[Millennium] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:Q847022 p:P527 [ ps:P527 ?P527_4 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <has part(s)> of [Millennium]?",
        "Squall ID based": "how many thing is a <P527> of <Q847022>?"
    },
    {
        "Question": "Which Marvel movie made the most money?",
        "ID": "4e3dac10",
        "Entities": "Q642878:Marvel Cinematic Universe",
        "Mintaka Answer": "Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Marvel Cinematic Universe] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q642878> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Marvel Cinematic Universe] ] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_13 ] . } ORDER BY DESC(?P2142_13) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q642878 ] . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_13 ] . } ORDER BY DESC(?P2142_13) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Marvel Cinematic Universe] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q642878> and has the highest <P2142>?"
    },
    {
        "Question": "How many members are in The Strokes?",
        "ID": "a59505c6",
        "Entities": "Q211583:The Strokes",
        "Mintaka Answer": "Q350511:Julian Casablancas,Q1195235:Nikolai Fraiture,Q597936:Albert Hammond, Jr.,Q522260:Fabrizio Moretti,Q955635:Nick Valensi",
        "Sparklis label based": "give me every [human] that is the part(s) of [The Strokes]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q211583>",
        "Sparql label based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:<instance of> wd:[Human] . wd:[The Strokes] p:<has part(s)> [ ps:<has part(s)> ?Q5_39 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:P31 wd:Q5 . wd:Q211583 p:P527 [ ps:P527 ?Q5_39 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [The Strokes]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q211583>?"
    },
    {
        "Question": "Which of Nefertiti's daughters is older, Meketaten or Setepenre?",
        "ID": "a89e31d4",
        "Entities": "Q470031:Setepenre, Q40930:Nefertiti, Q153648:Meketaten",
        "Mintaka Answer": "Q153648:Meketaten",
        "Sparklis label based": "[Setepenre] has as a <mother> [Nefertiti] and has a <date of birth> and [Meketaten] has as a <mother> [Nefertiti] and has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "<Q470031> has as a <P25> <Q40930> and has a <P569> and <Q153648> has as a <P25> <Q40930> and has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Nefertiti] wd:[Meketaten] } ?x p:<date of birth> [ ps:<date of birth> ?age ] . } ORDER BY DESC(?age) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q40930 wd:Q153648 } ?x p:P569 [ ps:P569 ?age ] . } ORDER BY DESC(?age) LIMIT 1",
        "Squall label based": "what is [Nefertiti] or [Meketaten] and has the highest <date of birth>?",
        "Squall ID based": "what is <Q40930> or <Q153648> and has the highest <P569>?"
    },
    {
        "Question": "Which Marvel movie made the least money?",
        "ID": "b87e4c28",
        "Entities": "Q642878:Marvel Cinematic Universe",
        "Mintaka Answer": "Q466611:The Incredible Hulk",
        "Sparklis label based": "[Marvel Cinematic Universe] is the <part of the series> of something that has the lowest-to-highest <box office>",
        "Sparklis ID based": "<Q642878> is the <P179> of something that has the lowest-to-highest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:<part of the series> [ ps:<part of the series> wd:[Marvel Cinematic Universe] ] . ?thing_8 p:<box office> [ ps:<box office> ?P2142_47 ] . } ORDER BY ASC(?P2142_47) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:P179 [ ps:P179 wd:Q642878 ] . ?thing_8 p:P2142 [ ps:P2142 ?P2142_47 ] . } ORDER BY ASC(?P2142_47) LIMIT 1",
        "Squall label based": "what has <part of the series> [Marvel Cinematic Universe] and has the lowest <box office>?",
        "Squall ID based": "what has <P179> <Q642878> and has the lowest <P2142>?"
    },
    {
        "Question": "Who is a member of both A Perfect Circle and the Smashing Pumpkins?",
        "ID": "d729f32b",
        "Entities": "Q184217:The Smashing Pumpkins,Q300519:A Perfect Circle",
        "Mintaka Answer": "Q433617:James Iha",
        "Sparklis label based": "give me every [human] that is the part(s) of [A Perfect Circle] and of [The Smashing Pumpkins]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q300519> and of <Q184217>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[A Perfect Circle] p:<has part(s)> [ ps:<has part(s)> ?Q5_1 ] . wd:[The Smashing Pumpkins] p:<has part(s)> [ ps:<has part(s)> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q300519 p:P527 [ ps:P527 ?Q5_1 ] . wd:Q184217 p:P527 [ ps:P527 ?Q5_1 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [A Perfect Circle] and [The Smashing Pumpkins]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q300519> and <Q184217>?"
    },
    {
        "Question": "Which member of The White Stripes appeared in Walk Hard: The Dewey Cox Story?",
        "ID": "60df9411",
        "Entities": "Q268160:The White Stripes, Q2060077:Walk Hard: The Dewey Cox Story",
        "Mintaka Answer": "Q272031:Jack White",
        "Sparklis label based": "give me every [human] that is the <member of> [The White Stripes] and that is the <cast member> of [Walk Hard: The Dewey Cox Story]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q268160> and that is the <P161> of <Q2060077>",
        "Sparql label based": "SELECT DISTINCT ?Q5_188 WHERE { ?Q5_188 wdt:<instance of> wd:[Human] . ?Q5_188 p:<member of> [ ps:<member of> wd:[The White Stripes] ] . wd:[Walk Hard: The Dewey Cox Story] p:<cast member> [ ps:<cast member> ?Q5_188 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_188 WHERE { ?Q5_188 wdt:P31 wd:Q5 . ?Q5_188 p:P463 [ ps:P463 wd:Q268160 ] . wd:Q2060077 p:P161 [ ps:P161 ?Q5_188 ] . }",
        "Squall label based": "which [Human] has <member of> [The White Stripes] and is a <cast member> of [Walk Hard: The Dewey Cox Story]?",
        "Squall ID based": "which <Q5> has <P463> <Q268160> and is a <P161> of <Q2060077>?"
    },
    {
        "Question": "Who is the tallest NBA player of all time?",
        "ID": "2401350a",
        "Entities": "Q155223:National Basketball Association",
        "Mintaka Answer": "Q58590:Yao Ming",
        "Sparklis label based": "[National Basketball Association] is the league of something that has the highest-to-lowest <height>",
        "Sparklis ID based": "<Q155223> is the league of something that has the highest-to-lowest <P2048>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 ?P2048_111 WHERE { ?thing_8 p:<league> [ ps:<league> wd:[National Basketball Association] ] . ?thing_8 p:<height> [ ps:<height> ?P2048_111 ] . } ORDER BY DESC(?P2048_111) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 ?P2048_111 WHERE { ?thing_8 p:P118 [ ps:P118 wd:Q155223 ] . ?thing_8 p:P2048 [ ps:P2048 ?P2048_111 ] . } ORDER BY DESC(?P2048_111) LIMIT 1",
        "Squall label based": "what has <league> [National Basketball Association] and has the highest <height>?",
        "Squall ID based": "what has <P118> <Q155223> and has the highest <P2048>?"
    },
    {
        "Question": "Who was a senator from California and died in office in 1945?",
        "ID": "9ab5d8c8",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q143644:Hiram Johnson",
        "Sparklis label based": "give me every [human] that has as a <position held> with an <electoral district> that has as a <located in the administrative territorial entity> [California] [United States senator] and that has a <date of death> and where the year of the <date of death> = 1945",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P768> that has as a <P131> <Q99> <Q4416090> and that has a <P570> and where the year of the <P570> = 1945",
        "Sparql label based": "SELECT DISTINCT ?Q5_102 WHERE { ?Q5_102 wdt:<instance of> wd:[Human] . ?Q5_102 p:<position held> [ pq:<electoral district> ?P768_5 ; ps:<position held> wd:[United States Senator] ] . ?P768_5 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q5_102 p:<date of death> [ ps:<date of death> ?P570_10 ] . FILTER ( (year(?P570_10) = \"1945\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_102 WHERE { ?Q5_102 wdt:P31 wd:Q5 . ?Q5_102 p:P39 [ pq:P768 ?P768_5 ; ps:P39 wd:Q4416090 ] . ?P768_5 p:P131 [ ps:P131 wd:Q99 ] . ?Q5_102 p:P570 [ ps:P570 ?P570_10 ] . FILTER ( (year(?P570_10) = \"1945\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <electoral district> that has <located in the administrative territorial entity> [California] [United States Senator] and has a <date of death> whose year is 1945?",
        "Squall ID based": "which <Q5> has <P39> at a <P768> that has <P131> <Q99> <Q4416090> and has a <P570> whose year is 1945?"
    },
    {
        "Question": "In which Tim Burton movie is the music not made by Danny Elfman?",
        "ID": "f8b98e1c",
        "Entities": "Q56008:Tim Burton,Q193338:Danny Elfman",
        "Mintaka Answer": "Q212041:Sweeney Todd: The Demon Barber of Fleet Street",
        "Sparklis label based": "give me every [film] that has as a <director> [Tim Burton] and that not has as a <composer> [Danny Elfman]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q56008> and that not has as a <P86> <Q193338>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:<instance of> wd:[Film] . ?Q11424_311 p:<director> [ ps:<director> wd:[Tim Burton] ] . FILTER ( NOT EXISTS { ?Q11424_311 p:<composer> [ ps:<composer> wd:[Danny Elfman] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:P31 wd:Q11424 . ?Q11424_311 p:P57 [ ps:P57 wd:Q56008 ] . FILTER ( NOT EXISTS { ?Q11424_311 p:P86 [ ps:P86 wd:Q193338 ] . } ) }",
        "Squall label based": "which [Film] has <director> [Tim Burton] and has not <composer> [Danny Elfman]?",
        "Squall ID based": "which <Q11424> has <P57> <Q56008> and has not <P86> <Q193338>?"
    },
    {
        "Question": "What is the shortest song in the world?",
        "ID": "bb563419",
        "Entities": "Q7366:song",
        "Mintaka Answer": "Q1462831:You Suffer",
        "Sparklis label based": "give me every [single] that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me every <Q134556> that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q134556_1 WHERE { ?Q134556_1 wdt:<instance of> wd:[Single] . ?Q134556_1 p:<duration> [ ps:<duration> ?P2047_103 ] . } ORDER BY ASC(?P2047_103) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q134556_1 WHERE { ?Q134556_1 wdt:P31 wd:Q134556 . ?Q134556_1 p:P2047 [ ps:P2047 ?P2047_103 ] . } ORDER BY ASC(?P2047_103) LIMIT 1",
        "Squall label based": "which [Single] has the lowest <duration>?",
        "Squall ID based": "which <Q134556> has the lowest <P2047>?"
    },
    {
        "Question": "What is the second book in the Eragon series called?",
        "ID": "aab5684a",
        "Entities": "Q185449:Eragon,2:None",
        "Mintaka Answer": "Q308982:Eldest",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 2 [Inheritance Cycle]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 2 <Q2699024>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"2\" ; ps:<part of the series> wd:[Inheritance Cycle] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"2\" ; ps:P179 wd:Q2699024 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"2\" [Inheritance Cycle]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"2\" <Q2699024>?"
    },
    {
        "Question": "How many Rambo movies has Sylvester Stallone appeared in?",
        "ID": "6938c5c5",
        "Entities": "Q1621266:Rambo,Q40026:Sylvester Stallone",
        "Mintaka Answer": "Q159870:Rambo,Q244963:First Blood,Q392355:Rambo III,Q319783:Rambo: First Blood Part II,Q54854465:Rambo: Last Blood",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Rambo] and that has as a <cast member> [Sylvester Stallone] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1621266> and that has as a <P161> <Q40026> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_159) AS ?number_of_196) WHERE { ?Q11424_159 wdt:<instance of> wd:[Film] . ?Q11424_159 p:<part of the series> [ ps:<part of the series> wd:[Rambo] ] . ?Q11424_159 p:<cast member> [ ps:<cast member> wd:[Sylvester Stallone] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_159) AS ?number_of_196) WHERE { ?Q11424_159 wdt:P31 wd:Q11424 . ?Q11424_159 p:P179 [ ps:P179 wd:Q1621266 ] . ?Q11424_159 p:P161 [ ps:P161 wd:Q40026 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Rambo] and has <cast member> [Sylvester Stallone]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q1621266> and has <P161> <Q40026>?"
    },
    {
        "Question": "What is the largest city in Kansas by population?",
        "ID": "8882a322",
        "Entities": "Q1558:Kansas",
        "Mintaka Answer": "Q49266:Wichita",
        "Sparklis label based": "give me every [city in the United States] that has as a <located in the administrative territorial entity> a [county of Kansas] that has as a <located in the administrative territorial entity> [Kansas] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q1093829> that has as a <P131> a <Q13410444> that has as a <P131> <Q1558> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:<instance of> wd:[City In The United States] . ?P131_38 wdt:<instance of> wd:[County Of Kansas] . ?Q1093829_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_38 ] . ?P131_38 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Kansas] ] . ?Q1093829_1 p:<population> [ ps:<population> ?P1082_75 ] . } ORDER BY DESC(?P1082_75) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:P31 wd:Q1093829 . ?P131_38 wdt:P31 wd:Q13410444 . ?Q1093829_1 p:P131 [ ps:P131 ?P131_38 ] . ?P131_38 p:P131 [ ps:P131 wd:Q1558 ] . ?Q1093829_1 p:P1082 [ ps:P1082 ?P1082_75 ] . } ORDER BY DESC(?P1082_75) LIMIT 1",
        "Squall label based": "which [City In The United States] has the highest <population> and has <located in the administrative territorial entity> a [County Of Kansas] that has <located in the administrative territorial entity> [Kansas]?",
        "Squall ID based": "which <Q1093829> has the highest <P1082> and has <P131> a <Q13410444> that has <P131> <Q1558>?"
    },
    {
        "Question": "Which movie had a higher lifetime gross, Jurassic World or The Lion King?",
        "ID": "47feccd4",
        "Entities": "Q36479:The Lion King,Q3512046:Jurassic World",
        "Mintaka Answer": "Q3512046:Jurassic World",
        "Sparklis label based": "[The Lion King] has a <box office> with valid in place [worldwide] and [Jurassic World] has a <box office> with valid in place [worldwide]",
        "Sparklis ID based": "<Q27044293> has a <P2142> with valid in place <Q13780930> and <Q3512046> has a <P2142> with valid in place <Q13780930>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[The Lion King 2] wd:[Jurassic World] } ?x p:<box office> [ ps:<box office> ?box; n1:<valid in place> wd:[Worldwide] ] . } ORDER BY DESC(?age) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q36479 wd:Q3512046 } ?x p:P2142 [ ps:P2142 ?box; n1:P3005 wd:Q13780930 ] . } ORDER BY DESC(?age) LIMIT 1",
        "Squall label based": "what is [The Lion King 2] or [Jurassic World] and has <box office> at <valid in place> [Worldwide] a thing?",
        "Squall ID based": "what is <Q36479> or <Q3512046> and has <P2142> at <P3005> <Q13780930> a thing?"
    },
    {
        "Question": "Who was the first president to be assassinated?",
        "ID": "7eaacab7",
        "Entities": "Q11696:President of the United States,1:None",
        "Mintaka Answer": "Q91:Abraham Lincoln",
        "Sparklis label based": "give me every [human] that has as a <position held> with the lowest-to-highest <start time> [President of the United States] and that has as a <manner of death> [homicide]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q11696> and that has as a <P1196> <Q149086>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<start time> ?P580_5 ; ps:<position held> wd:[President Of The United States] ] . ?Q5_1 p:<manner of death> [ ps:<manner of death> wd:[Homicide] ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P580 ?P580_5 ; ps:P39 wd:Q11696 ] . ?Q5_1 p:P1196 [ ps:P1196 wd:Q149086 ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [President Of The United States] and has <manner of death> [Homicide]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q11696> and has <P1196> <Q149086>?"
    },
    {
        "Question": "Who does Lebron James play for?",
        "ID": "a4c35218",
        "Entities": "Q36159:LeBron James",
        "Mintaka Answer": "Q121783:Los Angeles Lakers",
        "Sparklis label based": "[LeBron James 2] has a <member of sports team> and not with an <end time>",
        "Sparklis ID based": "<Q36159> has a <P54> and not with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?P54_8 WHERE { wd:[Lebron James 2] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . FILTER ( NOT EXISTS { wd:[Lebron James 2] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ; n1:<end time> ?P582_46 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P54_8 WHERE { wd:Q36159 p:P54 [ ps:P54 ?P54_8 ] . FILTER ( NOT EXISTS { wd:Q36159 p:P54 [ ps:P54 ?P54_8 ; n1:P582 ?P582_46 ] . } ) }",
        "Squall label based": "what is a <member of sports team> of [Lebron James 2] and is not a <member of sports team> at a <end time> of [Lebron James 2]?",
        "Squall ID based": "what is a <P54> of <Q36159> and is not a <P54> at a <P582> of <Q36159>?"
    },
    {
        "Question": "Did The Chordettes' Mr. Sandman come out before 1955?",
        "ID": "b23d3186",
        "Entities": "Q931296:Mr. Sandman,Q1364592:The Chordettes,1955:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Mr. Sandman] has a <publication date> and where the year of the <publication date> < 1955",
        "Sparklis ID based": "<Q931296> has a <P577> and where the year of the <P577> < 1955",
        "Sparql label based": "Ask { wd:[Mr. Sandman] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"1955\"^^xsd:integer) ) }",
        "Sparql ID based": "Ask { wd:Q931296 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"1955\"^^xsd:integer) ) }",
        "Squall label based": "whether [Mr. Sandman] has a <publication date> whose year is lesser than 1955?",
        "Squall ID based": "whether <Q931296> has a <P577> whose year is lesser than 1955?"
    },
    {
        "Question": "What was the third movie in the Peter Jackson Lord of the Rings trilogy?",
        "ID": "ee6fecb6",
        "Entities": "Q4465:Peter Jackson,Q190214:The Lord of the Rings trilogy,3:None",
        "Mintaka Answer": "Q131074:The Lord of the Rings: The Return of the King",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [The Lord of the Rings trilogy]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q190214>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q190214 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [The Lord Of The Rings Trilogy]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q190214>?"
    },
    {
        "Question": "Which member of the Bee Gees has not passed away?",
        "ID": "3686ddfa",
        "Entities": "Q133405:Bee Gees",
        "Mintaka Answer": "Q296872:Barry Gibb",
        "Sparklis label based": "[Bee Gees] is the <instance of> musical group and <has part(s)> and something that not has a <date of death>",
        "Sparklis ID based": "<Q133405> is the <P31> musical group and <P527> and something that not has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[Bee Gees] ] . FILTER ( NOT EXISTS { ?P463_8 p:<date of death> [ ps:<date of death> ?P570_111 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q133405 ] . FILTER ( NOT EXISTS { ?P463_8 p:P570 [ ps:P570 ?P570_111 ] . } ) }",
        "Squall label based": "what has <member of> [Bee Gees] and has not a <date of death>?",
        "Squall ID based": "what has <P463> <Q133405> and has not a <P570>?"
    },
    {
        "Question": "Which Michael Jackson song came out after his death?",
        "ID": "80b92c74",
        "Entities": "Q2831:Michael Jackson",
        "Mintaka Answer": "Q1621982:This Is It",
        "Sparklis label based": "give me every [single] that has as a <performer>  [Michael Jackson] that has  a <date of death>   and that has  a <publication date>  and where the <publication date> > the <date of death>",
        "Sparklis ID based": "give me every <Q134556> that has as a <P175> <Q2831> that has a <P570> and that has a <P577> and where the <P577> > the <P570>",
        "Sparql label based": "SELECT DISTINCT ?Q134556_106 WHERE { ?Q134556_106 wdt:<instance of> wd:[Single] . wd:[Michael Jackson] p:<date of death> [ ps:<date of death> ?P570_12 ] . ?Q134556_106 p:<performer> [ ps:<performer> wd:[Michael Jackson] ] . ?Q134556_106 p:<publication date> [ ps:<publication date> ?P577_4 ] . FILTER ( (?P577_4 > ?P570_12) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q134556_106 WHERE { ?Q134556_106 wdt:P31 wd:Q134556 . wd:Q2831 p:P570 [ ps:P570 ?P570_12 ] . ?Q134556_106 p:P175 [ ps:P175 wd:Q2831 ] . ?Q134556_106 p:P577 [ ps:P577 ?P577_4 ] . FILTER ( (?P577_4 > ?P570_12) ) }",
        "Squall label based": "which [Single] has <performer> [Michael Jackson] and has a <publication date> greater than a <date of death> of [Michael Jackson]?",
        "Squall ID based": "which <Q134556> has <P175> <Q2831> and has a <P577> greater than a <P570> of <Q2831>?"
    },
    {
        "Question": "What is the longest opera?",
        "ID": "71937dea",
        "Entities": "Q1344:opera",
        "Mintaka Answer": "Q465540:Die Meistersinger von N\u00fcrnberg",
        "Sparklis label based": "give me every [dramatico-musical work] that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q58483083> that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q58483083_188 WHERE { ?Q58483083_188 wdt:<instance of> wd:[Dramatico-musical Work] . ?Q58483083_188 p:<duration> [ ps:<duration> ?P2047_290 ] . } ORDER BY DESC(?P2047_290) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q58483083_188 WHERE { ?Q58483083_188 wdt:P31 wd:Q58483083 . ?Q58483083_188 p:P2047 [ ps:P2047 ?P2047_290 ] . } ORDER BY DESC(?P2047_290) LIMIT 1",
        "Squall label based": "which [Dramatico-musical Work] has the highest <duration>?",
        "Squall ID based": "which <Q58483083> has the highest <P2047>?"
    },
    {
        "Question": "Which Lord of the Rings trilogy book does not feature the living warrior Boromir?",
        "ID": "38ed6e9f",
        "Entities": "Q219504:Boromir, Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q332581:The Return of the King",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Lord of the Rings] that not has as a <characters> Boromir",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> that not has as a <P674> Boromir",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228>?"
    },
    {
        "Question": "What year did the last Harry Potter book come out?",
        "ID": "8f760383",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "2007",
        "Sparklis label based": "[Harry Potter 2] <has part(s)> that has a <publication date> and give me highest-to-lowest the year of the <publication date>",
        "Sparklis ID based": "<Q8337> <P527> that has a <P577> and give me highest-to-lowest the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 ?P577_46 ?expr_132 WHERE { wd:[Harry Potter 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_46 ] . BIND (year(?P577_46) AS ?expr_132) } ORDER BY DESC(?expr_132) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 ?P577_46 ?expr_132 WHERE { wd:Q8337 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_46 ] . BIND (year(?P577_46) AS ?expr_132) } ORDER BY DESC(?expr_132) LIMIT 1",
        "Squall label based": "what is a <has part(s)> of [Harry Potter 2] and has a <publication date> whose year is the highest thing?",
        "Squall ID based": "what is a <P527> of <Q8337> and has a <P577> whose year is the highest thing?"
    },
    {
        "Question": "Which current or former vice president of the U.S. is South Asian American?",
        "ID": "902c783d",
        "Entities": "Q30:United States of America, Q39086965:South Asian American",
        "Mintaka Answer": "Q10853588:Kamala Harris",
        "Sparklis label based": "give me every [human] that has as an <ethnic group> [South Asian American] and that has as a <position held> [Vice President of the United States] and that has as a <country of citizenship> [United States of America]",
        "Sparklis ID based": "give me every <Q5> that has as an <P172> <Q39086965> and that has as a <P39> <Q11699> and that has as a <P27> <Q30>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<ethnic group> [ ps:<ethnic group> wd:[South Asian American] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[United States Of America] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P172 [ ps:P172 wd:Q39086965 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q11699 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q30 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <ethnic group> [South Asian American] and has <position held> [Vice President Of The United States] and has <country of citizenship> [United States Of America]?",
        "Squall ID based": "which <Q5> has <P172> <Q39086965> and has <P39> <Q11699> and has <P27> <Q30>?"
    },
    {
        "Question": "How many wives did Roman Emperor Vitellius have?",
        "ID": "26ec2144",
        "Entities": "Q1417:Vitellius",
        "Mintaka Answer": "Q542643:Petronia,Q260039:Galeria Fundana",
        "Sparklis label based": "[Vitellius] has a <spouse> and give me the number of <spouse>",
        "Sparklis ID based": "<Q1417> has a <P26> and give me the number of <P26>",
        "Sparql label based": "SELECT DISTINCT ?P26_8 WHERE { wd:[Vitellius] p:<spouse> [ ps:<spouse> ?P26_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P26_8 WHERE { wd:Q1417 p:P26 [ ps:P26 ?P26_8 ] . }",
        "Squall label based": "what is a <spouse> of [Vitellius]?",
        "Squall ID based": "what is a <P26> of <Q1417>?"
    },
    {
        "Question": "What is the longest song on the Beatles' White Album?",
        "ID": "bc3e83ef",
        "Entities": "Q1299:The Beatles, Q1299:The Beatles",
        "Mintaka Answer": "Q1346881:Revolution 9",
        "Sparklis label based": "give me every [musical work/composition] that has as a <performer>  [The Beatles]  and that is the <part of> something that has as a <nickname>  The White Album   and that has  the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q105543609> that has as a <P175> <Q3295515> and that is the <P361> something that has as a <P1449> The White Album and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q105543609_12 WHERE { ?Q105543609_12 wdt:<instance of> wd:[Musical Work/composition] . ?Q105543609_12 p:<performer> [ ps:<performer> wd:[The Beatles 2] ] . ?Q105543609_12 p:<part of> [ ps:<part of> ?thing_30 ] . ?thing_30 p:<nickname> [ ps:<nickname> \"The White Album\"@en ] . ?Q105543609_12 p:<duration> [ ps:<duration> ?P2047_5 ] . } ORDER BY DESC(?P2047_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q105543609_12 WHERE { ?Q105543609_12 wdt:P31 wd:Q105543609 . ?Q105543609_12 p:P175 [ ps:P175 wd:Q1299 ] . ?Q105543609_12 p:P361 [ ps:P361 ?thing_30 ] . ?thing_30 p:P1449 [ ps:P1449 \"The White Album\"@en ] . ?Q105543609_12 p:P2047 [ ps:P2047 ?P2047_5 ] . } ORDER BY DESC(?P2047_5) LIMIT 1",
        "Squall label based": "which [Musical Work/composition] has <performer> [The Beatles 2] and has the highest <duration> and has a <part of> that has <nickname> \"The White Album\"@en?",
        "Squall ID based": "which <Q105543609> has <P175> <Q1299> and has the highest <P2047> and has a <P361> that has <P1449> \"The White Album\"@en?"
    },
    {
        "Question": "Which actor played a Jedi and also starred in Taken?",
        "ID": "25dc5651",
        "Entities": "Q277080:Taken,Q51724:Jedi",
        "Mintaka Answer": "Q58444:Liam Neeson",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Taken] and that is the <cast member> of something with a <character role> that is the <member of> [Jedi]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q277080> and that is the <P161> of something with a <P453> that is the <P463> <Q51724>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Taken] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?thing_107 p:<cast member> [ ps:<cast member> ?Q5_1 ; n1:<character role> ?P453_109 ] . ?P453_109 p:<member of> [ ps:<member of> wd:[Jedi] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q277080 p:P161 [ ps:P161 ?Q5_1 ] . ?thing_107 p:P161 [ ps:P161 ?Q5_1 ; n1:P453 ?P453_109 ] . ?P453_109 p:P463 [ ps:P463 wd:Q51724 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Taken] and  at a <character role> that has <member of> [Jedi] of a thing?",
        "Squall ID based": "which <Q5> is a <P161> of <Q277080> and  at a <P453> that has <P463> <Q51724> of a thing?"
    },
    {
        "Question": "What is the most populated city in Nigeria?",
        "ID": "f46c7aeb",
        "Entities": "Q1033:Nigeria",
        "Mintaka Answer": "Q8673:Lagos",
        "Sparklis label based": "give me every [city] that has as a <country> [Nigeria] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has as a <P17> <Q1033> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "select distinct ?q515_1 ?p1082_38 where { ?q515_1 wdt:<instance of> wd:[City] . ?q515_1 p:<country> [ ps:<country> wd:[Nigeria] ] . ?q515_1 p:<population> [ ps:<population> ?p1082_38 ] . } order by desc(?p1082_38) limit 1",
        "Sparql ID based": "select distinct ?q515_1 ?p1082_38 where { ?q515_1 wdt:P31 wd:Q515 . ?q515_1 p:P17 [ ps:P17 wd:Q1033 ] . ?q515_1 p:P1082 [ ps:P1082 ?p1082_38 ] . } order by desc(?p1082_38) limit 1",
        "Squall label based": "which [City] has <country> [Nigeria] and has the highest <population>?",
        "Squall ID based": "which <Q515> has <P17> <Q1033> and has the highest <P1082>?"
    },
    {
        "Question": "What is the best-selling Nintendo game of all time?",
        "ID": "7668cffc",
        "Entities": "Q8093:Nintendo",
        "Mintaka Answer": "Q71936:Wii Sports",
        "Sparklis label based": "give me every [video game] that has the highest-to-lowest <units sold> and that has as a <publisher> [Nintendo]",
        "Sparklis ID based": "give me every <Q7889> that has the highest-to-lowest <P2664> and that has as a <P123> <Q8093>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ] . ?Q7889_1 p:<publisher> [ ps:<publisher> wd:[Nintendo] ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ] . ?Q7889_1 p:P123 [ ps:P123 wd:Q8093 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Squall label based": "which [Video Game] has the highest <units sold> and has <publisher> [Nintendo]?",
        "Squall ID based": "which <Q7889> has the highest <P2664> and has <P123> <Q8093>?"
    },
    {
        "Question": "Which Mortal Kombat game did Reptile not appear in?",
        "ID": "a41c5bc4",
        "Entities": "Q1825776:Reptile, Q241163:Mortal Kombat",
        "Mintaka Answer": "Q59511757:Mortal Kombat 11",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mortal Kombat] and that not has as a <characters> [Reptile]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q241163> and that not has as a <P674> <Q1825776>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mortal Kombat] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Reptile] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q241163 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q1825776 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Mortal Kombat] and has not <characters> [Reptile]?",
        "Squall ID based": "which <Q7889> has <P179> <Q241163> and has not <P674> <Q1825776>?"
    },
    {
        "Question": "Did Inception have a bigger budget than Dunkirk?",
        "ID": "bb79562b",
        "Entities": "Q45797:Dunkirk,Q25188:Inception",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Dunkirk] has  a <cost>  and [Inception] has  a <cost>  and give me the total 1st <cost> and give me the total 2nd <cost> and where the total 2nd <cost> < the total 1st <cost>",
        "Sparklis ID based": "<Q45797> has a <P2130> and <Q25188> has a <P2130> and give me the total 1st <P2130> and give me the total 2nd <P2130> and where the total 2nd <P2130> <_the_total_1st_<cost>",
        "Sparql label based": "Ask { VALUES ?P2130_8 { wd:[Inception] wd:[Dunkirk (2017 film) 2]} ?P2130_8 p:<cost> [ ps:<cost> ?value ] . }",
        "Sparql ID based": "Ask { VALUES ?P2130_8 { wd:Q25188 wd:Q21935651} ?P2130_8 p:P2130 [ ps:P2130 ?value ] . }",
        "Squall label based": "is there a thing that is [Inception] or [Dunkirk (2017 film) 2] and has a <cost>?",
        "Squall ID based": "is there a thing that is <Q25188> or <Q21935651> and has a <P2130>?"
    },
    {
        "Question": "Which actress starred in Harry Potter and went to Brown University?",
        "ID": "16ac18cb",
        "Entities": "Q49114:Brown University,Q216930:Harry Potter film series",
        "Mintaka Answer": "Q39476:Emma Watson",
        "Sparklis label based": "give me every [human] that is <educated at> [Brown University] and that has as an <occupation> [film actor] and that is the <cast member> of [Harry Potter film series]",
        "Sparklis ID based": "give me every <Q5> that is <P69> <Q49114> and that has as an <P106> <Q10800557> and that is the <P161> of <Q216930>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<educated at> [ ps:<educated at> wd:[Brown University] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Film Actor] ] . wd:[Harry Potter Film Series] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P69 [ ps:P69 wd:Q49114 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q10800557 ] . wd:Q216930 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] has <educated at> [Brown University] and has <occupation> [Film Actor] and is a <cast member> of [Harry Potter Film Series]?",
        "Squall ID based": "which <Q5> has <P69> <Q49114> and has <P106> <Q10800557> and is a <P161> of <Q216930>?"
    },
    {
        "Question": "What is the fifth book in Stephen King's Dark Tower series?",
        "ID": "bcb1ddb7",
        "Entities": "Q280898:The Dark Tower, Q39829:Stephen King",
        "Mintaka Answer": "Q247364:The Dark Tower V: Wolves of the Calla",
        "Sparklis label based": "[The_Dark_Tower_2] has as an <author> Stephen King and has a part(s) with <series ordinal> 5",
        "Sparklis ID based": "<Q280898> has as an <P50> Stephen King and has a part(s) with <P1545> 5",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE {wd:[The Dark Tower 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ; n1:<series ordinal> \"5\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE {wd:Q280898 p:P527 [ ps:P527 ?P527_8 ; n1:P1545 \"5\" ] . }",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"5\" of [The Dark Tower 2]?",
        "Squall ID based": "what is a <P527> at <P1545> \"5\" of <Q280898>?"
    },
    {
        "Question": "What is the shortest river in the United States?",
        "ID": "dd5a010a",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q1410560:Roe River",
        "Sparklis label based": "give me every [river] that has as a <country> [United States of America] and that has the lowest-to-highest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a <P17> <Q30> and that has the lowest-to-highest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q4022_1 p:<length> [ ps:<length> ?P2043_38 ] . } ORDER BY ASC(?P2043_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q4022_1 p:P2043 [ ps:P2043 ?P2043_38 ] . } ORDER BY ASC(?P2043_38) LIMIT 1",
        "Squall label based": "which [River] has <country> [United States Of America] and has the lowest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q30> and has the lowest <P2043>?"
    },
    {
        "Question": "Which game in the Grand Theft Auto series sold the most copies?",
        "ID": "0152deb6",
        "Entities": "Q132730:Grand Theft Auto",
        "Mintaka Answer": "Q17452:Grand Theft Auto V",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Grand Theft Auto] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q132730> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Grand Theft Auto] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q132730 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Grand Theft Auto] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q132730> and has the highest <P2664>?"
    },
    {
        "Question": "Which Harry Potter film is the longest?",
        "ID": "d086d757",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q102244:Harry Potter and the Chamber of Secrets",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_8 p:<duration> [ ps:<duration> ?P2047_12 ] . } ORDER BY DESC(?P2047_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_8 p:P2047 [ ps:P2047 ?P2047_12 ] . } ORDER BY DESC(?P2047_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2047>?"
    },
    {
        "Question": "Which governors of Rhode Island have not been Democrat since 2000?",
        "ID": "a4d2a220",
        "Entities": "Q1387:Rhode Island, Q29552:Democratic Party",
        "Mintaka Answer": "Q886847:Lincoln Almond, Q523783:Donald Carcieri, Q44690:Lincoln Chafee",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Rhode Island] with a <start time> and not with <member of political party> [Democratic Party] something and where the year of the <start time> > 2000",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q20765611> with a <P580> and not with <P102> <Q29552> something and where the year of the <P580> > 2000",
        "Sparql label based": "SELECT DISTINCT ?Q5_154 WHERE { ?Q5_154 wdt:<instance of> wd:[Human] . ?Q5_154 p:<position held> [ ps:<position held> wd:[Governor Of Rhode Island] ; n1:<start time> ?P580_168 ] . FILTER ( NOT EXISTS { ?Q5_154 p:<position held> [ n1:<member of political party> wd:[Democratic Party] ; ps:<position held> ?P39_160 ] . } ) FILTER ( (year(?P580_168) > \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_154 WHERE { ?Q5_154 wdt:P31 wd:Q5 . ?Q5_154 p:P39 [ ps:P39 wd:Q20765611 ; n1:P580 ?P580_168 ] . FILTER ( NOT EXISTS { ?Q5_154 p:P39 [ n1:P102 wd:Q29552 ; ps:P39 ?P39_160 ] . } ) FILTER ( (year(?P580_168) > \"2000\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater than 2000 [Governor Of Rhode Island] and has not <position held> at <member of political party> [Democratic Party] a thing?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater than 2000 <Q20765611> and has not <P39> at <P102> <Q29552> a thing?"
    },
    {
        "Question": "What was the third book in the Wheel of Time series?",
        "ID": "c8bbb7bc",
        "Entities": "Q4470:The Wheel of Time,3:None",
        "Mintaka Answer": "Q786522:The Dragon Reborn",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 3 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 3 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"3\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"3\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"3\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"3\" <Q4470>?"
    },
    {
        "Question": "How many mountains in Mexico are more than 15,000 feet in elevation?",
        "ID": "ed13e74f",
        "Entities": "Q96:Mexico,15000:None",
        "Mintaka Answer": "Q238147:Pico de Orizaba,Q181157:Popocat\u00e9petl,Q664059:Iztaccihuatl,Q673994:Nevado de Toluca,Q1189579:Sierra Negra",
        "Sparklis label based": "give me every [mountain] that has as a <country> [Mexico] and that has an <elevation above sea level> and where the <elevation above sea level> > 15000",
        "Sparklis ID based": "give me every <Q8502> that has as a <P17> <Q96> and that has an <P2044> and where the <P2044> > 15000",
        "Sparql label based": "SELECT DISTINCT ?Q8502_296 WHERE { ?Q8502_296 wdt:<instance of> wd:[Mountain] . ?Q8502_296 p:<country> [ ps:<country> wd:[Mexico] ] . ?Q8502_296 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_334 ] . FILTER ( (?P2044_334 > \"15000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_296 WHERE { ?Q8502_296 wdt:P31 wd:Q8502 . ?Q8502_296 p:P17 [ ps:P17 wd:Q96 ] . ?Q8502_296 p:P2044 [ ps:P2044 ?P2044_334 ] . FILTER ( (?P2044_334 > \"15000\"^^xsd:integer) ) }",
        "Squall label based": "which [Mountain] has <country> [Mexico] and has a <elevation above sea level> greater than 15000?",
        "Squall ID based": "which <Q8502> has <P17> <Q96> and has a <P2044> greater than 15000?"
    },
    {
        "Question": "Who was the first African American to become a senator?",
        "ID": "4653b872",
        "Entities": "Q49085:African Americans,Q15686806:senator,1:None",
        "Mintaka Answer": "Q719200:Hiram Rhodes Revels",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with the lowest-to-highest <start time> and that has as an <ethnic group> [African Americans]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with the lowest-to-highest <P580> and that has as an <P172> <Q49085>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<ethnic group> [ ps:<ethnic group> wd:[African Americans] ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P172 [ ps:P172 wd:Q49085 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [United States Senator] and has <ethnic group> [African Americans]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4416090> and has <P172> <Q49085>?"
    },
    {
        "Question": "Which books by Jane Austen were not released after 1814?",
        "ID": "5d2ce474",
        "Entities": "Q36322:Jane Austen,1814:None",
        "Mintaka Answer": "Q274744:Sense and Sensibility,Q170583:Pride and Prejudice,Q469690:Mansfield Park",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Jane Austen] and that has a <publication date> and where the year of the <publication date> \u2264 1814",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q36322> and that has a <P577> and where the year of the <P577> \u2264 1814",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_436 WHERE { ?Q7725634_436 wdt:<instance of> wd:[Literary Work] . ?Q7725634_436 p:<author> [ ps:<author> wd:[Jane Austen] ] . ?Q7725634_436 p:<publication date> [ ps:<publication date> ?P577_473 ] . FILTER ( (year(?P577_473) <= \"1814\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_436 WHERE { ?Q7725634_436 wdt:P31 wd:Q7725634 . ?Q7725634_436 p:P50 [ ps:P50 wd:Q36322 ] . ?Q7725634_436 p:P577 [ ps:P577 ?P577_473 ] . FILTER ( (year(?P577_473) <= \"1814\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <author> [Jane Austen] and has a <publication date> whose year is lesser or equal to 1814?",
        "Squall ID based": "which <Q7725634> has <P50> <Q36322> and has a <P577> whose year is lesser or equal to 1814?"
    },
    {
        "Question": "What is the largest river in Australia?",
        "ID": "7efefe76",
        "Entities": "Q3960:Australia",
        "Mintaka Answer": "Q183078:Murray River",
        "Sparklis label based": "give me every [river] that has as a <country> [Australia 2] and that has the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a <P17> <Q408> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 ?P2043_5 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<country> [ ps:<country> wd:[Australia 2] ] . ?Q4022_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 ?P2043_5 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P17 [ ps:P17 wd:Q408 ] . ?Q4022_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [River] has <country> [Australia 2] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q408> and has the highest <P2043>?"
    },
    {
        "Question": "How many Republican governors has Illinois had since 2000?",
        "ID": "fbebba06",
        "Entities": "Q29468:Republican Party, Q1204:Illinois",
        "Mintaka Answer": "2",
        "Sparklis label based": "give me every [human] that has as a <member of political party> [Republican Party] and that has as a <position held> [Governor of Illinois] that has as an applies to jurisdiction Illinois with a <start time> and where the year of the <start time> \u2265 2000 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P102> <Q29468> and that has as a <P39> <Q3112719> that has as an applies to jurisdiction Illinois with a <P580> and where the year of the <P580> \u2265 2000 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Illinois] ; n1:<start time> ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2000\") ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q3112719 ; n1:P580 ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2000\") ) } LIMIT 1",
        "Squall label based": "how many [Human] has <member of political party> [Republican Party] and has <position held> at a <start time> greater or equal to 2000 [Governor Of Illinois]?",
        "Squall ID based": "how many <Q5> has <P102> <Q29468> and has <P39> at a <P580> greater or equal to 2000 <Q3112719>?"
    },
    {
        "Question": "Which Harry Potter book was not released before 2007?",
        "ID": "9fd6193e",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that has a <publication date> and where the year of the <publication date> \u2265 2007",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that has a <P577> and where the year of the <P577> \u2265 2007",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_436 ?P577_473 WHERE { ?Q7725634_436 wdt:<instance of> wd:[Literary Work] . ?Q7725634_436 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?Q7725634_436 p:<publication date> [ ps:<publication date> ?P577_473 ] . FILTER ( (year(?P577_473) >= \"2007\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_436 ?P577_473 WHERE { ?Q7725634_436 wdt:P31 wd:Q7725634 . ?Q7725634_436 p:P179 [ ps:P179 wd:Q8337 ] . ?Q7725634_436 p:P577 [ ps:P577 ?P577_473 ] . FILTER ( (year(?P577_473) >= \"2007\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has a <publication date> whose year is greater or equal to 2007?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has a <P577> whose year is greater or equal to 2007?"
    },
    {
        "Question": "What continent on Earth do people not live on normally?",
        "ID": "0a6ca8da",
        "Entities": "Q2:Earth",
        "Mintaka Answer": "Q51:Antarctica",
        "Sparklis label based": "give me every [continent] that has the lowest-to-highest <population> and that is the part of [Earth]",
        "Sparklis ID based": "give me every <Q5107> that has the lowest-to-highest <P1082> and that is the part of <Q2>",
        "Sparql label based": "SELECT DISTINCT ?Q5107_1 ?P1082_38 WHERE { ?Q5107_1 wdt:<instance of> wd:[Continent] . ?Q5107_1 p:<population> [ ps:<population> ?P1082_38 ] . ?Q5107_1 p:<part of> [ ps:<part of> wd:[Earth] ] . } ORDER BY ASC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5107_1 ?P1082_38 WHERE { ?Q5107_1 wdt:P31 wd:Q5107 . ?Q5107_1 p:P1082 [ ps:P1082 ?P1082_38 ] . ?Q5107_1 p:P361 [ ps:P361 wd:Q2 ] . } ORDER BY ASC(?P1082_38) LIMIT 1",
        "Squall label based": "which [Continent] has the lowest <population> and has <part of> [Earth]?",
        "Squall ID based": "which <Q5107> has the lowest <P1082> and has <P361> <Q2>?"
    },
    {
        "Question": "Which actress was in the Hunger Games and was born in Indian Hills, KY?",
        "ID": "7ce7e1f7",
        "Entities": "Q212965:The Hunger Games,Q508235:Indian Hills",
        "Mintaka Answer": "Q189490:Jennifer Lawrence",
        "Sparklis label based": "give me every [human] that is the <cast member> of [The Hunger Games] and that has as a <place of birth> [Indian Hills]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q212965> and that has as a <P19> <Q508235>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[The Hunger Games] p:<cast member> [ ps:<cast member> ?q5_1 ] . ?q5_1 p:<place of birth> [ ps:<place of birth> wd:[Indian Hills] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q212965 p:P161 [ ps:P161 ?q5_1 ] . ?q5_1 p:P19 [ ps:P19 wd:Q508235 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [The Hunger Games] and has <place of birth> [Indian Hills]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q212965> and has <P19> <Q508235>?"
    },
    {
        "Question": "Which members of BTS were not born in Seoul?",
        "ID": "cc493bdb",
        "Entities": "Q13580495:BTS,Q8684:Seoul",
        "Mintaka Answer": "Q16236223,Q18388296\n,Q20947093\n,Q21075020,Q22338877,Q24276424",
        "Sparklis label based": "[BTS] <has part(s)> that has a <place of birth> that not is the <contains the administrative territorial entity> of [Seoul]",
        "Sparklis ID based": "<Q13580495> <P527> that has a <P19> that not is the <P150> of <Q8684>",
        "Sparql label based": "select distinct ?p527_8 where { wd:[Bts] p:<has part(s)> [ ps:<has part(s)> ?p527_8 ] . ?p527_8 p:<place of birth> [ ps:<place of birth> ?p19_46 ] . filter ( not exists { wd:[Seoul] p:<contains the administrative territorial entity> [ ps:<contains the administrative territorial entity> ?p19_46 ] . } ) }",
        "Sparql ID based": "select distinct ?p527_8 where { wd:Q13580495 p:P527 [ ps:P527 ?p527_8 ] . ?p527_8 p:P19 [ ps:P19 ?p19_46 ] . filter ( not exists { wd:Q8684 p:P150 [ ps:P150 ?p19_46 ] . } ) }",
        "Squall label based": "what is a <has part(s)> of [Bts] and has a <place of birth> that is not a <contains the administrative territorial entity> of [Seoul]?",
        "Squall ID based": "what is a <P527> of <Q13580495> and has a <P19> that is not a <P150> of <Q8684>?"
    },
    {
        "Question": "Which 2000 M. Night Shyamalan movie does not star Michael Jordan?",
        "ID": "a9d5f5fb",
        "Entities": "Q51489:M. Night Shyamalan,Q41421:Michael Jordan,2000:None",
        "Mintaka Answer": "Q650613:Unbreakable",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Michael Jordan] and that has as a <director> [M. Night Shyamalan] and that has a <publication date> and where the year of the <publication date> = 2000",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q41421> and that has as a <P57> <Q51489> and that has a <P577> and where the year of the <P577> = 2000",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P577_46 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<director> [ ps:<director> wd:[M. Night Shyamalan] ] . FILTER ( NOT EXISTS { ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Michael Jordan] ] . } ) ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_46 ] . FILTER ( (year(?P577_46) = \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P577_46 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P57 [ ps:P57 wd:Q51489 ] . FILTER ( NOT EXISTS { ?Q11424_8 p:P161 [ ps:P161 wd:Q41421 ] . } ) ?Q11424_8 p:P577 [ ps:P577 ?P577_46 ] . FILTER ( (year(?P577_46) = \"2000\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [M. Night Shyamalan] and has not <cast member> [Michael Jordan] and has a <publication date> whose year is 2000?",
        "Squall ID based": "which <Q11424> has <P57> <Q51489> and has not <P161> <Q41421> and has a <P577> whose year is 2000?"
    },
    {
        "Question": "Is Kevin Durant taller than LeBron James?",
        "ID": "a1efad28",
        "Entities": "Q36159:LeBron James,Q29545:Kevin Durant",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "give me every [human] that has the highest-to-lowest <height> and that is [LeBron James 2] or that is [Kevin Durant]",
        "Sparklis ID based": "give me every <Q5> that has the highest-to-lowest <P2048> and that is <Q36159> or that is <Q29545>",
        "Sparql label based": "ASK { wd:[Kevin Durant] p:<height> [ ps:<height> ?p2048_1 ] . wd:[Lebron James] p:<height> [ ps:<height> ?p2048_2 ] . filter (?p2048_1 > ?p2048_2) }",
        "Sparql ID based": "ASK { wd:Q29545 p:P2048 [ ps:P2048 ?p2048_1 ] . wd:Q108870659 p:P2048 [ ps:P2048 ?p2048_2 ] . filter (?p2048_1 > ?p2048_2) }",
        "Squall label based": "whether [Kevin Durant] has a <height> greater than a <height> of [Lebron James]?",
        "Squall ID based": "whether <Q29545> has a <P2048> greater than a <P2048> of <Q108870659>?"
    },
    {
        "Question": "Which movie was Chris Evans last in?",
        "ID": "6f9f0452",
        "Entities": "Q178348:Chris Evans,-1:None",
        "Mintaka Answer": "Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Chris Evans] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q178348> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P577_12 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Chris Evans] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P577_12 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P161 [ ps:P161 wd:Q178348 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Squall label based": "which [Film] has <cast member> [Chris Evans] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P161> <Q178348> and has the highest <P577>?"
    },
    {
        "Question": "Who composed the jazz composition Blood On The Fields?",
        "ID": "431d3ab1",
        "Entities": "Q4927867:Blood on the Fields",
        "Mintaka Answer": "Q273076:Wynton Marsalis",
        "Sparklis label based": "[Blood on the Fields] has a <performer>",
        "Sparklis ID based": "<Q4927867> has a <P175>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[Blood On The Fields] p:<performer> [ ps:<performer> ?P175_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q4927867 p:P175 [ ps:P175 ?P175_8 ] . }",
        "Squall label based": "what is a <performer> of [Blood On The Fields]?",
        "Squall ID based": "what is a <P175> of <Q4927867>?"
    },
    {
        "Question": "What is the name of the eighth Fast & Furious movie?",
        "ID": "9bd0b6f2",
        "Entities": "Q1576873:Fast & Furious,8:None",
        "Mintaka Answer": "Q19829521:The Fate of the Furious",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 8 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 8 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"8\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"8\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"8\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"8\" <Q1576873>?"
    },
    {
        "Question": "Who won Super Bowl 54?",
        "ID": "62347b95",
        "Entities": "Q20204363:Super Bowl LIV",
        "Mintaka Answer": "Q223522:Kansas City Chiefs",
        "Sparklis label based": "give me every [American football team] that has as a victory [Super Bowl LIV]",
        "Sparklis ID based": "give me every <Q17156793> that has as a victory <Q20204363>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . ?Q17156793_1 p:<victory> [ ps:<victory> wd:[Super Bowl Liv] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . ?Q17156793_1 p:P2522 [ ps:P2522 wd:Q20204363 ] . }",
        "Squall label based": "which [American Football Team] has <victory> [Super Bowl Liv]?",
        "Squall ID based": "which <Q17156793> has <P2522> <Q20204363>?"
    },
    {
        "Question": "Who was the first female senator?",
        "ID": "8d113ded",
        "Entities": "Q15686806:senator,1:None",
        "Mintaka Answer": "Q271243:Rebecca Latimer Felton",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with the lowest-to-highest <start time> and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [United States Senator] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4416090> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Which Steven Spielberg movie made the most money?",
        "ID": "c12386de",
        "Entities": "Q8877:Steven Spielberg",
        "Mintaka Answer": "Q167726:Jurassic Park",
        "Sparklis label based": "give me every [film] that has the highest-to-lowest <box office> and that has as a <director> [Steven Spielberg]",
        "Sparklis ID based": "give me every <Q11424> that has the highest-to-lowest <P2142> and that has as a <P57> <Q8877>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P2142_7 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<box office> [ ps:<box office> ?P2142_7 ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . } ORDER BY DESC(?P2142_7) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P2142_7 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P2142 [ ps:P2142 ?P2142_7 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q8877 ] . } ORDER BY DESC(?P2142_7) LIMIT 1",
        "Squall label based": "which [Film] has the highest <box office> and has <director> [Steven Spielberg]?",
        "Squall ID based": "which <Q11424> has the highest <P2142> and has <P57> <Q8877>?"
    },
    {
        "Question": "Which actor starred in Fight Club and was born in Shawnee, OK?",
        "ID": "14364357",
        "Entities": "Q843999:Shawnee, Q190050:Fight Club",
        "Mintaka Answer": "Q35332:Brad Pitt",
        "Sparklis label based": "[Fight Club] has a <cast member> that has as a <place of birth> [Shawnee]",
        "Sparklis ID based": "<Q190050> has a <P161> that has as a <P19> <Q843999>",
        "Sparql label based": "SELECT DISTINCT ?P161_8 WHERE { wd:[Fight Club] p:<cast member> [ ps:<cast member> ?P161_8 ] . ?P161_8 p:<place of birth> [ ps:<place of birth> wd:[Shawnee] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P161_8 WHERE { wd:Q190050 p:P161 [ ps:P161 ?P161_8 ] . ?P161_8 p:P19 [ ps:P19 wd:Q843999 ] . } LIMIT 1",
        "Squall label based": "what is a <cast member> of [Fight Club] and has <place of birth> [Shawnee]?",
        "Squall ID based": "what is a <P161> of <Q190050> and has <P19> <Q843999>?"
    },
    {
        "Question": "Which Harry Potter books were not made after 2000?",
        "ID": "81d2ed37",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone, Q47209:Harry Potter and the Chamber of Secrets, Q47598:Harry Potter and the Prisoner of Azkaban, Q46751:Harry Potter and the Goblet of Fire",
        "Sparklis label based": "[Harry Potter 2] <has part(s)> that has a <publication date> and where the year of the <publication date> <= 2000",
        "Sparklis ID based": "<Q8337> <P527> that has a <P577> and where the year of the <P577> <= 2000",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_559 WHERE { ?Q7725634_559 wdt:<instance of> wd:[Literary Work] . ?Q7725634_559 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?Q7725634_559 p:<publication date> [ ps:<publication date> ?P577_563 ] . FILTER ( (year(?P577_563) <= \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_559 WHERE { ?Q7725634_559 wdt:P31 wd:Q7725634 . ?Q7725634_559 p:P179 [ ps:P179 wd:Q8337 ] . ?Q7725634_559 p:P577 [ ps:P577 ?P577_563 ] . FILTER ( (year(?P577_563) <= \"2000\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has a <publication date> whose year is lesser or equal to 2000?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has a <P577> whose year is lesser or equal to 2000?"
    },
    {
        "Question": "Which book in The Maze Runner series was released in 2010?",
        "ID": "b075f28f",
        "Entities": "Q18669965:The Maze Runner,2010:None",
        "Mintaka Answer": "Q7762604:The Scorch Trials",
        "Sparklis label based": "[The Maze Runner] is the <part of the series> of something that has as a <publication date> 2010-10-01T00:00:00Z",
        "Sparklis ID based": "<Q18669965> is the <P179> of something that has as a <P577> 2010-10-01T00:00:00Z",
        "Sparql label based": "SELECT distinct ?thing_8 where { ?thing_8 p:<part of the series> [ ps:<part of the series> wd:[The Maze Runner] ] . ?thing_8 p:<publication date> [ ps:<publication date> \"2010-10-01t00:00:00z\"^^xsd:datetime ] . }",
        "Sparql ID based": "SELECT distinct ?thing_8 where { ?thing_8 p:P179 [ ps:P179 wd:Q18669965 ] . ?thing_8 p:P577 [ ps:P577 \"2010-10-01t00:00:00z\"^^xsd:datetime ] . }",
        "Squall label based": "what has <part of the series> [The Maze Runner] and has <publication date> \"2010-10-01t00:00:00z\"^^xsd:datetime?",
        "Squall ID based": "what has <P179> <Q18669965> and has <P577> \"2010-10-01t00:00:00z\"^^xsd:datetime?"
    },
    {
        "Question": "How many teams has LeBron James played for?",
        "ID": "682465fc",
        "Entities": "Q36159:LeBron James",
        "Mintaka Answer": "3",
        "Sparklis label based": "[LeBron James 2] has a <member of sports team> and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q36159> has a <P54> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Lebron James 2] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q36159 p:P54 [ ps:P54 ?P54_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <member of sports team> of [Lebron James 2]?",
        "Squall ID based": "how many thing is a <P54> of <Q36159>?"
    },
    {
        "Question": "Which Dumb and Dumber movie did Jim Carrey not star in?",
        "ID": "8cf618ec",
        "Entities": "Q462418:Dumb and Dumber,Q40504:Jim Carrey",
        "Mintaka Answer": "Q1265087:Dumb and Dumberer: When Harry Met Lloyd",
        "Sparklis label based": "give me every [film] that is the part(s) of [Dumb and Dumber] and that has as a <cast member> and not [Jim Carrey]",
        "Sparklis ID based": "give me every <Q11424> that is the part(s) of <Q19007214> and that has as a <P161> and not <Q40504>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . wd:[Dumb And Dumber] p:<has part(s)> [ ps:<has part(s)> ?Q11424_1 ] . ?Q11424_1 p:<cast member> [ ps:<cast member> [] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Jim Carrey] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . wd:Q19007214 p:P527 [ ps:P527 ?Q11424_1 ] . ?Q11424_1 p:P161 [ ps:P161 [] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q40504 ] . } ) }",
        "Squall label based": "which [Film] is a <has part(s)> of [Dumb And Dumber] and has a <cast member> and has not <cast member> [Jim Carrey]?",
        "Squall ID based": "which <Q11424> is a <P527> of <Q19007214> and has a <P161> and has not <P161> <Q40504>?"
    },
    {
        "Question": "What is the third book in Stephen King's Dark Tower series?",
        "ID": "e73a6e0c",
        "Entities": "Q39829:Stephen King, Q280898:The Dark Tower",
        "Mintaka Answer": "Q1637730:The Dark Tower III: The Waste Lands",
        "Sparklis label based": "[The Dark Tower 2] has as an <author> Stephen King and <has part(s)> with <series ordinal> 3",
        "Sparklis ID based": "<Q280898> has as an <P50> Stephen King and <P527> with <P1545> 3",
        "Sparql label based": "SELECT DISTINCT ?P527_4 WHERE { wd:[The Dark Tower 2] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ; n1:<series ordinal> \"3\" ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_4 WHERE { wd:Q280898 p:P527 [ ps:P527 ?P527_4 ; n1:P1545 \"3\" ] . } LIMIT 1",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"3\" of [The Dark Tower 2]?",
        "Squall ID based": "what is a <P527> at <P1545> \"3\" of <Q280898>?"
    },
    {
        "Question": "What was the last team that Ichiro Suzuki played for?",
        "ID": "45372bae",
        "Entities": "Q600:Ichiro Suzuki",
        "Mintaka Answer": "Q466586:Seattle Mariners",
        "Sparklis label based": "[Ichiro Suzuki] has a <member of sports team> with the highest-to-lowest <end time>",
        "Sparklis ID based": "<Q600> has a <P54> with the highest-to-lowest <P582>",
        "Sparql label based": "SELECT DISTINCT ?P54_8 ?P582_46 WHERE { wd:[Ichiro Suzuki] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ; n2:<end time> ?P582_46 ] . } ORDER BY DESC(?P582_46) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_8 ?P582_46 WHERE { wd:Q600 p:P54 [ ps:P54 ?P54_8 ; n2:P582 ?P582_46 ] . } ORDER BY DESC(?P582_46) LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the highest <end time> of [Ichiro Suzuki]?",
        "Squall ID based": "what is a <P54> at the highest <P582> of <Q600>?"
    },
    {
        "Question": "Which game in the GTA series sold the most copies?",
        "ID": "d53fe784",
        "Entities": "Q132730:Grand Theft Auto",
        "Mintaka Answer": "Q17452:Grand Theft Auto V",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Grand Theft Auto] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q132730> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 ?P2664_12 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Grand Theft Auto] ] . ?Q7889_8 p:<units sold> [ ps:<units sold> ?P2664_12 ] . } ORDER BY DESC(?P2664_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 ?P2664_12 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q132730 ] . ?Q7889_8 p:P2664 [ ps:P2664 ?P2664_12 ] . } ORDER BY DESC(?P2664_12) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Grand Theft Auto] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q132730> and has the highest <P2664>?"
    },
    {
        "Question": "How many teams has Luka Doncic played for in the NBA?",
        "ID": "53b2f476",
        "Entities": "Q19844712:Luka Don\u010di\u0107, Q155223:National Basketball Association",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Luka Don\u010di\u0107] has a <member of sports team> that has as a <league> [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q19844712> has a <P54> that has as a <P118> <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_111) WHERE { wd:[Luka Don\u010di\u0107] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_111) WHERE { wd:Q19844712 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Luka Don\u010di\u0107] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q19844712> and has <P118> <Q155223>?"
    },
    {
        "Question": "Which Hunger Games movie is the longest?",
        "ID": "e13cf054",
        "Entities": "Q11885031:The Hunger Games",
        "Mintaka Answer": "Q574583:The Hunger Games: Catching Fire",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Hunger Games 4] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q11885031> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P2142_12 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 4] ] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_12 ] . } ORDER BY DESC(?P2142_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P2142_12 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q11885031 ] . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_12 ] . } ORDER BY DESC(?P2142_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Hunger Games 4] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q11885031> and has the highest <P2142>?"
    },
    {
        "Question": "Did Assassin's Creed: Syndicate come out before 2016?",
        "ID": "a4a81289",
        "Entities": "Q18602166:Assassin's Creed Syndicate",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Assassin's Creed Syndicate] has a <publication date> and where the year of the <publication date> < 2016",
        "Sparklis ID based": "<Q18602166> has a <P577> and where the year of the <P577> < 2016",
        "Sparql label based": "Ask { wd:[Assassin's Creed Syndicate] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"2016\"^^xsd:integer) ) }",
        "Sparql ID based": "Ask { wd:Q18602166 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"2016\"^^xsd:integer) ) }",
        "Squall label based": "whether [Assassin's Creed Syndicate] has a <publication date> whose year is lesser than 2016?",
        "Squall ID based": "whether <Q18602166> has a <P577> whose year is lesser than 2016?"
    },
    {
        "Question": "Which Fifty Shades of Grey series books do not have Grey in the title?",
        "ID": "52e02472",
        "Entities": "Q557867:Fifty Shades of Grey",
        "Mintaka Answer": "Q2195511:Fifty Shades Darker,Q2183834:Fifty Shades Freed",
        "Sparklis label based": "give me every [literary work] that has as a part of the series [Fifty Shades 2] and that has a <title> and give me the string of the <title> that not matches \"Grey\"",
        "Sparklis ID based": "give me every <Q7725634> that has as a part of the series <Q16357152> and that has a <P1476> and give me the string of the <P1476> that not matches \"Grey\"",
        "Sparql label based": "select distinct ?q7725634_1 ? where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Fifty Shades 2] ] . ?q7725634_1 p:<title> [ ps:<title> ?p1476_6 ] . bind (str(?p1476_6) as ?expr_106) filter ( !( regex(str(?expr_106), \"grey\", 'i') ) ) }",
        "Sparql ID based": "select distinct ?q7725634_1 ? where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ ps:P179 wd:Q16357152 ] . ?q7725634_1 p:P1476 [ ps:P1476 ?p1476_6 ] . bind (str(?p1476_6) as ?expr_106) filter ( !( regex(str(?expr_106), \"grey\", 'i') ) ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Fifty Shades 2] and has a <title> whose string has the string that does not matches 'grey'?",
        "Squall ID based": "which <Q7725634> has <P179> <Q16357152> and has a <P1476> whose string has the string that does not matches 'grey'?"
    },
    {
        "Question": "Who wrote the Amulet series?",
        "ID": "1c76a2b2",
        "Entities": "Q131557:amulet",
        "Mintaka Answer": "Q13607172:Kazu Kibuishi",
        "Sparklis label based": "[Amulet] has an <author>",
        "Sparklis ID based": "<Q4748936> has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_8 WHERE { wd:[Amulet] p:<author> [ ps:<author> ?P50_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P50_8 WHERE { wd:Q4748936 p:P50 [ ps:P50 ?P50_8 ] . } LIMIT 1",
        "Squall label based": "what is a <author> of [Amulet]?",
        "Squall ID based": "what is a <P50> of <Q4748936>?"
    },
    {
        "Question": "How many countries surround the Black Sea?",
        "ID": "c55e8ecc",
        "Entities": "Q166:Black Sea",
        "Mintaka Answer": "6",
        "Sparklis label based": "[Black Sea] has a <country> and give me the number of <country>",
        "Sparklis ID based": "<Q166> has a <P17> and give me the number of <P17>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:[Black Sea] p:<country> [ ps:<country> ?P17_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:Q166 p:P17 [ ps:P17 ?P17_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <country> of [Black Sea]?",
        "Squall ID based": "how many thing is a <P17> of <Q166>?"
    },
    {
        "Question": "What is Will Smith's middle name?",
        "ID": "cca782ad",
        "Entities": "Q40096:Will Smith",
        "Mintaka Answer": "Q18658568:Carroll",
        "Sparklis label based": "[Will Smith] has a <given name> with <series ordinal> 2",
        "Sparklis ID based": "<Q40096> has a <P735> with <P1545> 2",
        "Sparql label based": "SELECT DISTINCT ?P735_8 WHERE { wd:[Will Smith] p:<given name> [ ps:<given name> ?P735_8 ; n1:<series ordinal> \"2\" ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P735_8 WHERE { wd:Q40096 p:P735 [ ps:P735 ?P735_8 ; n1:P1545 \"2\" ] . } LIMIT 1",
        "Squall label based": "what is a <given name> at <series ordinal> \"2\" of [Will Smith]?",
        "Squall ID based": "what is a <P735> at <P1545> \"2\" of <Q40096>?"
    },
    {
        "Question": "Which Godfather movie is the longest?",
        "ID": "0c5f2e78",
        "Entities": "Q47703:The Godfather",
        "Mintaka Answer": "Q184768:The Godfather Part II",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Godfather] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3225260> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Godfather] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q3225260 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Godfather] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q3225260> and has the highest <P2047>?"
    },
    {
        "Question": "Which movie was directed by Fernando Meirelles and starred Ralph Fiennes?",
        "ID": "9e233abf",
        "Entities": "Q28493:Ralph Fiennes,Q343293:Fernando Meirelles",
        "Mintaka Answer": "Q645168:The Constant Gardener",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Ralph Fiennes] and that has as a <director> [Fernando Meirelles]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q28493> and that has as a <P57> <Q343293>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Ralph Fiennes] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Fernando Meirelles] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q28493 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q343293 ] . }",
        "Squall label based": "which [Film] has <cast member> [Ralph Fiennes] and has <director> [Fernando Meirelles]?",
        "Squall ID based": "which <Q11424> has <P161> <Q28493> and has <P57> <Q343293>?"
    },
    {
        "Question": "Did Kill Bill: Vol. 1 come out after 2004?",
        "ID": "3723563b",
        "Entities": "Q165325:Kill Bill Volume 1,2004:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Kill Bill Volume 1] has a <publication date> and where the year of the <publication date> > 2004",
        "Sparklis ID based": "<Q165325> has a <P577> and where the year of the <P577> > 2004",
        "Sparql label based": "Ask { wd:[Kill Bill Volume 1] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) > \"2004\"^^xsd:integer) ) }",
        "Sparql ID based": "Ask { wd:Q165325 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) > \"2004\"^^xsd:integer) ) }",
        "Squall label based": "whether [Kill Bill Volume 1] has a <publication date> whose year is greater than 2004?",
        "Squall ID based": "whether <Q165325> has a <P577> whose year is greater than 2004?"
    },
    {
        "Question": "How many times has Bill Clinton been president?",
        "ID": "bc4c5f3c",
        "Entities": "Q1124:Bill Clinton",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Bill Clinton] is the <successful candidate> of a [United States presidential election]  and give me the number of [United States presidential election]",
        "Sparklis ID based": "<Q1124> is the <P991> of a <Q47566> and give me the number of <Q47566>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q47566_617) AS ?number_of_721) WHERE { ?Q47566_617 wdt:<instance of> wd:[United States Presidential Election] . ?Q47566_617 p:<successful candidate> [ ps:<successful candidate> wd:[Bill Clinton] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q47566_617) AS ?number_of_721) WHERE { ?Q47566_617 wdt:P31 wd:Q47566 . ?Q47566_617 p:P991 [ ps:P991 wd:Q1124 ] . }",
        "Squall label based": "how many [United States Presidential Election] has <successful candidate> [Bill Clinton]?",
        "Squall ID based": "how many <Q47566> has <P991> <Q1124>?"
    },
    {
        "Question": "What country is the most populated in Asia?",
        "ID": "fc64b63c",
        "Entities": "Q48:Asia",
        "Mintaka Answer": "Q148:People's Republic of China",
        "Sparklis label based": "give me every [country] that has as a <continent> [Asia] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q48> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "select distinct ?q6256_1 ?p1082_38 where { ?q6256_1 wdt:<instance of> wd:[Country] . ?q6256_1 p:<continent> [ ps:<continent> wd:[Asia] ] . ?q6256_1 p:<population> [ ps:<population> ?p1082_38 ] . } order by desc(?p1082_38) limit 1",
        "Sparql ID based": "select distinct ?q6256_1 ?p1082_38 where { ?q6256_1 wdt:P31 wd:Q6256 . ?q6256_1 p:P30 [ ps:P30 wd:Q48 ] . ?q6256_1 p:P1082 [ ps:P1082 ?p1082_38 ] . } order by desc(?p1082_38) limit 1",
        "Squall label based": "which [Country] has <continent> [Asia] and has the highest <population>?",
        "Squall ID based": "which <Q6256> has <P30> <Q48> and has the highest <P1082>?"
    },
    {
        "Question": "What year was Fallout 3 released?",
        "ID": "f52bb75c",
        "Entities": "Q221164:Fallout 3",
        "Mintaka Answer": "2008",
        "Sparklis label based": "[Fallout 3] has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q221164> has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_8 ?expr_237 WHERE { wd:[Fallout 3] p:<publication date> [ ps:<publication date> ?P577_8 ] . BIND (year(?P577_8) AS ?expr_237) }",
        "Sparql ID based": "SELECT DISTINCT ?P577_8 ?expr_237 WHERE { wd:Q221164 p:P577 [ ps:P577 ?P577_8 ] . BIND (year(?P577_8) AS ?expr_237) }",
        "Squall label based": "what is a <publication date> of [Fallout 3] and has a year?",
        "Squall ID based": "what is a <P577> of <Q221164> and has a year?"
    },
    {
        "Question": "Which band is older, Aerosmith or Van Halen?",
        "ID": "e2feb908",
        "Entities": "Q126826:Aerosmith, Q190155:Van Halen",
        "Mintaka Answer": "Q126826:Aerosmith",
        "Sparklis label based": "give me every [musical group] that has  the lowest-to-highest <inception>  and that is [Aerosmith] or that is [Van Halen]",
        "Sparklis ID based": "give me every <Q215380> that has the lowest-to-highest <P571> and that is <Q281133> or that is <Q190155>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Aerosmith 2] wd:[Van Halen] } ?x p:<inception> [ ps:<inception> ?inception] . } ORDER BY ASC(?age) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q126826 wd:Q190155 } ?x p:P571 [ ps:P571 ?inception] . } ORDER BY ASC(?age) LIMIT 1",
        "Squall label based": "what is [Aerosmith 2] or [Van Halen] and has a <inception>?",
        "Squall ID based": "what is <Q126826> or <Q190155> and has a <P571>?"
    },
    {
        "Question": "What country was Drake's birthplace?",
        "ID": "ab366aed",
        "Entities": "Q33240:Drake",
        "Mintaka Answer": "Q16:Canada",
        "Sparklis label based": "[Drake] is the <place of birth> of something that has a <country of citizenship>",
        "Sparklis ID based": "<Q2000126> is the <P19> of something that has a <P27>",
        "Sparql label based": "SELECT DISTINCT ?P27_47 WHERE { ?thing_9 p:<place of birth> [ ps:<place of birth> wd:[Drake] ] . ?thing_9 p:<country of citizenship> [ ps:<country of citizenship> ?P27_47 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P27_47 WHERE { ?thing_9 p:P19 [ ps:P19 wd:Q2000126 ] . ?thing_9 p:P27 [ ps:P27 ?P27_47 ] . }",
        "Squall label based": "what is a <country of citizenship> of a thing that has <place of birth> [Drake]?",
        "Squall ID based": "what is a <P27> of a thing that has <P19> <Q2000126>?"
    },
    {
        "Question": "Which Chronicles of Narnia book does not have Peter Pevensie in it?",
        "ID": "32748509",
        "Entities": "Q483412:The Chronicles of Narnia, Q1627590:Peter Pevensie",
        "Mintaka Answer": "Q331669:The Silver Chair, Q477831:The Magician's Nephew, Q157360:The Horse and His Boy, Q331656:The Voyage of the Dawn Treader",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Chronicles of Narnia] and that not has as a <characters> [Peter Pevensie]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q483412> and that not has as a <P674> <Q1627590>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Chronicles Of Narnia] ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:<characters> [ ps:<characters> wd:[Peter Pevensie] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q483412 ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:P674 [ ps:P674 wd:Q1627590 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [The Chronicles Of Narnia] and has not <characters> [Peter Pevensie]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q483412> and has not <P674> <Q1627590>?"
    },
    {
        "Question": "What is the seventh tallest mountain in North America?",
        "ID": "a9011ddf",
        "Entities": "Q49: North America",
        "Mintaka Answer": "Q1153188: Mount Lucania",
        "Sparklis label based": "give me every [mountain] that has as a continent [North America] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has as a continent <Q49> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_8 WHERE { ?Q8502_8 wdt:<instance of> wd:[Mountain] . ?Q8502_8 p:<continent> [ ps:<continent> wd:[North America] ] . ?Q8502_8 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_45 ] . } ORDER BY DESC(?P2044_45) offset 6 limit 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_8 WHERE { ?Q8502_8 wdt:P31 wd:Q8502 . ?Q8502_8 p:P30 [ ps:P30 wd:Q49 ] . ?Q8502_8 p:P2044 [ ps:P2044 ?P2044_45 ] . } ORDER BY DESC(?P2044_45) offset 6 limit 1",
        "Squall label based": "which [Mountain] has <continent> [North America] and has the 7th highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has <P30> <Q49> and has the 7th highest <P2044>?"
    },
    {
        "Question": "What is the name of the first Rambo movie?",
        "ID": "671fa282",
        "Entities": "Q1621266:Rambo,1:None",
        "Mintaka Answer": "Q244963:First Blood",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 1 [Rambo]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 1 <Q1621266>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"1\" ; ps:<part of the series> wd:[Rambo] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"1\" ; ps:P179 wd:Q1621266 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"1\" [Rambo]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"1\" <Q1621266>?"
    },
    {
        "Question": "Which Harry Potter book is the shortest?",
        "ID": "401be51d",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that has the lowest-to-highest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that has the lowest-to-highest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY ASC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q8337 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY ASC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has the lowest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has the lowest <P1104>?"
    },
    {
        "Question": "What is the largest city in China by population according to the UN 2018 population estimates?",
        "ID": "12aa8817",
        "Entities": "Q148:People's Republic of China, Q1065:United Nations",
        "Mintaka Answer": "Q8686:Shanghai",
        "Sparklis label based": "give me every [largest city] that has as a <country> [People's Republic of China] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q51929311> that has as a <P17> <Q148> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q51929311_1 ?P1082_37 WHERE { ?Q51929311_1 wdt:<instance of> wd:[Largest City] . ?Q51929311_1 p:<country> [ ps:<country> wd:[People's Republic Of China] ] . ?Q51929311_1 p:<population> [ ps:<population> ?P1082_37 ] . } ORDER BY DESC(?P1082_37) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q51929311_1 ?P1082_37 WHERE { ?Q51929311_1 wdt:P31 wd:Q51929311 . ?Q51929311_1 p:P17 [ ps:P17 wd:Q148 ] . ?Q51929311_1 p:P1082 [ ps:P1082 ?P1082_37 ] . } ORDER BY DESC(?P1082_37) LIMIT 1",
        "Squall label based": "which [Largest City] has <country> [People's Republic Of China] and has the highest <population>?",
        "Squall ID based": "which <Q51929311> has <P17> <Q148> and has the highest <P1082>?"
    },
    {
        "Question": "How many Zelda games have come out on Switch?",
        "ID": "6e17a6ec",
        "Entities": "Q12393:The Legend of Zelda,Q19610114:Nintendo Switch",
        "Mintaka Answer": "Q17185964:The Legend of Zelda: Breath of the Wild",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [The Legend of Zelda] and that has a <units sold> with platform [Nintendo Switch] and give me the number of [video game]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q12393> and that has a <P2664> with platform <Q19610114> and give me the number of <Q7889>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[The Legend Of Zelda] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ; n1:<platform> wd:[Nintendo Switch] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q12393 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ; n1:P400 wd:Q19610114 ] . }",
        "Squall label based": "which [Video Game] has <part of the series> [The Legend Of Zelda] and has <units sold> at <platform> [Nintendo Switch] a thing?",
        "Squall ID based": "which <Q7889> has <P179> <Q12393> and has <P2664> at <P400> <Q19610114> a thing?"
    },
    {
        "Question": "Who is a former orthopedic surgeon and a current senator of Wyoming?",
        "ID": "8ea89d55",
        "Entities": "Q4416090:United States senator, Q1214:Wyoming",
        "Mintaka Answer": "Q720521:John Barrasso",
        "Sparklis label based": "give me every [human] that has as an <occupation> [orthopedic surgeon] and that has as a <position held> [United States senator]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q16030727> and that has as a <P39> <Q4416090>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Orthopedic Surgeon] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q16030727 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q4416090 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <occupation> [Orthopedic Surgeon] and has <position held> [United States Senator]?",
        "Squall ID based": "which <Q5> has <P106> <Q16030727> and has <P39> <Q4416090>?"
    },
    {
        "Question": "Which NBA team did Yao Ming play for?",
        "ID": "ee482c77",
        "Entities": "Q155223:National Basketball Association, Q58590:Yao Ming",
        "Mintaka Answer": "Q161345:Houston Rockets",
        "Sparklis label based": "[Yao Ming] has as a league [National Basketball Association] and has a <member of sports team>",
        "Sparklis ID based": "<Q58590> has as a league <Q155223> and has a <P54>",
        "Sparql label based": "SELECT DISTINCT ?P54_4 WHERE { wd:[Yao Ming] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_4 WHERE { wd:Q58590 p:P54 [ ps:P54 ?P54_4 ] . } LIMIT 1",
        "Squall label based": "what is a <member of sports team> of [Yao Ming]?",
        "Squall ID based": "what is a <P54> of <Q58590>?"
    },
    {
        "Question": "Which Avengers movie had the highest budget?",
        "ID": "f6d6aef5",
        "Entities": "Q20021634:Avengers",
        "Mintaka Answer": "Q14171368:Avengers: Age of Ultron",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Avengers 2] and that has the highest-to-lowest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q20021634> and that has the highest-to-lowest <P2130>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Avengers 2] ] . ?Q11424_1 p:<cost> [ ps:<cost> ?P2130_5 ] . } ORDER BY DESC(?P2130_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q20021634 ] . ?Q11424_1 p:P2130 [ ps:P2130 ?P2130_5 ] . } ORDER BY DESC(?P2130_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Avengers 2] and has the highest <cost>?",
        "Squall ID based": "which <Q11424> has <P179> <Q20021634> and has the highest <P2130>?"
    },
    {
        "Question": "Who is a member of the band Tool and also of A Perfect Circle?",
        "ID": "75de1066",
        "Entities": "Q300519:A Perfect Circle, Q184827:Tool",
        "Mintaka Answer": "Q311621:Maynard James Keenan",
        "Sparklis label based": "give me every [human] that is the <member of> [A Perfect Circle] and of [Tool]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q300519> and of <Q184827>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<member of> [ ps:<member of> wd:[A Perfect Circle] ] . ?Q5_1 p:<member of> [ ps:<member of> wd:[Tool] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P463 [ ps:P463 wd:Q300519 ] . ?Q5_1 p:P463 [ ps:P463 wd:Q184827 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <member of> [A Perfect Circle] and [Tool]?",
        "Squall ID based": "which <Q5> has <P463> <Q300519> and <Q184827>?"
    },
    {
        "Question": "What was the first book in the Wheel of Time series?",
        "ID": "61e19f4e",
        "Entities": "Q4470:The Wheel of Time,1:None",
        "Mintaka Answer": "Q477994:The Eye of the World",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 1 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 1 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"1\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"1\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"1\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"1\" <Q4470>?"
    },
    {
        "Question": "How many books are in C.S. Lewis' Space Trilogy?",
        "ID": "a64a4941",
        "Entities": "Q9204:C. S. Lewis, Q2070438:The Space Trilogy",
        "Mintaka Answer": "3",
        "Sparklis label based": "[The Space Trilogy] has as an <author> [C. S. Lewis] and <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q2070438> has as an <P50> <Q9204> and <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:[The Space Trilogy] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:Q2070438 p:P527 [ ps:P527 ?P527_4 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <has part(s)> of [The Space Trilogy]?",
        "Squall ID based": "how many thing is a <P527> of <Q2070438>?"
    },
    {
        "Question": " Which Harry Potter novel was not released before 2006?",
        "ID": "833a4027",
        "Entities": "Q8337:Harry Potter,2006:None",
        "Mintaka Answer": "Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a part of the series [Harry Potter 2] and that has the highest-to-lowest <publication date> after 2006",
        "Sparklis ID based": "give me every <Q7725634> that has as a part of the series <Q8337> and that has the highest-to-lowest <P577> after 2006",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?q7725634_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . filter ( str(?p577_5) >= \"2006\" ) } order by desc(?p577_5)",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ ps:P179 wd:Q8337 ] . ?q7725634_1 p:P577 [ ps:P577 ?p577_5 ] . filter ( str(?p577_5) >= \"2006\" ) } order by desc(?p577_5)",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has the descending <publication date> greater or equal to 2006?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has the descending <P577> greater or equal to 2006?"
    },
    {
        "Question": "What is the name of the first enemy you see in Super Mario Brothers for original Nintendo (NES)?",
        "ID": "e6e28ec2",
        "Entities": "Q11168:Super Mario Bros.,Q172742:Nintendo Entertainment System,1:None",
        "Mintaka Answer": "Q1057701:Goomba ",
        "Sparklis label based": "give me every [fictional species of animal] that has as a <first appearance> [Super Mario Bros.] and that has as an <enemy> [Mario]",
        "Sparklis ID based": "give me every <Q15702752> that has as a <P4584> <Q11168> and that has as an <P7047> <Q12379>",
        "Sparql label based": "SELECT DISTINCT ?Q15702752_8 WHERE { ?Q15702752_8 wdt:<instance of> wd:[Fictional Species Of Animal] . ?Q15702752_8 p:<first appearance> [ ps:<first appearance> wd:[Super Mario Bros.] ] . ?Q15702752_8 p:<enemy> [ ps:<enemy> wd:[Mario] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q15702752_8 WHERE { ?Q15702752_8 wdt:P31 wd:Q15702752 . ?Q15702752_8 p:P4584 [ ps:P4584 wd:Q11168 ] . ?Q15702752_8 p:P7047 [ ps:P7047 wd:Q12379 ] . }",
        "Squall label based": "which [Fictional Species Of Animal] has <first appearance> [Super Mario Bros.] and has <enemy> [Mario]?",
        "Squall ID based": "which <Q15702752> has <P4584> <Q11168> and has <P7047> <Q12379>?"
    },
    {
        "Question": "How many Academy Awards did Black Panther win?",
        "ID": "3c27c09c",
        "Entities": "Q23780734:Black Panther,Q19020:Academy Awards",
        "Mintaka Answer": "Q277751:Academy Award for Best Production Design,Q277536:Academy Award for Best Costume Design,Q488651:Academy Award for Best Original Score",
        "Sparklis label based": "[Black Panther] <award received> something",
        "Sparklis ID based": "<Q23780734> <P166> something",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { wd:[Black Panther] p:<award received> [ ps:<award received> ?thing_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { wd:Q23780734 p:P166 [ ps:P166 ?thing_8 ] . }",
        "Squall label based": "what is a <award received> of [Black Panther]?",
        "Squall ID based": "what is a <P166> of <Q23780734>?"
    },
    {
        "Question": "Which actress acted in Star Wars and was born in Israel?",
        "ID": "44178fac",
        "Entities": "Q801:Israel,Q462:Star Wars",
        "Mintaka Answer": "Q37876:Natalie Portman",
        "Sparklis label based": "give me every [human] that is the <cast member> of a [film] that has as a <part of the series> [Star Wars] and that has as a <country of citizenship> [Israel]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> that has as a <P179> <Q22092344> and that has as a <P27> <Q801>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q11424_38 wdt:<instance of> wd:[Film] . ?Q11424_38 p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q11424_38 p:<part of the series> [ ps:<part of the series> wd:[Star Wars] ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Israel] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q11424_38 wdt:P31 wd:Q11424 . ?Q11424_38 p:P161 [ ps:P161 ?Q5_1 ] . ?Q11424_38 p:P179 [ ps:P179 wd:Q22092344 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q801 ] . }",
        "Squall label based": "which [Human] has <country of citizenship> [Israel] and is a <cast member> of a [Film] that has <part of the series> [Star Wars]?",
        "Squall ID based": "which <Q5> has <P27> <Q801> and is a <P161> of a <Q11424> that has <P179> <Q22092344>?"
    },
    {
        "Question": "Which Thor movie from the original trilogy does not star Natalie Portman?",
        "ID": "4f70dd9f",
        "Entities": "Q88306753:Thor,Q37876:Natalie Portman",
        "Mintaka Answer": "Q22665878:Thor: Ragnarok",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Thor 2] and that not has as a <cast member> [Natalie Portman]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q88306753> and that not has as a <P161> <Q37876>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:<instance of> wd:[Film] . ?Q11424_311 p:<part of the series> [ ps:<part of the series> wd:[Thor 2] ] . FILTER ( NOT EXISTS { ?Q11424_311 p:<cast member> [ ps:<cast member> wd:[Natalie Portman] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:P31 wd:Q11424 . ?Q11424_311 p:P179 [ ps:P179 wd:Q88306753 ] . FILTER ( NOT EXISTS { ?Q11424_311 p:P161 [ ps:P161 wd:Q37876 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Thor 2] and has not <cast member> [Natalie Portman]?",
        "Squall ID based": "which <Q11424> has <P179> <Q88306753> and has not <P161> <Q37876>?"
    },
    {
        "Question": "Does Delhi have a higher population than Tokyo?",
        "ID": "b6312eb6",
        "Entities": "Q1353:Delhi,Q1490:Tokyo",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "give me every [megacity] that has the highest-to-lowest <population> and that is [Tokyo] or that is [Delhi]",
        "Sparklis ID based": "give me every <Q174844> that has the highest-to-lowest <P1082> and that is <Q1490> or that is <Q1353>",
        "Sparql label based": "ASK { wd:[Tokyo] p:<population> [ ps:<population> ?P1082_8 ] . wd:[Delhi] p:<population> [ps:<population> ?P1082_7]. Filter (?P1082_8 < ?P1082_7) }",
        "Sparql ID based": "ASK { wd:Q1490 p:P1082 [ ps:P1082 ?P1082_8 ] . wd:Q1353 p:P1082 [ps:P1082 ?P1082_7]. Filter (?P1082_8 < ?P1082_7) }",
        "Squall label based": "whether [Tokyo] has a <population> lesser than a <population> of [Delhi]?",
        "Squall ID based": "whether <Q1490> has a <P1082> lesser than a <P1082> of <Q1353>?"
    },
    {
        "Question": "Which movie had Jeff Bridges in it and was produced by Ethan Cohen?",
        "ID": "733ac0b1",
        "Entities": "Q174843:Jeff Bridges,Q13595531:Ethan Coen",
        "Mintaka Answer": "Q337078:The Big Lebowski",
        "Sparklis label based": "give me every [film] that has as a <producer> [Ethan Coen] and that has as a <cast member> [Jeff Bridges]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P162> <Q13595531> and that has as a <P161> <Q174843>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<producer> [ ps:<producer> wd:[Ethan Coen] ] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Jeff Bridges] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P162 [ ps:P162 wd:Q13595531 ] . ?Q11424_8 p:P161 [ ps:P161 wd:Q174843 ] . }",
        "Squall label based": "which [Film] has <producer> [Ethan Coen] and has <cast member> [Jeff Bridges]?",
        "Squall ID based": "which <Q11424> has <P162> <Q13595531> and has <P161> <Q174843>?"
    },
    {
        "Question": "Which movie had a bigger budget, The Wizard of Oz or Gone With The Wind?",
        "ID": "4c5901ae",
        "Entities": "Q2875:Gone with the Wind,Q193695:The Wizard of Oz",
        "Mintaka Answer": "Q2875:Gone with the Wind",
        "Sparklis label based": "there is [Gone with the Wind] and [The Wizard of Oz] has a <cost>",
        "Sparklis ID based": "there is <Q2875> and <Q193695> has a <P2130>",
        "Sparql label based": "SELECT DISTINCT ?x ?P2130_8 WHERE { VALUES ?x { wd:[The Wizard Of Oz] wd:[Gone With The Wind] } ?x p:<cost> [ ps:<cost> ?P2130_8 ] . } ORDER BY DESC(?P2130_8) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?x ?P2130_8 WHERE { VALUES ?x { wd:Q193695 wd:Q2875 } ?x p:P2130 [ ps:P2130 ?P2130_8 ] . } ORDER BY DESC(?P2130_8) LIMIT 1",
        "Squall label based": "what is [The Wizard Of Oz] or [Gone With The Wind] and has the highest <cost>?",
        "Squall ID based": "what is <Q193695> or <Q2875> and has the highest <P2130>?"
    },
    {
        "Question": "Who was the last U.S. president that wasn't a Democrat or Republican?",
        "ID": "79cd88e0",
        "Entities": "Q11696:President of the United States, Q29468:Republican Party, Q29552:Democratic Party",
        "Mintaka Answer": "Q12306:Millard Fillmore",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] with the highest-to-lowest <start time> and that has as a <member of political party> and not [Republican Party] and not [Democratic Party]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with the highest-to-lowest <P580> and that has as a <P102> and not <Q29468> and not <Q29552>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n2:<start time> ?P580_9 ] . ?Q5_1 p:<member of political party> [ ps:<member of political party> [] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( NOT EXISTS { ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Democratic Party] ] . } ) } ORDER BY DESC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ; n2:P580 ?P580_9 ] . ?Q5_1 p:P102 [ ps:P102 [] ] . FILTER ( NOT EXISTS { ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( NOT EXISTS { ?Q5_1 p:P102 [ ps:P102 wd:Q29552 ] . } ) } ORDER BY DESC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the highest <start time> [President Of The United States] and has a <member of political party> and has not <member of political party> [Republican Party] and has not <member of political party> [Democratic Party]?",
        "Squall ID based": "which <Q5> has <P39> at the highest <P580> <Q11696> and has a <P102> and has not <P102> <Q29468> and has not <P102> <Q29552>?"
    },
    {
        "Question": "What is Robert Downey Jr's net worth?",
        "ID": "7b4e0675",
        "Entities": "Q165219:Robert Downey Jr.",
        "Mintaka Answer": "300000000",
        "Sparklis label based": "[Robert Downey Jr.] has a net <net worth>",
        "Sparklis ID based": "<Q165219> has a net <P2218>",
        "Sparql label based": "SELECT DISTINCT ?P2218_8 WHERE { wd:[Robert Downey Jr.] p:<net worth> [ ps:<net worth> ?P2218_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P2218_8 WHERE { wd:Q165219 p:P2218 [ ps:P2218 ?P2218_8 ] . }",
        "Squall label based": "what is a <net worth> of [Robert Downey Jr.]?",
        "Squall ID based": "what is a <P2218> of <Q165219>?"
    },
    {
        "Question": "Which band is older, The Buggles or The Beatles?",
        "ID": "633eebef",
        "Entities": "Q1299:The Beatles, Q201568:The Buggles",
        "Mintaka Answer": "Q1299:The Beatles",
        "Sparklis label based": "give me every [musical group] that has the lowest-to-highest <inception> and that is [The Buggles] or that is [The Beatles]",
        "Sparklis ID based": "give me every <Q215380> that has the lowest-to-highest <P571> and that is <Q201568> or that is <Q3295515>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[The Beatles 2] wd:[The Buggles] } ?x p:<inception> [ ps:<inception> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q1299 wd:Q201568 } ?x p:P571 [ ps:P571 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [The Beatles 2] or [The Buggles] and has the lowest <inception>?",
        "Squall ID based": "what is <Q1299> or <Q201568> and has the lowest <P571>?"
    },
    {
        "Question": "Is Asia larger than Europe?",
        "ID": "95bb37b0",
        "Entities": "Q46:Europe, Q48:Asia",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Europe] has an <area> and [Asia] has <area> and give me the total 1st <area> and give me the total 2nd <area> and where the total 2nd <area> > the total 1st <area>",
        "Sparklis ID based": "<Q46> has an <P2046> and <Q48> has <P2046> and give me the total 1st <P2046> and give me the total 2nd <P2046> and where the total 2nd <P2046> > the total 1st <P2046>",
        "Sparql label based": "ASK { wd:[Europe] p:<area> [ ps:<area> ?P1082_8 ] . wd:[Asia] p:<area> [ps:<area> ?P1082_7]. Filter (?P1082_8 < ?P1082_7) }",
        "Sparql ID based": "ASK { wd:Q46 p:P2046 [ ps:P2046 ?P1082_8 ] . wd:Q48 p:P2046 [ps:P2046 ?P1082_7]. Filter (?P1082_8 < ?P1082_7) }",
        "Squall label based": "whether [Europe] has a <area> lesser than a <area> of [Asia]?",
        "Squall ID based": "whether <Q46> has a <P2046> lesser than a <P2046> of <Q48>?"
    },
    {
        "Question": "What year did the American Revolutionary War stop?",
        "ID": "6112a05f",
        "Entities": "Q40949:American Revolutionary War",
        "Mintaka Answer": "1783",
        "Sparklis label based": "[American Revolutionary War] has an <end time> and give me the year of the <end time>",
        "Sparklis ID based": "<Q40949> has an <P582> and give me the year of the <P582>",
        "Sparql label based": "SELECT DISTINCT ?expr_135 WHERE { wd:[American Revolutionary War] p:<end time> [ ps:<end time> ?P582_8 ] . BIND (year(?P582_8) AS ?expr_135) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_135 WHERE { wd:Q40949 p:P582 [ ps:P582 ?P582_8 ] . BIND (year(?P582_8) AS ?expr_135) }",
        "Squall label based": "what is the year of a <end time> of [American Revolutionary War]?",
        "Squall ID based": "what is the year of a <P582> of <Q40949>?"
    },
    {
        "Question": "Which actress was in Gone with the Wind and in A Streetcar Named Desire?",
        "ID": "87b569b1",
        "Entities": "Q212129:A Streetcar Named Desire,Q2875:Gone with the Wind",
        "Mintaka Answer": "Q129429:Vivien Leigh",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Gone with the Wind] and of [A Streetcar Named Desire] and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q2875> and of <Q212129> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Gone With The Wind] p:<cast member> [ ps:<cast member> ?Q5_1 ] . wd:[A Streetcar Named Desire] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q2875 p:P161 [ ps:P161 ?Q5_1 ] . wd:Q212129 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Gone With The Wind] and [A Streetcar Named Desire] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q2875> and <Q212129> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Albert Pujols plays for what team?",
        "ID": "d425928f",
        "Entities": "Q148726:Albert Pujols",
        "Mintaka Answer": "Q743309:Los Angeles Angels",
        "Sparklis label based": "[Albert Pujols] has a <member of sports team>",
        "Sparklis ID based": "<Q148726> has a <P54>",
        "Sparql label based": "SELECT DISTINCT ?P54_8 WHERE { wd:[Albert Pujols] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P54_8 WHERE { wd:Q148726 p:P54 [ ps:P54 ?P54_8 ] . }",
        "Squall label based": "what is a <member of sports team> of [Albert Pujols]?",
        "Squall ID based": "what is a <P54> of <Q148726>?"
    },
    {
        "Question": "How many games are in the Devil May Cry series?",
        "ID": "a90ad3b0",
        "Entities": "Q7676662:Devil May Cry",
        "Mintaka Answer": "Q839794:Devil May Cry 3: Dante's Awakening,Q840889:Devil May Cry,Q583601:Devil May Cry 2,Q751936:Devil May Cry 4,Q55076932:Devil May Cry 5,Q1826997:DmC: Devil May Cry",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Devil May Cry] and give me the number of [video game]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q7676662> and give me the number of <Q7889>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Devil May Cry] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q7676662 ] . }",
        "Squall label based": "which [Video Game] has <part of the series> [Devil May Cry]?",
        "Squall ID based": "which <Q7889> has <P179> <Q7676662>?"
    },
    {
        "Question": "What is the last NBA team Michael Jordan played for?",
        "ID": "8a875b0b",
        "Entities": "Q41421:Michael Jordan, Q155223:National Basketball Association",
        "Mintaka Answer": "Q169165:Washington Wizards",
        "Sparklis label based": "[Michael Jordan] has a <member of sports team> that has as a league [National Basketball Association] with the highest-to-lowest <end time>",
        "Sparklis ID based": "<Q41421> has a <P54> that has as a league <Q155223> with the highest-to-lowest <P582>",
        "Sparql label based": "SELECT DISTINCT ?P54_8 WHERE { wd:[Michael Jordan] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ; n2:<end time> ?P582_46 ] . ?P54_8 p:<league> [ ps:<league> wd:[National Basketball Association] ] . } ORDER BY DESC(?P582_46) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_8 WHERE { wd:Q41421 p:P54 [ ps:P54 ?P54_8 ; n2:P582 ?P582_46 ] . ?P54_8 p:P118 [ ps:P118 wd:Q155223 ] . } ORDER BY DESC(?P582_46) LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the highest <end time> of [Michael Jordan] and has <league> [National Basketball Association]?",
        "Squall ID based": "what is a <P54> at the highest <P582> of <Q41421> and has <P118> <Q155223>?"
    },
    {
        "Question": "Who was the 16th president of the United States?",
        "ID": "b9992040",
        "Entities": "Q30:United States of America,16:None",
        "Mintaka Answer": "Q91:Abraham Lincoln",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 16 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 16 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"16\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"16\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"16\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"16\" <Q11696>?"
    },
    {
        "Question": "How many U.S. states have coastlines on the Pacific Ocean?",
        "ID": "dd71e137",
        "Entities": "Q30:United States of America, Q98:Pacific Ocean",
        "Mintaka Answer": "5",
        "Sparklis label based": "give me every [U.S. state] that has as a <country> [United States of America] and that has as a <located next to body of water> [Pacific Ocean] and give me the number of [U.S. state]",
        "Sparklis ID based": "give me every <Q35657> that has as a <P17> <Q30> and that has as a <P206> <Q98> and give me the number of <Q35657>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q35657_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> wd:[Pacific Ocean] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q35657_1 p:P206 [ ps:P206 wd:Q98 ] . }",
        "Squall label based": "how many [U.s. State] has <country> [United States Of America] and has <located in or next to body of water> [Pacific Ocean]?",
        "Squall ID based": "how many <Q35657> has <P17> <Q30> and has <P206> <Q98>?"
    },
    {
        "Question": "What was the longest Harry Potter movie?",
        "ID": "6fa39565",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q102244:Harry Potter and the Chamber of Secrets",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2047>?"
    },
    {
        "Question": "How many countries span the Sahara desert?",
        "ID": "5ecba195",
        "Entities": "Q6583:Sahara",
        "Mintaka Answer": "11",
        "Sparklis label based": "[Sahara] has a <country> and give me the number of <country>",
        "Sparklis ID based": "<Q6583> has a <P17> and give me the number of <P17>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:[Sahara] p:<country> [ ps:<country> ?P17_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:Q6583 p:P17 [ ps:P17 ?P17_8 ] . }",
        "Squall label based": "how many thing is a <country> of [Sahara]?",
        "Squall ID based": "how many thing is a <P17> of <Q6583>?"
    },
    {
        "Question": "How many books are in Twilight?",
        "ID": "2b36370f",
        "Entities": "Q44523:Twilight",
        "Mintaka Answer": "Q189378:Twilight,Q191540:New Moon,Q212473:Eclipse,Q53945:Breaking Dawn,Q1052268:Midnight Sun",
        "Sparklis label based": "[Twilight 3] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q44523> <P527> and give me the number of part(s)",
        "Sparql label based": "select distinct (count(distinct ?p527_8) as ?number_of_46) where { wd:[Twilight 3] p:<has part(s)> [ ps:<has part(s)> ?p527_8 ] . }",
        "Sparql ID based": "select distinct (count(distinct ?p527_8) as ?number_of_46) where { wd:Q44523 p:P527 [ ps:P527 ?p527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Twilight 3]?",
        "Squall ID based": "how many thing is a <P527> of <Q44523>?"
    },
    {
        "Question": "When did the third Twilight book come out?",
        "ID": "dc4304d5",
        "Entities": "Q44523:Twilight,3:None",
        "Mintaka Answer": "2007",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 3 [Twilight] and that has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 3 <Q189378> and that has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_410 WHERE { ?Q7725634_320 wdt:<instance of> wd:[Literary Work] . ?Q7725634_320 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Twilight 3] ] . ?Q7725634_320 p:<publication date> [ ps:<publication date> ?P577_324 ] . BIND (year(?P577_324) AS ?expr_410) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_410 WHERE { ?Q7725634_320 wdt:P31 wd:Q7725634 . ?Q7725634_320 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q44523 ] . ?Q7725634_320 p:P577 [ ps:P577 ?P577_324 ] . BIND (year(?P577_324) AS ?expr_410) }",
        "Squall label based": "what is the year of a <publication date> of a [Literary Work] that has <part of the series> at <series ordinal> \"3\" [Twilight 3]?",
        "Squall ID based": "what is the year of a <P577> of a <Q7725634> that has <P179> at <P1545> \"3\" <Q44523>?"
    },
    {
        "Question": "Which 1989 Steven Spielberg movie does not star Richard Dreyfuss?",
        "ID": "542fd4e6",
        "Entities": "Q181799:Richard Dreyfuss, Q8877:Steven Spielberg",
        "Mintaka Answer": "Q185658:Indiana Jones and the Last Crusade",
        "Sparklis label based": "give me every [film] that has as a <director> [Steven Spielberg] and that not has as a <cast member> [Richard Dreyfuss] and that has a <publication date> and where the year of the <publication date> = 1989",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q8877> and that not has as a <P161> <Q181799> and that has a <P577> and where the year of the <P577> = 1989",
        "Sparql label based": "SELECT DISTINCT ?Q11424_411 WHERE { ?Q11424_411 wdt:<instance of> wd:[Film] . ?Q11424_411 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . FILTER ( NOT EXISTS { ?Q11424_411 p:<cast member> [ ps:<cast member> wd:[Richard Dreyfuss] ] . } ) ?Q11424_411 p:<publication date> [ ps:<publication date> ?P577_448 ] . FILTER ( (year(?P577_448) = \"1989\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_411 WHERE { ?Q11424_411 wdt:P31 wd:Q11424 . ?Q11424_411 p:P57 [ ps:P57 wd:Q8877 ] . FILTER ( NOT EXISTS { ?Q11424_411 p:P161 [ ps:P161 wd:Q181799 ] . } ) ?Q11424_411 p:P577 [ ps:P577 ?P577_448 ] . FILTER ( (year(?P577_448) = \"1989\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [Steven Spielberg] and has not <cast member> [Richard Dreyfuss] and has a <publication date> whose year is 1989?",
        "Squall ID based": "which <Q11424> has <P57> <Q8877> and has not <P161> <Q181799> and has a <P577> whose year is 1989?"
    },
    {
        "Question": "What is the name of the third Fast & Furious movie?",
        "ID": "b318be64",
        "Entities": "Q1576873:Fast & Furious,3:None",
        "Mintaka Answer": "Q213208:The Fast and the Furious: Tokyo Drift",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:<instance of> wd:[Film] . ?Q11424_9 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:P31 wd:Q11424 . ?Q11424_9 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q1576873>?"
    },
    {
        "Question": "Did RuneScape come out before World of Warcraft?",
        "ID": "7fc9280a",
        "Entities": "Q131007:World of Warcraft, Q187732:RuneScape",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "World of Warcraft has a <publication date> and [RuneScape] has a <publication date> and give me the year of the 1st <publication date> and give me the year of the 2nd <publication date>",
        "Sparklis ID based": "World of Warcraft has a <P577> and <Q187732> has a <P577> and give me the year of the 1st <P577> and give me the year of the 2nd <P577>",
        "Sparql label based": "ASK { wd:[World Of Warcraft] p:<publication date> [ ps:<publication date> ?P1082_8 ] . wd:[Runescape] p:<publication date> [ps:<publication date> ?P1082_7]. Filter (?P1082_8 > ?P1082_7) }",
        "Sparql ID based": "ASK { wd:Q131007 p:P577 [ ps:P577 ?P1082_8 ] . wd:Q187732 p:P577 [ps:P577 ?P1082_7]. Filter (?P1082_8 > ?P1082_7) }",
        "Squall label based": "whether [World Of Warcraft] has a <publication date> greater than a <publication date> of [Runescape]?",
        "Squall ID based": "whether <Q131007> has a <P577> greater than a <P577> of <Q187732>?"
    },
    {
        "Question": "What Mario Party game has sold the most copies?",
        "ID": "d19b4e2b",
        "Entities": "Q1196737:Mario Party",
        "Mintaka Answer": "Q54936079:Super Mario Party",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mario Party 2] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q1196737> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Party 2] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q1196737 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Party 2] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1196737> and has the highest <P2664>?"
    },
    {
        "Question": "Who is the leader of Iraq?",
        "ID": "49da950d",
        "Entities": "Q796:Iraq",
        "Mintaka Answer": "Q808173:Barham Salih",
        "Sparklis label based": "give me every [human] that has as a <position held> with the highest-to-lowest start time  [President of Iraq]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the highest-to-lowest start time <Q889817>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ n1:<start time> ?P580_12 ; ps:<position held> wd:[President Of Iraq] ] . } ORDER BY DESC(?P580_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ n1:P580 ?P580_12 ; ps:P39 wd:Q889817 ] . } ORDER BY DESC(?P580_12) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the highest <start time> [President Of Iraq]?",
        "Squall ID based": "which <Q5> has <P39> at the highest <P580> <Q889817>?"
    },
    {
        "Question": "Who was the first woman to become vice president of the United States?",
        "ID": "7fb329a2",
        "Entities": "Q11699:Vice President of the United States",
        "Mintaka Answer": "Q10853588:Kamala Harris",
        "Sparklis label based": "give me every [human] that has as a <sex or gender> [female] and that has as a <position held> with the lowest-to-highest <start time> [Vice President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P21> <Q6581072> and that has as a <P39> with the lowest-to-highest <P580> <Q11699>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . ?Q5_1 p:<position held> [ n1:<start time> ?P580_7 ; ps:<position held> wd:[Vice President Of The United States] ] . } ORDER BY ASC(?P580_7)",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . ?Q5_1 p:P39 [ n1:P580 ?P580_7 ; ps:P39 wd:Q11699 ] . } ORDER BY ASC(?P580_7)",
        "Squall label based": "which [Human] has <sex or gender> [Female] and has <position held> at the ascending <start time> [Vice President Of The United States]?",
        "Squall ID based": "which <Q5> has <P21> <Q6581072> and has <P39> at the ascending <P580> <Q11699>?"
    },
    {
        "Question": "When did Bill Clinton's second term as president of the United States end?",
        "ID": "784320c7",
        "Entities": "Q11696:President of the United States, Q1124:Bill Clinton",
        "Mintaka Answer": "2001",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] with the highest-to-lowest <end time> and that is [Bill Clinton] and give me the year of the <end time>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with the highest-to-lowest <P582> and that is <Q1124> and give me the year of the <P582>",
        "Sparql label based": "SELECT DISTINCT ?expr_95 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ; pq:<end time> ?P582_9 ] . FILTER ( ?Q5_1 = wd:[Bill Clinton] ) BIND (year(?P582_9) AS ?expr_95) } ORDER BY DESC(?P582_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_95 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ; pq:P582 ?P582_9 ] . FILTER ( ?Q5_1 = wd:Q1124 ) BIND (year(?P582_9) AS ?expr_95) } ORDER BY DESC(?P582_9) LIMIT 1",
        "Squall label based": "what is the year of the highest thing at which <end time> a [Human] that is [Bill Clinton] has <position held> [President Of The United States]?",
        "Squall ID based": "what is the year of the highest thing at which <P582> a <Q5> that is <Q1124> has <P39> <Q11696>?"
    },
    {
        "Question": "Which Disney animated movie features Robin Williams?",
        "ID": "e2583e9a",
        "Entities": "Q7414:The Walt Disney Company, Q83338:Robin Williams",
        "Mintaka Answer": "Q215518:Aladdin",
        "Sparklis label based": "give me every [animated feature film] that has a <production company> that is <owned by> [The Walt Disney Company] and that has as a <voice actor> [Robin Williams]",
        "Sparklis ID based": "give me every <Q29168811> that has a <P272> that is <P127> <Q7414> and that has as a <P725> <Q83338>",
        "Sparql label based": "SELECT DISTINCT ?Q29168811_1 WHERE { ?Q29168811_1 wdt:<instance of> wd:[Animated Feature Film] . ?Q29168811_1 p:<production company> [ ps:<production company> ?P272_103 ] . ?P272_103 p:<owned by> [ ps:<owned by> wd:[The Walt Disney Company] ] . ?Q29168811_1 p:<voice actor> [ ps:<voice actor> wd:[Robin Williams] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q29168811_1 WHERE { ?Q29168811_1 wdt:P31 wd:Q29168811 . ?Q29168811_1 p:P272 [ ps:P272 ?P272_103 ] . ?P272_103 p:P127 [ ps:P127 wd:Q7414 ] . ?Q29168811_1 p:P725 [ ps:P725 wd:Q83338 ] . }",
        "Squall label based": "which [Animated Feature Film] has <voice actor> [Robin Williams] and has a <production company> that has <owned by> [The Walt Disney Company]?",
        "Squall ID based": "which <Q29168811> has <P725> <Q83338> and has a <P272> that has <P127> <Q7414>?"
    },
    {
        "Question": "When did Thomas Jefferson become the second US vice president?",
        "ID": "108bc7d8",
        "Entities": "Q11699:Vice President of the United States, Q11812:Thomas Jefferson",
        "Mintaka Answer": "1796",
        "Sparklis label based": "[Thomas Jefferson] has as a <position held> with <series ordinal> 2 [Vice President of the United States] with a <start time> and give me the year of the <start time>",
        "Sparklis ID based": "<Q11812> has as a <P39> with <P1545> 2 <Q11699> with a <P580> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_94 WHERE { wd:[Thomas Jefferson] p:<position held> [ n2:<series ordinal> \"2\" ; ps:<position held> wd:[Vice President Of The United States] ; n2:<start time> ?P580_8 ] . BIND (year(?P580_8) AS ?expr_94) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_94 WHERE { wd:Q11812 p:P39 [ n2:P1545 \"2\" ; ps:P39 wd:Q11699 ; n2:P580 ?P580_8 ] . BIND (year(?P580_8) AS ?expr_94) } LIMIT 1",
        "Squall label based": "what is the year of a <start time> of a thing that is a <position held> of [Thomas Jefferson] and has <series ordinal> \"2\" and has <position held> [Vice President Of The United States]?",
        "Squall ID based": "what is the year of a <P580> of a thing that is a <P39> of <Q11812> and has <P1545> \"2\" and has <P39> <Q11699>?"
    },
    {
        "Question": "What year was Tupac Shakur killed?",
        "ID": "cb64c818",
        "Entities": "Q6107:Tupac Shakur",
        "Mintaka Answer": "1996",
        "Sparklis label based": "[Tupac Shakur] has a <date of death> and give me the year of the <date of death>",
        "Sparklis ID based": "<Q6107> has a <P570> and give me the year of the <P570>",
        "Sparql label based": "SELECT DISTINCT ?expr_180 WHERE { wd:[Tupac Shakur] p:<date of death> [ ps:<date of death> ?P570_8 ] . BIND (year(?P570_8) AS ?expr_180) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_180 WHERE { wd:Q6107 p:P570 [ ps:P570 ?P570_8 ] . BIND (year(?P570_8) AS ?expr_180) }",
        "Squall label based": "what is the year of a <date of death> of [Tupac Shakur]?",
        "Squall ID based": "what is the year of a <P570> of <Q6107>?"
    },
    {
        "Question": "What Aerosmith album did Joe Perry not play on?",
        "ID": "3aa69d8b",
        "Entities": "Q126826:Aerosmith, Q313378:Joe Perry",
        "Mintaka Answer": "Q2264905:Rock in a Hard Place",
        "Sparklis label based": "Aerosmith is the performer of an album that not has as a performer  Joe Perry",
        "Sparklis ID based": "Aerosmith is the performer of an album that not has as a performer Joe Perry",
        "Sparql label based": "SELECT DISTINCT ?Q482994_93 WHERE { ?Q482994_93 wdt:<instance of> wd:[Album] . ?Q482994_93 p:<performer> [ ps:<performer> wd:[Aerosmith 2] ] . FILTER ( NOT EXISTS { ?Q482994_93 p:<performer> [ ps:<performer> wd:[Joe Perry] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_93 WHERE { ?Q482994_93 wdt:P31 wd:Q482994 . ?Q482994_93 p:P175 [ ps:P175 wd:Q126826 ] . FILTER ( NOT EXISTS { ?Q482994_93 p:P175 [ ps:P175 wd:Q313378 ] . } ) }",
        "Squall label based": "which [Album] has <performer> [Aerosmith 2] and has not <performer> [Joe Perry]?",
        "Squall ID based": "which <Q482994> has <P175> <Q126826> and has not <P175> <Q313378>?"
    },
    {
        "Question": "What was the first Pirates of the Caribbean movie?",
        "ID": "7f0edb54",
        "Entities": "Q194318:Pirates of the Caribbean,1:None",
        "Mintaka Answer": "Q46717:Pirates of the Caribbean: The Curse of the Black Pearl",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q194318 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has the lowest <P577>?"
    },
    {
        "Question": "Is the Missouri River longer than the Mississippi River?",
        "ID": "66d9ba74",
        "Entities": "Q5419:Missouri River,Q1497:Mississippi River",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Missouri River] has a <length> and [Mississippi River] has a <length> and give me the total 1st <length> and give me the total 2nd <length> and where the total 2nd <length> < the total 1st <length>",
        "Sparklis ID based": "<Q5419> has a <P2043> and <Q1497> has a <P2043> and give me the total 1st <P2043> and give me the total 2nd <P2043> and where the total 2nd <P2043> <_the_total_1st_<length>",
        "Sparql label based": "ASK { wd:[Missouri River] p:<length> [ ps:<length> ?P1082_8 ] . wd:[Mississippi River] p:<length> [ps:<length> ?P1082_7]. Filter (?P1082_8 > ?P1082_7) }",
        "Sparql ID based": "ASK { wd:Q5419 p:P2043 [ ps:P2043 ?P1082_8 ] . wd:Q1497 p:P2043 [ps:P2043 ?P1082_7]. Filter (?P1082_8 > ?P1082_7) }",
        "Squall label based": "whether [Missouri River] has a <length> greater than a <length> of [Mississippi River]?",
        "Squall ID based": "whether <Q5419> has a <P2043> greater than a <P2043> of <Q1497>?"
    },
    {
        "Question": "Was Avatar's budget greater than $200 million?",
        "ID": "821bbf84",
        "Entities": "Q24871:Avatar,200000000:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Avatar] has a <cost> higher or equal to 200000000",
        "Sparklis ID based": "<Q24871> has a <P2130> higher or equal to 200000000",
        "Sparql label based": "Ask { { SELECT DISTINCT (SUM(?P2130_8) AS ?total_110) WHERE { wd:[Avatar] p:<cost> [ ps:<cost> ?P2130_8 ] . } } filter(?total_110 > \"200000000\"^^xsd:integer) }",
        "Sparql ID based": "Ask { { SELECT DISTINCT (SUM(?P2130_8) AS ?total_110) WHERE { wd:Q24871 p:P2130 [ ps:P2130 ?P2130_8 ] . } } filter(?total_110 > \"200000000\"^^xsd:integer) }",
        "Squall label based": "what is a <cost> of [Avatar] and is greater or equal to 200000000?",
        "Squall ID based": "what is a <P2130> of <Q24871> and is greater or equal to 200000000?"
    },
    {
        "Question": "What has been the most expensive movie to be directed by James Cameron?",
        "ID": "7dbdd31c",
        "Entities": "Q42574:James Cameron",
        "Mintaka Answer": "Q44578:Titanic",
        "Sparklis label based": "give me every [film] that has as a <director> [James Cameron] and that has the highest-to-lowest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q42574> and that has the highest-to-lowest <P2130>",
        "Sparql label based": "select distinct ?q11424_349 where { ?q11424_349 wdt:<instance of> wd:[Film] . ?q11424_349 p:<director> [ ps:<director> wd:[James Cameron] ] . ?q11424_349 p:<cost> [ ps:<cost> ?p2130_353 ] . } order by desc(?p2130_353) limit 1",
        "Sparql ID based": "select distinct ?q11424_349 where { ?q11424_349 wdt:P31 wd:Q11424 . ?q11424_349 p:P57 [ ps:P57 wd:Q42574 ] . ?q11424_349 p:P2130 [ ps:P2130 ?p2130_353 ] . } order by desc(?p2130_353) limit 1",
        "Squall label based": "which [Film] has <director> [James Cameron] and has the highest <cost>?",
        "Squall ID based": "which <Q11424> has <P57> <Q42574> and has the highest <P2130>?"
    },
    {
        "Question": "Which Twilight movie made the most money?",
        "ID": "99703272",
        "Entities": "Q44523:Twilight",
        "Mintaka Answer": "Q60487:The Twilight Saga: Breaking Dawn \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Twilight Saga] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q652599> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Twilight Saga] ] . ?Q11424_349 p:<box office> [ ps:<box office> ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q652599 ] . ?Q11424_349 p:P2142 [ ps:P2142 ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Twilight Saga] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q652599> and has the highest <P2142>?"
    },
    {
        "Question": "How many games are in the Call of Duty series?",
        "ID": "4e93ad5e",
        "Entities": "Q192156:Call of Duty",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Call of Duty] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q192156> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Call Of Duty] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q192156 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Call Of Duty]?",
        "Squall ID based": "how many thing is a <P527> of <Q192156>?"
    },
    {
        "Question": "What is Iron Man's real name?",
        "ID": "12ed5085",
        "Entities": "Q180704:Iron Man",
        "Mintaka Answer": "Q23894967:Tony Stark/ Anthony Edward Stark",
        "Sparklis label based": "[Iron Man] has a <birth name>",
        "Sparklis ID based": "<Q180704> has a <P1477>",
        "Sparql label based": "select distinct ?p1477_197 where { wd:[Iron Man] p:<birth name> [ ps:<birth name> ?p1477_197 ] . }",
        "Sparql ID based": "select distinct ?p1477_197 where { wd:Q180704 p:P1477 [ ps:P1477 ?p1477_197 ] . }",
        "Squall label based": "what is a <birth name> of [Iron Man]?",
        "Squall ID based": "what is a <P1477> of <Q180704>?"
    },
    {
        "Question": "When did Metallica put out their fourth album?",
        "ID": "0aeebf1e",
        "Entities": "Q15920: Metallica",
        "Mintaka Answer": "1988",
        "Sparklis label based": "Metallica has  a discography that has as a list  a Wikimedia albums discography that has as a part  an album that has  a publication date     and give me lowest-to-highest the year of the publication date",
        "Sparklis ID based": "Metallica has a discography that has as a list a Wikimedia albums discography that has as a part an album that has a publication date and give me lowest-to-highest the year of the publication date",
        "Sparql label based": "SELECT DISTINCT ?expr_1840 WHERE { wd:[Metallica 2] p:<discography> [ ps:<discography> ?P358_388 ] . ?P2354_1714 wdt:<instance of> wd:[Wikimedia Albums Discography] . ?P358_388 p:<has list> [ ps:<has list> ?P2354_1714 ] . ?P361_1599 wdt:<instance of> wd:[Album] . ?P361_1599 p:<part of> [ ps:<part of> ?P2354_1714 ] . ?P361_1599 p:<publication date> [ ps:<publication date> ?P577_1703 ] . BIND (year(?P577_1703) AS ?expr_1840) } ORDER BY ASC(?expr_1840) OFFSET 3 LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_1840 WHERE { wd:Q15920 p:P358 [ ps:P358 ?P358_388 ] . ?P2354_1714 wdt:P31 wd:Q59191021 . ?P358_388 p:P2354 [ ps:P2354 ?P2354_1714 ] . ?P361_1599 wdt:P31 wd:Q482994 . ?P361_1599 p:P361 [ ps:P361 ?P2354_1714 ] . ?P361_1599 p:P577 [ ps:P577 ?P577_1703 ] . BIND (year(?P577_1703) AS ?expr_1840) } ORDER BY ASC(?expr_1840) OFFSET 3 LIMIT 1",
        "Squall label based": "what is the 4th lowest year of a <publication date> of a [Album] that has <part of> a [Wikimedia Albums Discography] that is a <has list> of a <discography> of [Metallica 2]?",
        "Squall ID based": "what is the 4th lowest year of a <P577> of a <Q482994> that has <P361> a <Q59191021> that is a <P2354> of a <P358> of <Q15920>?"
    },
    {
        "Question": "Did Firework by Katy Perry come out after 2012?",
        "ID": "199b1b70",
        "Entities": "Q163412:Firework,Q42493:Katy Perry,2012:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Firework] has a <publication date> and where the year of the <publication date> > 2012",
        "Sparklis ID based": "<Q163412> has a <P577> and where the year of the <P577> > 2012",
        "Sparql label based": "Ask { wd:[Firework] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) > \"2012\"^^xsd:integer) ) }",
        "Sparql ID based": "Ask { wd:Q163412 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) > \"2012\"^^xsd:integer) ) }",
        "Squall label based": "whether [Firework] has a <publication date> whose year is greater than 2012?",
        "Squall ID based": "whether <Q163412> has a <P577> whose year is greater than 2012?"
    },
    {
        "Question": "Where was Christian Gray born?",
        "ID": "51d5e11f",
        "Entities": "Q95125355:Christian Gray",
        "Mintaka Answer": "Q12439:Detroit",
        "Sparklis label based": "[Christian Gray] has a <place of birth>",
        "Sparklis ID based": "<Q95125355> has a <P19>",
        "Sparql label based": "SELECT DISTINCT ?P19_8 WHERE { wd:[Christian Gray] p:<place of birth> [ ps:<place of birth> ?P19_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P19_8 WHERE { wd:Q95125355 p:P19 [ ps:P19 ?P19_8 ] . }",
        "Squall label based": "what is a <place of birth> of [Christian Gray]?",
        "Squall ID based": "what is a <P19> of <Q95125355>?"
    },
    {
        "Question": "What city in France is nicknamed the City of Light?",
        "ID": "14090d8e",
        "Entities": "Q142:France, Q18347767:City of Light",
        "Mintaka Answer": "Q90:Paris",
        "Sparklis label based": "give me every [largest city] that has as a <country> [France] and that has as a <nickname> The City of Light",
        "Sparklis ID based": "give me every <Q51929311> that has as a <P17> <Q142> and that has as a <P1449> The City of Light",
        "Sparql label based": "SELECT DISTINCT ?Q51929311_8 WHERE { ?Q51929311_8 wdt:<instance of> wd:[Largest City] . ?Q51929311_8 p:<country> [ ps:<country> wd:[France] ] . ?Q51929311_8 p:<nickname> [ ps:<nickname> \"The City of Light\"@en ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q51929311_8 WHERE { ?Q51929311_8 wdt:P31 wd:Q51929311 . ?Q51929311_8 p:P17 [ ps:P17 wd:Q142 ] . ?Q51929311_8 p:P1449 [ ps:P1449 \"The City of Light\"@en ] . } LIMIT 1",
        "Squall label based": "which [Largest City] has <country> [France] and has <nickname> \"The City of Light\"@en?",
        "Squall ID based": "which <Q51929311> has <P17> <Q142> and has <P1449> \"The City of Light\"@en?"
    },
    {
        "Question": "What was the first LittleBigPlanet game not developed by Media Molecule?",
        "ID": "6f37a2f0",
        "Entities": "Q651140:Media Molecule, Q31953:LittleBigPlanet",
        "Mintaka Answer": "Q17194812:LittleBigPlanet 3",
        "Sparklis label based": "give me every [video game] that not has as a <developer> [Media Molecule] and that has as a <part of the series> [LittleBigPlanet] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P178> <Q651140> and that has as a <P179> <Q31953> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 ?P577_45 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Littlebigplanet] ] . FILTER ( NOT EXISTS { ?Q7889_8 p:<developer> [ ps:<developer> wd:[Media Molecule] ] . } ) ?Q7889_8 p:<publication date> [ ps:<publication date> ?P577_45 ] . } ORDER BY ASC(?P577_45) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 ?P577_45 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q31953 ] . FILTER ( NOT EXISTS { ?Q7889_8 p:P178 [ ps:P178 wd:Q651140 ] . } ) ?Q7889_8 p:P577 [ ps:P577 ?P577_45 ] . } ORDER BY ASC(?P577_45) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Littlebigplanet] and has not <developer> [Media Molecule] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7889> has <P179> <Q31953> and has not <P178> <Q651140> and has the lowest <P577>?"
    },
    {
        "Question": "Who is a current senator of Utah and a former governor of Massachusetts?",
        "ID": "b6d811c4",
        "Entities": "Q829:Utah,Q4416090:United States senator,Q771:Massachusetts",
        "Mintaka Answer": "Q4496:Mitt Romney",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with <electoral district> [Utah Class 1 senate seat] and [Governor of Massachusetts] with an <end time>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with <P768> <Q101498953> and <Q887117> with an <P582>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n1:<electoral district> wd:[Utah Class 1 Senate Seat] ] . ?q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Massachusetts] ; n1:<end time> ?p582_9 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n1:P768 wd:Q101498953 ] . ?q5_1 p:P39 [ ps:P39 wd:Q887117 ; n1:P582 ?p582_9 ] . }",
        "Squall label based": "which [Human] has <position held> at <electoral district> [Utah Class 1 Senate Seat] [United States Senator] and has <position held> at a <end time> [Governor Of Massachusetts]?",
        "Squall ID based": "which <Q5> has <P39> at <P768> <Q101498953> <Q4416090> and has <P39> at a <P582> <Q887117>?"
    },
    {
        "Question": "Who is the 17th Chief Justice of the United States Supreme Court?",
        "ID": "95b62bb1",
        "Entities": "Q11201:Supreme Court of the United States, Q3188089:chief justice",
        "Mintaka Answer": "Q11153:John Roberts",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 17 [Chief Justice of the United States] that is the subclass of chief justice and that has as an organization directed by the office or position Supreme Court of the United States",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 17 <Q11147> that is the subclass of chief justice and that has as an organization directed by the office or position Supreme Court of the United States",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"17\" ; ps:<position held> wd:[Chief Justice Of The United States] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"17\" ; ps:P39 wd:Q11147 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"17\" [Chief Justice Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"17\" <Q11147>?"
    },
    {
        "Question": "Which member of The Black Eyed Peas appeared in the movie Poseidon?",
        "ID": "382f0a2e",
        "Entities": "Q134541:Black Eyed Peas,Q906633:Poseidon",
        "Mintaka Answer": "Q180004:Fergie",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Poseidon] and that has as a <field of work> [music composing]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q906633> and that has as a <P101> <Q11895763>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[Poseidon] p:<cast member> [ ps:<cast member> ?q5_1 ] . ?q5_1 p:<field of work> [ ps:<field of work> wd:[Music Composing] ] . } limit 1",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q906633 p:P161 [ ps:P161 ?q5_1 ] . ?q5_1 p:P101 [ ps:P101 wd:Q11895763 ] . } limit 1",
        "Squall label based": "which [Human] is a <cast member> of [Poseidon] and has <field of work> [Music Composing]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q906633> and has <P101> <Q11895763>?"
    },
    {
        "Question": "What is the title of Episode V of Star Wars?",
        "ID": "234907",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "Q181795:Star Wars: Episode V \u2013 The Empire Strikes Back",
        "Sparklis label based": "[Star Wars: Episode V \u2013 The Empire Strikes Back] has a <title>",
        "Sparklis ID based": "<Q181795> has a <P1476>",
        "Sparql label based": "select distinct ?p1476_9 where { wd:[Star Wars: Episode V \u2013 The Empire Strikes Back] p:<title> [ ps:<title> ?p1476_9 ] . }",
        "Sparql ID based": "select distinct ?p1476_9 where { wd:Q181795 p:P1476 [ ps:P1476 ?p1476_9 ] . }",
        "Squall label based": "what is a <title> of [Star Wars: Episode V \u2013 The Empire Strikes Back]?",
        "Squall ID based": "what is a <P1476> of <Q181795>?"
    },
    {
        "Question": "Which artist was a member of The Beatles and Wings?",
        "ID": "f76aee21",
        "Entities": "Q1299:The Beatles, Q622988:Wings",
        "Mintaka Answer": "Q2599:Paul McCartney",
        "Sparklis label based": "give me every [human] that is the <member of> [The Beatles] and of [Wings]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q3295515> and of <Q622988>",
        "Sparql label based": "SELECT DISTINCT ?Q5_9 WHERE { ?Q5_9 wdt:<instance of> wd:[Human] . ?Q5_9 p:<member of> [ ps:<member of> wd:[The Beatles 2] ] . ?Q5_9 p:<member of> [ ps:<member of> wd:[Wings] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_9 WHERE { ?Q5_9 wdt:P31 wd:Q5 . ?Q5_9 p:P463 [ ps:P463 wd:Q1299 ] . ?Q5_9 p:P463 [ ps:P463 wd:Q622988 ] . }",
        "Squall label based": "which [Human] has <member of> [The Beatles 2] and [Wings]?",
        "Squall ID based": "which <Q5> has <P463> <Q1299> and <Q622988>?"
    },
    {
        "Question": "Who was the 14th president of the United States?",
        "ID": "9b04d62f",
        "Entities": "Q30:United States of America,14:None",
        "Mintaka Answer": "Q12312:Franklin Pierce",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 14 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 14 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"14\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"14\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"14\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"14\" <Q11696>?"
    },
    {
        "Question": "What countries are not part of the UN?",
        "ID": "bc7923c2",
        "Entities": "Q1065:United Nations",
        "Mintaka Answer": "Q237:Vatican City,Q23792:Palestine",
        "Sparklis label based": "give me every [sovereign state] that not is the <member of> [United Nations]",
        "Sparklis ID based": "give me every <Q3624078> that not is the <P463> <Q1065>",
        "Sparql label based": "SELECT DISTINCT ?Q3624078_8 WHERE { ?Q3624078_8 wdt:<instance of> wd:[Sovereign State] . FILTER ( NOT EXISTS { ?Q3624078_8 p:<member of> [ ps:<member of> wd:[United Nations] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q3624078_8 WHERE { ?Q3624078_8 wdt:P31 wd:Q3624078 . FILTER ( NOT EXISTS { ?Q3624078_8 p:P463 [ ps:P463 wd:Q1065 ] . } ) }",
        "Squall label based": "which [Sovereign State] has not <member of> [United Nations]?",
        "Squall ID based": "which <Q3624078> has not <P463> <Q1065>?"
    },
    {
        "Question": "Which movie was directed by Gus Van Sant and starred Sean Penn?",
        "ID": "8406d625",
        "Entities": "Q25186:Gus Van Sant,Q44221:Sean Penn",
        "Mintaka Answer": "Q201687:Milk",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Sean Penn] and that has as a <director> [Gus Van Sant]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q44221> and that has as a <P57> <Q25186>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Sean Penn] ] . ?q11424_1 p:<director> [ ps:<director> wd:[Gus Van Sant] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P161 [ ps:P161 wd:Q44221 ] . ?q11424_1 p:P57 [ ps:P57 wd:Q25186 ] . }",
        "Squall label based": "which [Film] has <cast member> [Sean Penn] and has <director> [Gus Van Sant]?",
        "Squall ID based": "which <Q11424> has <P161> <Q44221> and has <P57> <Q25186>?"
    },
    {
        "Question": "How many oceans border Russia?",
        "ID": "144632d9",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Russia] has a <located next to body of water> that is the instance of [ocean] and give me the number of <located next to body of water>",
        "Sparklis ID based": "<Q159> has a <P206> that is the instance of <Q9430> and give me the number of <P206>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:[Russia] p:<located in or next to body of water> [ ps:<located in or next to body of water> ?P206_8 ] . ?P206_8 p:<instance of> [ ps:<instance of> wd:[Ocean] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:Q159 p:P206 [ ps:P206 ?P206_8 ] . ?P206_8 p:P31 [ ps:P31 wd:Q9430 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <located in or next to body of water> of [Russia] and has <instance of> [Ocean]?",
        "Squall ID based": "how many thing is a <P206> of <Q159> and has <P31> <Q9430>?"
    },
    {
        "Question": "Which member of The Who is no longer alive?",
        "ID": "b81f4bea",
        "Entities": "Q93346:The Who",
        "Mintaka Answer": "Q211696:Keith Moon, Q215835:John Entwistle",
        "Sparklis label based": "[The Who] <has part(s)> that has a <date of death>",
        "Sparklis ID based": "<Q93346> <P527> that has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[The Who] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<date of death> [ ps:<date of death> ?P570_83 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q93346 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P570 [ ps:P570 ?P570_83 ] . }",
        "Squall label based": "what is a <has part(s)> of [The Who] and has a <date of death>?",
        "Squall ID based": "what is a <P527> of <Q93346> and has a <P570>?"
    },
    {
        "Question": "How many World Series have the Baltimore Orioles won?",
        "ID": "9a769d7d",
        "Entities": "Q265538:World Series, Q650816:Baltimore Orioles",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Baltimore Orioles] has a <victory> and give me the number of <victory>",
        "Sparklis ID based": "<Q650816> has a <P2522> and give me the number of <P2522>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P2522_8) AS ?number_of_46) WHERE { wd:[Baltimore Orioles] p:<victory> [ ps:<victory> ?P2522_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P2522_8) AS ?number_of_46) WHERE { wd:Q650816 p:P2522 [ ps:P2522 ?P2522_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <victory> of [Baltimore Orioles]?",
        "Squall ID based": "how many thing is a <P2522> of <Q650816>?"
    },
    {
        "Question": "Which book in the Discworld series was released in 2001?",
        "ID": "bc531d40",
        "Entities": "Q3257270:Discworld",
        "Mintaka Answer": "Q2414365:Thief of Time",
        "Sparklis label based": "[Discworld] <has part(s)> that has a <publication date> and where the year of the <publication date> = 2001",
        "Sparklis ID based": "<Q253295> <P527> that has a <P577> and where the year of the <P577> = 2001",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Discworld Books] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_47 ] . FILTER ( (year(?P577_47) = \"2001\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q3257270 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_47 ] . FILTER ( (year(?P577_47) = \"2001\"^^xsd:integer) ) }",
        "Squall label based": "what is a <has part(s)> of [Discworld Books] and has a <publication date> whose year is 2001?",
        "Squall ID based": "what is a <P527> of <Q3257270> and has a <P577> whose year is 2001?"
    },
    {
        "Question": "What is the third NBA team Kevin Durant played for?",
        "ID": "c0c6fe0c",
        "Entities": "Q155223:National Basketball Association, Q29545:Kevin Durant",
        "Mintaka Answer": "Q572134:Brooklyn Nets",
        "Sparklis label based": "[Kevin Durant] has as a league [National Basketball Association] and has a <member of sports team> with the lowest-to-highest <start time>",
        "Sparklis ID based": "<Q29545> has as a league <Q155223> and has a <P54> with the lowest-to-highest <P580>",
        "Sparql label based": "SELECT DISTINCT ?P54_4 WHERE {wd:[Kevin Durant] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ; n1:<start time> ?P580_107 ] . } ORDER BY ASC(?P580_107) offset 3 LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_4 WHERE {wd:Q29545 p:P54 [ ps:P54 ?P54_4 ; n1:P580 ?P580_107 ] . } ORDER BY ASC(?P580_107) offset 3 LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the 4th lowest <start time> of [Kevin Durant]?",
        "Squall ID based": "what is a <P54> at the 4th lowest <P580> of <Q29545>?"
    },
    {
        "Question": "How many books are in the Game of Thrones series?",
        "ID": "411db3cb",
        "Entities": "Q45875:A Song of Ice and Fire",
        "Mintaka Answer": "Q1751870:A Game of Thrones,Q300370:A Clash of Kings,Q431927:A Storm of Swords,Q1764445:A Feast for Crows,Q28306:A Dance with Dragons",
        "Sparklis label based": "[A Song of Ice and Fire] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q45875> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[A Song Of Ice And Fire] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q45875 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [A Song Of Ice And Fire]?",
        "Squall ID based": "how many thing is a <P527> of <Q45875>?"
    },
    {
        "Question": "Which Herman Melville novel features a character called Ahab?",
        "ID": "bce33795",
        "Entities": "Q2630009:Captain Ahab,Q4985:Herman Melville",
        "Mintaka Answer": "Q174596:Moby-Dick",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Herman Melville] and that has as a <characters> [Captain Ahab]",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q4985> and that has as a <P674> <Q2630009>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<author> [ ps:<author> wd:[Herman Melville] ] . ?Q7725634_1 p:<characters> [ ps:<characters> wd:[Captain Ahab] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P50 [ ps:P50 wd:Q4985 ] . ?Q7725634_1 p:P674 [ ps:P674 wd:Q2630009 ] . }",
        "Squall label based": "which [Literary Work] has <author> [Herman Melville] and has <characters> [Captain Ahab]?",
        "Squall ID based": "which <Q7725634> has <P50> <Q4985> and has <P674> <Q2630009>?"
    },
    {
        "Question": "Which member of One Direction was not born in England?",
        "ID": "9349f49f",
        "Entities": "Q146027:One Direction,Q21:England",
        "Mintaka Answer": "Q775231:Niall Horan",
        "Sparklis label based": "[One Direction] is the <instance of> boy band and <has part(s)> that has a <place of birth> that not has as a <country> [United Kingdom]",
        "Sparklis ID based": "<Q146027> is the <P31> boy band and <P527> that has a <P19> that not has as a <P17> <Q145>",
        "Sparql label based": "SELECT DISTINCT ?P463_10 WHERE { ?P463_10 p:<member of> [ ps:<member of> wd:[One Direction] ] . FILTER ( NOT EXISTS { ?P463_10 p:<place of birth> [ ps:<place of birth> ?P19_278 ] . ?P19_278 p:<country> [ ps:<country> wd:[United Kingdom] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_10 WHERE { ?P463_10 p:P463 [ ps:P463 wd:Q146027 ] . FILTER ( NOT EXISTS { ?P463_10 p:P19 [ ps:P19 ?P19_278 ] . ?P19_278 p:P17 [ ps:P17 wd:Q145 ] . } ) }",
        "Squall label based": "what has <member of> [One Direction] and has not a <place of birth> that has <country> [United Kingdom]?",
        "Squall ID based": "what has <P463> <Q146027> and has not a <P19> that has <P17> <Q145>?"
    },
    {
        "Question": "How many VR Half-Life games have Valve released?",
        "ID": "29cfd71c",
        "Entities": "Q193559:Valve Corporation,Q752241:Half-Life",
        "Mintaka Answer": "Q75653574:Half-Life: Alyx",
        "Sparklis label based": "give me every [video game] that is <nominated for> [The Game Awards \u2212 Best VR/AR] and that has as a <part of the series> [Half-Life] and that has as a <publisher> [Valve Corporation]",
        "Sparklis ID based": "give me every <Q7889> that is <P1411> <Q104117235> and that has as a <P179> <Q752241> and that has as a <P123> <Q193559>",
        "Sparql label based": "select distinct ?q7889_1 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<nominated for> [ ps:<nominated for> wd:[The Game Awards \u2212 Best Vr/ar] ] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Half-life] ] . ?q7889_1 p:<publisher> [ ps:<publisher> wd:[Valve Corporation] ] . }",
        "Sparql ID based": "select distinct ?q7889_1 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P1411 [ ps:P1411 wd:Q104117235 ] . ?q7889_1 p:P179 [ ps:P179 wd:Q752241 ] . ?q7889_1 p:P123 [ ps:P123 wd:Q193559 ] . }",
        "Squall label based": "which [Video Game] has <nominated for> [The Game Awards \u2212 Best Vr/ar] and has <part of the series> [Half-life] and has <publisher> [Valve Corporation]?",
        "Squall ID based": "which <Q7889> has <P1411> <Q104117235> and has <P179> <Q752241> and has <P123> <Q193559>?"
    },
    {
        "Question": "Which Avengers movie made the most money?",
        "ID": "924474cb",
        "Entities": "Q20021634:Avengers",
        "Mintaka Answer": "Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Avengers 2] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q20021634> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Avengers 2] ] . ?Q11424_349 p:<box office> [ ps:<box office> ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q20021634 ] . ?Q11424_349 p:P2142 [ ps:P2142 ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Avengers 2] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q20021634> and has the highest <P2142>?"
    },
    {
        "Question": "What is the tallest mountain in Pennsylvania?",
        "ID": "c90da405",
        "Entities": "Q1400:Pennsylvania",
        "Mintaka Answer": "Q3660:Mount Davis",
        "Sparklis label based": "give me every [mountain] that has a <located in the administrative territorial entity> that is the <instance of> [township of Pennsylvania] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has a <P131> that is the <P31> <Q9035798> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_103 ] . ?P131_103 p:<instance of> [ ps:<instance of> wd:[Township Of Pennsylvania] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_139 ] . } ORDER BY DESC(?P2044_139) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P131 [ ps:P131 ?P131_103 ] . ?P131_103 p:P31 [ ps:P31 wd:Q9035798 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_139 ] . } ORDER BY DESC(?P2044_139) LIMIT 1",
        "Squall label based": "which [Mountain] has the highest <elevation above sea level> and has a <located in the administrative territorial entity> that has <instance of> [Township Of Pennsylvania]?",
        "Squall ID based": "which <Q8502> has the highest <P2044> and has a <P131> that has <P31> <Q9035798>?"
    },
    {
        "Question": "What was the second movie in the Peter Jackson Lord of the Rings trilogy?",
        "ID": "1d4654ab",
        "Entities": "Q190214:The Lord of the Rings trilogy,Q4465:Peter Jackson,2:None",
        "Mintaka Answer": "Q164963:The Lord of the Rings: The Two Towers",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 2 [The Lord of the Rings trilogy]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 2 <Q190214>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q190214 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"2\" [The Lord Of The Rings Trilogy]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"2\" <Q190214>?"
    },
    {
        "Question": "Who played Detective Rick Deckard in Blade Runner?",
        "ID": "4552a654",
        "Entities": "Q184843:Blade Runner,Q943048:Rick Deckard",
        "Mintaka Answer": "Q81328:Harrison Ford",
        "Sparklis label based": "[Blade Runner] has as a <cast member> with <character role> [Rick Deckard] something",
        "Sparklis ID based": "<Q184843> has as a <P161> with <P453> <Q943048> something",
        "Sparql label based": "SELECT DISTINCT ?P161_8 WHERE { wd:[Blade Runner] p:<cast member> [ n1:<character role> wd:[Rick Deckard] ; ps:<cast member> ?P161_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P161_8 WHERE { wd:Q184843 p:P161 [ n1:P453 wd:Q943048 ; ps:P161 ?P161_8 ] . }",
        "Squall label based": "what is a <cast member> at <character role> [Rick Deckard] of [Blade Runner]?",
        "Squall ID based": "what is a <P161> at <P453> <Q943048> of <Q184843>?"
    },
    {
        "Question": "What is the oldest university in England?",
        "ID": "000c89ac",
        "Entities": "Q21:England",
        "Mintaka Answer": "Q34433:University of Oxford",
        "Sparklis label based": "give me every [public university] that has as a <country> [United Kingdom] and that has the lowest-to-highest <inception>",
        "Sparklis ID based": "give me every <Q875538> that has as a <P17> <Q145> and that has the lowest-to-highest <P571>",
        "Sparql label based": "select distinct ?q875538_1 ?p571_40 where { ?q875538_1 wdt:<instance of> wd:[Public University] . ?q875538_1 p:<country> [ ps:<country> wd:[United Kingdom] ] . ?q875538_1 p:<inception> [ ps:<inception> ?p571_40 ] . } order by asc(?p571_40) limit 1",
        "Sparql ID based": "select distinct ?q875538_1 ?p571_40 where { ?q875538_1 wdt:P31 wd:Q875538 . ?q875538_1 p:P17 [ ps:P17 wd:Q145 ] . ?q875538_1 p:P571 [ ps:P571 ?p571_40 ] . } order by asc(?p571_40) limit 1",
        "Squall label based": "which [Public University] has <country> [United Kingdom] and has the lowest <inception>?",
        "Squall ID based": "which <Q875538> has <P17> <Q145> and has the lowest <P571>?"
    },
    {
        "Question": "Which 2010 Christopher Nolan movie does not star Matthew McConaughey?",
        "ID": "37c24341",
        "Entities": "Q25191:Christopher Nolan, Q188955:Matthew McConaughey",
        "Mintaka Answer": "Q25188:Inception",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that not has as a <cast member> [Matthew McConaughey] and that has a <publication date> and where the year of the <publication date> = 2010",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that not has as a <P161> <Q188955> and that has a <P577> and where the year of the <P577> = 2010",
        "Sparql label based": "SELECT DISTINCT ?Q11424_133 WHERE { ?Q11424_133 wdt:<instance of> wd:[Film] . ?Q11424_133 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . FILTER ( NOT EXISTS { ?Q11424_133 p:<cast member> [ ps:<cast member> wd:[Matthew Mcconaughey] ] . } ) ?Q11424_133 p:<publication date> [ ps:<publication date> ?P577_137 ] . FILTER ( (year(?P577_137) = \"2010\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_133 WHERE { ?Q11424_133 wdt:P31 wd:Q11424 . ?Q11424_133 p:P57 [ ps:P57 wd:Q25191 ] . FILTER ( NOT EXISTS { ?Q11424_133 p:P161 [ ps:P161 wd:Q188955 ] . } ) ?Q11424_133 p:P577 [ ps:P577 ?P577_137 ] . FILTER ( (year(?P577_137) = \"2010\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has not <cast member> [Matthew Mcconaughey] and has a <publication date> whose year is 2010?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has not <P161> <Q188955> and has a <P577> whose year is 2010?"
    },
    {
        "Question": "What is the best-selling Zelda game?",
        "ID": "96e319a7",
        "Entities": "Q12393:The Legend of Zelda",
        "Mintaka Answer": "Q17185964:The Legend of Zelda: Breath of the Wild",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [The Legend of Zelda] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q12393> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[The Legend Of Zelda] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q12393 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [The Legend Of Zelda] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q12393> and has the highest <P2664>?"
    },
    {
        "Question": "What book written by Hunter Thompson was released in 1983?",
        "ID": "0fc396ca",
        "Entities": "Q219780:Hunter S. Thompson",
        "Mintaka Answer": "Q7728463:The Curse of Lono",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Hunter S. Thompson] and that has a <publication date> and where the year of the <publication date> = 1983",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q219780> and that has a <P577> and where the year of the <P577> = 1983",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_133 WHERE { ?Q7725634_133 wdt:<instance of> wd:[Literary Work] . ?Q7725634_133 p:<author> [ ps:<author> wd:[Hunter S. Thompson] ] . ?Q7725634_133 p:<publication date> [ ps:<publication date> ?P577_137 ] . FILTER ( (year(?P577_137) = \"1983\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_133 WHERE { ?Q7725634_133 wdt:P31 wd:Q7725634 . ?Q7725634_133 p:P50 [ ps:P50 wd:Q219780 ] . ?Q7725634_133 p:P577 [ ps:P577 ?P577_137 ] . FILTER ( (year(?P577_137) = \"1983\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <author> [Hunter S. Thompson] and has a <publication date> whose year is 1983?",
        "Squall ID based": "which <Q7725634> has <P50> <Q219780> and has a <P577> whose year is 1983?"
    },
    {
        "Question": "What PlayStation game sold the most copies?",
        "ID": "a72ccc83",
        "Entities": "Q10677:PlayStation",
        "Mintaka Answer": "Q944320:Gran Turismo",
        "Sparklis label based": "give me every [video game] that has the highest-to-lowest <units sold> and that has as a <platform> [PlayStation]",
        "Sparklis ID based": "give me every <Q7889> that has the highest-to-lowest <P2664> and that has as a <P400> <Q10677>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ] . ?Q7889_1 p:<platform> [ ps:<platform> wd:[Playstation] ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ] . ?Q7889_1 p:P400 [ ps:P400 wd:Q10677 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Squall label based": "which [Video Game] has the highest <units sold> and has <platform> [Playstation]?",
        "Squall ID based": "which <Q7889> has the highest <P2664> and has <P400> <Q10677>?"
    },
    {
        "Question": "Did Citizen Kane come out before 1950?",
        "ID": "f8f84576",
        "Entities": "Q24815:Citizen Kane,1950:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Citizen Kane] has a <publication date> and where the year of the <publication date> < 1950",
        "Sparklis ID based": "<Q24815> has a <P577> and where the year of the <P577> < 1950",
        "Sparql label based": "Ask { wd:[Citizen Kane] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"1950\"^^xsd:integer) ) }",
        "Sparql ID based": "Ask { wd:Q24815 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"1950\"^^xsd:integer) ) }",
        "Squall label based": "whether [Citizen Kane] has a <publication date> whose year is lesser than 1950?",
        "Squall ID based": "whether <Q24815> has a <P577> whose year is lesser than 1950?"
    },
    {
        "Question": "Did Red Dead Redemption come out before Portal?",
        "ID": "619599b7",
        "Entities": "Q548203:Red Dead Redemption, Q274897:Portal",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Red Dead Redemption] has a <publication date> and [Portal] has a <publication date>",
        "Sparklis ID based": "<Q548203> has a <P577> and <Q274897> has a <P577>",
        "Sparql label based": "ASK { wd:[Red Dead Redemption] p:<publication date> [ ps:<publication date> ?date1 ] . wd:[Portal] p:<publication date> [ ps:<publication date> ?date2 ] . FILTER (?date1 < ?date2) }",
        "Sparql ID based": "ASK { wd:Q548203 p:P577 [ ps:P577 ?date1 ] . wd:Q274897 p:P577 [ ps:P577 ?date2 ] . FILTER (?date1 < ?date2) }",
        "Squall label based": "whether [Red Dead Redemption] has a <publication date> lesser than a <publication date> of [Portal]?",
        "Squall ID based": "whether <Q548203> has a <P577> lesser than a <P577> of <Q274897>?"
    },
    {
        "Question": "What basketball player became a senator?",
        "ID": "5129718d",
        "Entities": "Q4416090:United States senator",
        "Mintaka Answer": "Q504025:Bill Bradley",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] and that has as an <occupation> [basketball player]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> and that has as an <P106> <Q3665646>",
        "Sparql label based": "select distinct ?q5_8 where { ?q5_8 wdt:<instance of> wd:[Human] . ?q5_8 p:<position held> [ ps:<position held> wd:[United States Senator] ] . ?q5_8 p:<occupation> [ ps:<occupation> wd:[Basketball Player] ] . } limit 1",
        "Sparql ID based": "select distinct ?q5_8 where { ?q5_8 wdt:P31 wd:Q5 . ?q5_8 p:P39 [ ps:P39 wd:Q4416090 ] . ?q5_8 p:P106 [ ps:P106 wd:Q3665646 ] . } limit 1",
        "Squall label based": "which [Human] has <position held> [United States Senator] and has <occupation> [Basketball Player]?",
        "Squall ID based": "which <Q5> has <P39> <Q4416090> and has <P106> <Q3665646>?"
    },
    {
        "Question": "Who wrote Beautiful Creatures?",
        "ID": "56a4f191",
        "Entities": "Q1946778:Beautiful Creatures",
        "Mintaka Answer": "Q13563001:Kami Garcia",
        "Sparklis label based": "[Beautiful Creatures] has an <author>",
        "Sparklis ID based": "<Q632036> has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_8 WHERE { wd:[Beautiful Creatures] p:<author> [ ps:<author> ?P50_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P50_8 WHERE { wd:Q632036 p:P50 [ ps:P50 ?P50_8 ] . }",
        "Squall label based": "what is a <author> of [Beautiful Creatures]?",
        "Squall ID based": "what is a <P50> of <Q632036>?"
    },
    {
        "Question": "How many Oscars did Titanic win?",
        "ID": "374ad6ba",
        "Entities": "Q19020:Academy Awards,Q44578:Titanic",
        "Mintaka Answer": "Q102427:Academy Award for Best Picture,Q488651:Academy Award for Best Original Score,Q103360:Academy Award for Best Director,Q131520:Academy Award for Best Cinematography,Q393686:Academy Award for Best Visual Effects",
        "Sparklis label based": "[Titanic 2] <award received> something that is the part(s) of [Academy Awards] and give me the number of part(s)",
        "Sparklis ID based": "<Q44578> <P166> something that is the part(s) of <Q19020> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_39) AS ?number_of_219) WHERE { wd:[Titanic 2] p:<award received> [ ps:<award received> ?P527_39 ] . wd:[Academy Awards] p:<has part(s)> [ ps:<has part(s)> ?P527_39 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_39) AS ?number_of_219) WHERE { wd:Q44578 p:P166 [ ps:P166 ?P527_39 ] . wd:Q19020 p:P527 [ ps:P527 ?P527_39 ] . }",
        "Squall label based": "how many thing is a <award received> of [Titanic 2] and is a <has part(s)> of [Academy Awards]?",
        "Squall ID based": "how many thing is a <P166> of <Q44578> and is a <P527> of <Q19020>?"
    },
    {
        "Question": "Which The Godfather movie was not released in the 1970s?",
        "ID": "fa08c557",
        "Entities": "Q47703:The Godfather,1970:None",
        "Mintaka Answer": "Q202326:The Godfather Part III",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Godfather] and that has a <publication date> and give me the year of the <publication date> that not is between 1970 and 1979",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3225260> and that has a <P577> and give me the year of the <P577> that not is between 1970 and 1979",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[The Godfather] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_45 ] . BIND (year(?P577_45) AS ?expr_131) FILTER ( !( ( xsd:double(str(?expr_131)) >= 1970 && xsd:double(str(?expr_131)) <= 1979 ) ) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q3225260 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_45 ] . BIND (year(?P577_45) AS ?expr_131) FILTER ( !( ( xsd:double(str(?expr_131)) >= 1970 && xsd:double(str(?expr_131)) <= 1979 ) ) ) }",
        "Squall label based": "which [Film] has <part of the series> [The Godfather] and has a <publication date> whose year is not between 1970 and 1979?",
        "Squall ID based": "which <Q11424> has <P179> <Q3225260> and has a <P577> whose year is not between 1970 and 1979?"
    },
    {
        "Question": "Who is older, Jordan or Steph Curry?",
        "ID": "a6a3c4d1",
        "Entities": "Q352159:Stephen Curry, Q41421:Michael Jordan",
        "Mintaka Answer": "Q41421:Michael Jordan",
        "Sparklis label based": "give me every [human] that has  the lowest-to-highest <date of birth> and that is [Michael Jordan] or that is [Stephen Curry]",
        "Sparklis ID based": "give me every <Q5> that has the lowest-to-highest <P569> and that is <Q41421> or that is <Q352159>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Stephen Curry] wd:[Michael Jordan] } ?x p:<date of birth> [ ps:<date of birth> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q352159 wd:Q41421 } ?x p:P569 [ ps:P569 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Stephen Curry] or [Michael Jordan] and has the lowest <date of birth>?",
        "Squall ID based": "what is <Q352159> or <Q41421> and has the lowest <P569>?"
    },
    {
        "Question": "Which actor played James Bond and was born in Chester, UK?",
        "ID": "1e579bd0",
        "Entities": "Q170263:Chester, Q2009573:James Bond",
        "Mintaka Answer": "Q4547:Daniel Craig",
        "Sparklis label based": "[James Bond 2] has a <performer> that has as a <place of birth> [Chester]",
        "Sparklis ID based": "<Q2009573> has a <P175> that has as a <P19> <Q170263>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[James Bond 2] p:<performer> [ ps:<performer> ?P175_8 ] . ?P175_8 p:<place of birth> [ ps:<place of birth> wd:[Chester] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q2009573 p:P175 [ ps:P175 ?P175_8 ] . ?P175_8 p:P19 [ ps:P19 wd:Q170263 ] . }",
        "Squall label based": "what is a <performer> of [James Bond 2] and has <place of birth> [Chester]?",
        "Squall ID based": "what is a <P175> of <Q2009573> and has <P19> <Q170263>?"
    },
    {
        "Question": "What is the third NBA team James Harden played for?",
        "ID": "7b13b828",
        "Entities": "Q136678:James Harden, Q155223:National Basketball Association",
        "Mintaka Answer": "Q572134:Brooklyn Nets",
        "Sparklis label based": "[James Harden] has as a <league> [National Basketball Association] and has a <member of sports team> with the highest-to-lowest <start time>",
        "Sparklis ID based": "<Q136678> has as a <P118> <Q155223> and has a <P54> with the highest-to-lowest <P580>",
        "Sparql label based": "SELECT DISTINCT ?P54_4 ?P580_107 WHERE {wd:[James Harden] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ; n1:<start time> ?P580_107 ] . } ORDER BY DESC(?P580_107) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_4 ?P580_107 WHERE {wd:Q136678 p:P54 [ ps:P54 ?P54_4 ; n1:P580 ?P580_107 ] . } ORDER BY DESC(?P580_107) LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the highest <start time> of [James Harden]?",
        "Squall ID based": "what is a <P54> at the highest <P580> of <Q136678>?"
    },
    {
        "Question": "What is the second 50 Shades of Grey movie?",
        "ID": "155d3a58",
        "Entities": "Q25222455:Fifty Shades,2:None",
        "Mintaka Answer": "Q22662385:Fifty Shades Darker",
        "Sparklis label based": "[Fifty Shades] <has part(s)> with <series ordinal> 2",
        "Sparklis ID based": "<Q25222455> <P527> with <P1545> 2",
        "Sparql label based": "select distinct ?p527_8 where { wd:[Fifty Shades] p:<has part(s)> [ ps:<has part(s)> ?p527_8 ; n1:<series ordinal> \"2\" ] . }",
        "Sparql ID based": "select distinct ?p527_8 where { wd:Q25222455 p:P527 [ ps:P527 ?p527_8 ; n1:P1545 \"2\" ] . }",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"2\" of [Fifty Shades]?",
        "Squall ID based": "what is a <P527> at <P1545> \"2\" of <Q25222455>?"
    },
    {
        "Question": "Who was the last emperor of Russia?",
        "ID": "82ec1d2d",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "Q40787:Nicholas II of Russia",
        "Sparklis label based": "give me every [human] that has as a <position held> with the highest-to-lowest <start time> [Emperor of all the Russias]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the highest-to-lowest <P580> <Q2618625>",
        "Sparql label based": "SELECT DISTINCT ?Q5_46 WHERE { ?Q5_46 wdt:<instance of> wd:[Human] . ?Q5_46 p:<position held> [ n1:<start time> ?P580_50 ; ps:<position held> wd:[Emperor Of All The Russias] ] . } ORDER BY DESC(?P580_50) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_46 WHERE { ?Q5_46 wdt:P31 wd:Q5 . ?Q5_46 p:P39 [ n1:P580 ?P580_50 ; ps:P39 wd:Q2618625 ] . } ORDER BY DESC(?P580_50) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the highest <start time> [Emperor Of All The Russias]?",
        "Squall ID based": "which <Q5> has <P39> at the highest <P580> <Q2618625>?"
    },
    {
        "Question": "Which member of The Firm also starred in Belly?",
        "ID": "f1956417",
        "Entities": "Q816079:Belly,Q2765475:The Firm",
        "Mintaka Answer": "Q194220:Nas",
        "Sparklis label based": "[The Firm] has a part(s) that is the <cast member> of [Belly]",
        "Sparklis ID based": "<Q2765475> has a part(s) that is the <P161> of <Q646077>",
        "Sparql label based": "SELECT DISTINCT ?P527_103 WHERE { wd:[The Firm] p:<has part(s)> [ ps:<has part(s)> ?P527_103 ] . wd:[Belly] p:<cast member> [ ps:<cast member> ?P527_103 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_103 WHERE { wd:Q2765475 p:P527 [ ps:P527 ?P527_103 ] . wd:Q646077 p:P161 [ ps:P161 ?P527_103 ] . }",
        "Squall label based": "what is a <has part(s)> of [The Firm] and is a <cast member> of [Belly]?",
        "Squall ID based": "what is a <P527> of <Q2765475> and is a <P161> of <Q646077>?"
    },
    {
        "Question": "Which country has a larger population, Bangladesh or Nigeria?",
        "ID": "4f8f6ce3",
        "Entities": "Q902:Bangladesh, Q1033:Nigeria",
        "Mintaka Answer": "Q1033:Nigeria",
        "Sparklis label based": "[Bangladesh] has a <population> and Nigeria has a <population>",
        "Sparklis ID based": "<Q902> has a <P1082> and Nigeria has a <P1082>",
        "Sparql label based": "SELECT DISTINCT ?x WHERE { VALUES ?x { wd:[Bangladesh] wd:[Nigeria] } ?x p:<population> [ ps:<population> ?P1082_16 ] . } ORDER BY DESC(?P1082_16) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?x WHERE { VALUES ?x { wd:Q902 wd:Q1033 } ?x p:P1082 [ ps:P1082 ?P1082_16 ] . } ORDER BY DESC(?P1082_16) LIMIT 1",
        "Squall label based": "what is [Bangladesh] or [Nigeria] and has the highest <population>?",
        "Squall ID based": "what is <Q902> or <Q1033> and has the highest <P1082>?"
    },
    {
        "Question": "Which British monarch from the House of Hanover was not male?",
        "ID": "6b340e6e",
        "Entities": "Q145:United Kingdom, Q157217:House of Hanover",
        "Mintaka Answer": "Q9439:Queen Victoria",
        "Sparklis label based": "give me every [human] that has as a <position held> [monarch of the United Kingdom of Great Britain and Ireland] and that has as a family [House of Hanover] and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q111722535> and that has as a family <Q157217> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Monarch Of The United Kingdom Of Great Britain And Ireland] ] . ?Q5_1 p:<noble family> [ ps:<noble family> wd:[House Of Hanover] ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q111722535 ] . ?Q5_1 p:P53 [ ps:P53 wd:Q157217 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . }",
        "Squall label based": "which [Human] has <position held> [Monarch Of The United Kingdom Of Great Britain And Ireland] and has <noble family> [House Of Hanover] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> <Q111722535> and has <P53> <Q157217> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Which members of 98 Degrees were not born in Ohio?",
        "ID": "b2684ae2",
        "Entities": "Q277230:98 Degrees,Q1397:Ohio",
        "Mintaka Answer": "Q356109:Nick Lachey,Q16214462:Justin Jeffre",
        "Sparklis label based": "[98 Degrees] <has part(s)> that has a <place of birth> that not has a <located in the administrative territorial entity> that has as a <located in the administrative territorial entity> [Ohio]",
        "Sparklis ID based": "<Q277230> <P527> that has a <P19> that not has a <P131> that has as a <P131> <Q1397>",
        "Sparql label based": "SELECT DISTINCT ?P527_4 WHERE { wd:[98 Degrees] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ] . ?P527_4 p:<place of birth> [ ps:<place of birth> ?P19_42 ] . FILTER ( NOT EXISTS { ?P19_42 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_145 ] . ?P131_145 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Ohio] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_4 WHERE { wd:Q277230 p:P527 [ ps:P527 ?P527_4 ] . ?P527_4 p:P19 [ ps:P19 ?P19_42 ] . FILTER ( NOT EXISTS { ?P19_42 p:P131 [ ps:P131 ?P131_145 ] . ?P131_145 p:P131 [ ps:P131 wd:Q1397 ] . } ) }",
        "Squall label based": "what is a <has part(s)> of [98 Degrees] and has a <place of birth> that has not a <located in the administrative territorial entity> that has <located in the administrative territorial entity> [Ohio]?",
        "Squall ID based": "what is a <P527> of <Q277230> and has a <P19> that has not a <P131> that has <P131> <Q1397>?"
    },
    {
        "Question": "Which of the Great Lakes do not share a border with Wisconsin?",
        "ID": "bdb0981c",
        "Entities": "Q7347:Great Lakes, Q1537:Wisconsin",
        "Mintaka Answer": "Q1383:Lake Huron, Q5492:Lake Erie, Q1062:Lake Ontario",
        "Sparklis label based": "[Great Lakes] has a part that not has as a <located in the administrative territorial entity> [Wisconsin]",
        "Sparklis ID based": "<Q7347> has a part that not has as a <P131> <Q1537>",
        "Sparql label based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:<part of> [ ps:<part of> wd:[Great Lakes] ] . FILTER ( NOT EXISTS { ?P361_8 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Wisconsin] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:P361 [ ps:P361 wd:Q7347 ] . FILTER ( NOT EXISTS { ?P361_8 p:P131 [ ps:P131 wd:Q1537 ] . } ) }",
        "Squall label based": "what has <part of> [Great Lakes] and has not <located in the administrative territorial entity> [Wisconsin]?",
        "Squall ID based": "what has <P361> <Q7347> and has not <P131> <Q1537>?"
    },
    {
        "Question": "How many books are in CS Lewis' Cosmic Trilogy?",
        "ID": "4de871bc",
        "Entities": "Q9204:C. S. Lewis, Q2070438:The Space Trilogy",
        "Mintaka Answer": "3",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Space Trilogy] and that has as an <author> [C. S. Lewis] and give me the number of [literary work]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q2070438> and that has as an <P50> <Q9204> and give me the number of <Q7725634>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_8) AS ?number_of_45) WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[The Space Trilogy] ] . ?Q7725634_8 p:<author> [ ps:<author> wd:[C. S. Lewis] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_8) AS ?number_of_45) WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q2070438 ] . ?Q7725634_8 p:P50 [ ps:P50 wd:Q9204 ] . }",
        "Squall label based": "how many [Literary Work] has <part of the series> [The Space Trilogy] and has <author> [C. S. Lewis]?",
        "Squall ID based": "how many <Q7725634> has <P179> <Q2070438> and has <P50> <Q9204>?"
    },
    {
        "Question": "How many books about death are in the Discworld series?",
        "ID": "5e521675",
        "Entities": "Q253295:Discworld",
        "Mintaka Answer": "Q843400:Shrek,Q1994576:Reaper Man,Q303526:Soul Music,Q925723:Hogfather,Q2414365:Thief of Time",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Death] and that has as a <part of the series> [Discworld books] and give me the number of [literary work]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q54877325> and that has as a <P179> <Q3257270> and give me the number of <Q7725634>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_8) AS ?number_of_45) WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Death] ] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Discworld Books] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_8) AS ?number_of_45) WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q54877325 ] . ?Q7725634_8 p:P179 [ ps:P179 wd:Q3257270 ] . }",
        "Squall label based": "how many [Literary Work] has <part of the series> [Death] and [Discworld Books]?",
        "Squall ID based": "how many <Q7725634> has <P179> <Q54877325> and <Q3257270>?"
    },
    {
        "Question": "Was Abraham Lincoln or James Madison taller?",
        "ID": "a141754f",
        "Entities": "Q11813:James Madison, Q91:Abraham Lincoln",
        "Mintaka Answer": "Q91:Abraham Lincoln",
        "Sparklis label based": "give me every [human] that has the highest-to-lowest <height> and that is [James Madison] or that is [Abraham Lincoln]",
        "Sparklis ID based": "give me every <Q5> that has the highest-to-lowest <P2048> and that is <Q11813> or that is <Q91>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[James Madison] wd:[Abraham Lincoln] } ?x p:<height> [ ps:<height> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q11813 wd:Q91 } ?x p:P2048 [ ps:P2048 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [James Madison] or [Abraham Lincoln] and has the highest <height>?",
        "Squall ID based": "what is <Q11813> or <Q91> and has the highest <P2048>?"
    },
    {
        "Question": "Did the Little Prince come out before 1950?",
        "ID": "d8e31906",
        "Entities": "Q25338:The Little Prince,1950:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Little Prince] has a <publication date> and give me the year of the <publication date> lower or equal to 1950",
        "Sparklis ID based": "<Q25338> has a <P577> and give me the year of the <P577> lower or equal to 1950",
        "Sparql label based": "ASK { wd:[The Little Prince] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( year(?P577_8) <= 1950 ) }",
        "Sparql ID based": "ASK { wd:Q25338 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( year(?P577_8) <= 1950 ) }",
        "Squall label based": "whether [The Little Prince] has a <publication date> whose year is lesser or equal to 1950?",
        "Squall ID based": "whether <Q25338> has a <P577> whose year is lesser or equal to 1950?"
    },
    {
        "Question": "What is the longest song on Michael Jackson's Off the Wall album?",
        "ID": "d1350208",
        "Entities": "Q2831:Michael Jackson, Q44289:Off the Wall",
        "Mintaka Answer": "Q49816:Don't Stop 'Til You Get Enough",
        "Sparklis label based": "[Off the Wall] has as a <performer> [Michael Jackson] and has a <tracklist> that has the highest-to-lowest <duration>",
        "Sparklis ID based": "<Q44289> has as a <P175> <Q2831> and has a <P658> that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?P658_4 WHERE { wd:[Off The Wall] p:<tracklist> [ ps:<tracklist> ?P658_4 ] . ?P658_4 p:<duration> [ ps:<duration> ?P2047_42 ] . } ORDER BY DESC(?P2047_42) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P658_4 WHERE { wd:Q44289 p:P658 [ ps:P658 ?P658_4 ] . ?P658_4 p:P2047 [ ps:P2047 ?P2047_42 ] . } ORDER BY DESC(?P2047_42) LIMIT 1",
        "Squall label based": "what is a <tracklist> of [Off The Wall] and has the highest <duration>?",
        "Squall ID based": "what is a <P658> of <Q44289> and has the highest <P2047>?"
    },
    {
        "Question": "How many wives did Roman Emperor Septimius Severus have?",
        "ID": "f268100a",
        "Entities": "Q1442:Septimius Severus",
        "Mintaka Answer": "Q50989199:Paccia Marciana,Q229246:Julia Domna",
        "Sparklis label based": "[Septimius Severus] has a <spouse> and give me the number of <spouse>",
        "Sparklis ID based": "<Q1442> has a <P26> and give me the number of <P26>",
        "Sparql label based": "select distinct (count(distinct ?p26_8) as ?number_of_45) where { wd:[Septimius Severus] p:<spouse> [ ps:<spouse> ?p26_8 ] . }",
        "Sparql ID based": "select distinct (count(distinct ?p26_8) as ?number_of_45) where { wd:Q1442 p:P26 [ ps:P26 ?p26_8 ] . }",
        "Squall label based": "how many thing is a <spouse> of [Septimius Severus]?",
        "Squall ID based": "how many thing is a <P26> of <Q1442>?"
    },
    {
        "Question": "Is Mount Hood taller than Pike's Peak?",
        "ID": "d3fb7d31",
        "Entities": "Q275662:Mount Hood, Q665321:Pikes Peak",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Mount Hood] has an <elevation above sea level> and [Pikes Peak] has an <elevation above sea level>",
        "Sparklis ID based": "<Q275662> has an <P2044> and <Q665321> has an <P2044>",
        "Sparql label based": "Ask { wd:[Mount Hood] p:<elevation above sea level> [ ps:<elevation above sea level> ?height1] . wd:[Pikes Peak] p:<elevation above sea level> [ ps:<elevation above sea level> ?height2 ] . FILTER (?height1 < ?height2) }",
        "Sparql ID based": "Ask { wd:Q275662 p:P2044 [ ps:P2044 ?height1] . wd:Q665321 p:P2044 [ ps:P2044 ?height2 ] . FILTER (?height1 < ?height2) }",
        "Squall label based": "whether [Mount Hood] has a <elevation above sea level> lesser than a <elevation above sea level> of [Pikes Peak]?",
        "Squall ID based": "whether <Q275662> has a <P2044> lesser than a <P2044> of <Q665321>?"
    },
    {
        "Question": "When was Roblox was launched?",
        "ID": "baf3b495",
        "Entities": "Q692989:Roblox",
        "Mintaka Answer": "2006-09-01",
        "Sparklis label based": "[Roblox] has a <publication date>",
        "Sparklis ID based": "<Q692989> has a <P577>",
        "Sparql label based": "select distinct ?p577_8 where { wd:[Roblox] p:<publication date> [ ps:<publication date> ?p577_8 ] . }",
        "Sparql ID based": "select distinct ?p577_8 where { wd:Q692989 p:P577 [ ps:P577 ?p577_8 ] . }",
        "Squall label based": "what is a <publication date> of [Roblox]?",
        "Squall ID based": "what is a <P577> of <Q692989>?"
    },
    {
        "Question": "Which author was a Howard University alumni and won the Nobel Prize in Literature?",
        "ID": "342c6fe7",
        "Entities": "Q37922:Nobel Prize in Literature,Q1068752:Howard University",
        "Mintaka Answer": "Q72334:Toni Morrison",
        "Sparklis label based": "[Nobel Prize in Literature] has a <winner> that is <educated at> [Howard University] and that is the <author> of something",
        "Sparklis ID based": "<Q37922> has a <P1346> that is <P69> <Q1068752> and that is the <P50> of something",
        "Sparql label based": "SELECT distinct ?p1346_8 where { wd:[Nobel Prize In Literature] p:<winner> [ ps:<winner> ?p1346_8 ] . ?p1346_8 p:<educated at> [ ps:<educated at> wd:[Howard University] ] . ?thing_12 p:<author> [ ps:<author> ?p1346_8 ] . }",
        "Sparql ID based": "SELECT distinct ?p1346_8 where { wd:Q37922 p:P1346 [ ps:P1346 ?p1346_8 ] . ?p1346_8 p:P69 [ ps:P69 wd:Q1068752 ] . ?thing_12 p:P50 [ ps:P50 ?p1346_8 ] . }",
        "Squall label based": "what is a <winner> of [Nobel Prize In Literature] and has <educated at> [Howard University] and is a <author> of a thing?",
        "Squall ID based": "what is a <P1346> of <Q37922> and has <P69> <Q1068752> and is a <P50> of a thing?"
    },
    {
        "Question": "How many oceans border Russia?",
        "ID": "144632d9",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Russia] has a <located next to body of water> that is the <instance of> [ocean] and give me the number of <located next to body of water>",
        "Sparklis ID based": "<Q159> has a <P206> that is the <P31> <Q9430> and give me the number of <P206>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:[Russia] p:<located in or next to body of water> [ ps:<located in or next to body of water> ?P206_8 ] . ?P206_8 p:<instance of> [ ps:<instance of> wd:[Ocean] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P206_8) AS ?number_of_46) WHERE { wd:Q159 p:P206 [ ps:P206 ?P206_8 ] . ?P206_8 p:P31 [ ps:P31 wd:Q9430 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <located in or next to body of water> of [Russia] and has <instance of> [Ocean]?",
        "Squall ID based": "how many thing is a <P206> of <Q159> and has <P31> <Q9430>?"
    },
    {
        "Question": "What is the name of the fifth Fast & Furious movie?",
        "ID": "8b0fbe97",
        "Entities": "Q1576873:Fast & Furious,5:None",
        "Mintaka Answer": "Q401976:Fast Five",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 5 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 5 <Q1576873>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<part of the series> [ n1:<series ordinal> \"5\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P179 [ n1:P1545 \"5\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"5\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"5\" <Q1576873>?"
    },
    {
        "Question": "What is the largest state in the U.S. by size?",
        "ID": "2d735838",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q797:Alaska",
        "Sparklis label based": "give me every [U.S. state] that has as a <country> [United States of America] and that has the highest-to-lowest <area>",
        "Sparklis ID based": "give me every <Q35657> that has as a <P17> <Q30> and that has the highest-to-lowest <P2046>",
        "Sparql label based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q35657_1 p:<area> [ ps:<area> ?P2046_5 ] . } ORDER BY DESC(?P2046_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q35657_1 p:P2046 [ ps:P2046 ?P2046_5 ] . } ORDER BY DESC(?P2046_5) LIMIT 1",
        "Squall label based": "which [U.s. State] has <country> [United States Of America] and has the highest <area>?",
        "Squall ID based": "which <Q35657> has <P17> <Q30> and has the highest <P2046>?"
    },
    {
        "Question": "What is the third Lord of The Rings movie?",
        "ID": "c5ae3177",
        "Entities": "Q190214:The Lord of the Rings trilogy,3:None",
        "Mintaka Answer": "Q131074:The Lord of the Rings: The Return of the King",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [The Lord of the Rings trilogy]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q190214>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q190214 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [The Lord Of The Rings Trilogy]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q190214>?"
    },
    {
        "Question": "Which actor is taller, The Rock or Terry Crews?",
        "ID": "65fb42d2",
        "Entities": "Q10738:Dwayne Johnson,Q271464:Terry Crews",
        "Mintaka Answer": "Q10738:Dwayne Johnson",
        "Sparklis label based": "[Dwayne Johnson] has a <height> and [Terry Crews] has a <height>",
        "Sparklis ID based": "<Q10738> has a <P2048> and <Q271464> has a <P2048>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Dwayne Johnson] wd:[Terry Crews] } ?x p:<height> [ ps:<height> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q10738 wd:Q271464 } ?x p:P2048 [ ps:P2048 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [Dwayne Johnson] or [Terry Crews] and has the highest <height>?",
        "Squall ID based": "what is <Q10738> or <Q271464> and has the highest <P2048>?"
    },
    {
        "Question": "What was the third Lord of the Rings movie to be released?",
        "ID": "97d03d01",
        "Entities": "Q190214:The Lord of the Rings trilogy,3:None",
        "Mintaka Answer": "Q131074:The Lord of the Rings: The Return of the King",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Lord of the Rings trilogy] with <series ordinal> 3",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q190214> with <P1545> 3",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ; n1:<series ordinal> \"3\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q190214 ; n1:P1545 \"3\" ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [The Lord Of The Rings Trilogy]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q190214>?"
    },
    {
        "Question": "How many U.S. states touch the Gulf of Mexico?",
        "ID": "18052190",
        "Entities": "Q30:United States of America, Q12630:Gulf of Mexico",
        "Mintaka Answer": "5",
        "Sparklis label based": "give me every [U.S. state] that has as a <located next to body of water> [Gulf of Mexico] and that has as a <country> [United States of America] and give me the number of [U.S. state]",
        "Sparklis ID based": "give me every <Q35657> that has as a <P206> <Q12630> and that has as a <P17> <Q30> and give me the number of <Q35657>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> wd:[Gulf Of Mexico] ] . ?Q35657_1 p:<country> [ ps:<country> wd:[United States Of America] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P206 [ ps:P206 wd:Q12630 ] . ?Q35657_1 p:P17 [ ps:P17 wd:Q30 ] . } LIMIT 1",
        "Squall label based": "how many [U.s. State] has <located in or next to body of water> [Gulf Of Mexico] and has <country> [United States Of America]?",
        "Squall ID based": "how many <Q35657> has <P206> <Q12630> and has <P17> <Q30>?"
    },
    {
        "Question": "Who was the 28th president of the United States?",
        "ID": "bbe85547",
        "Entities": "Q30:United States of America,28:None",
        "Mintaka Answer": "Q34296:Woodrow Wilson",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 28 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 28 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"28\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"28\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"28\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"28\" <Q11696>?"
    },
    {
        "Question": "Who's the 3rd president of the United States?",
        "ID": "a2126754",
        "Entities": "Q30:United States of America,3:None",
        "Mintaka Answer": "Q11812:Thomas Jefferson",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 3 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 3 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"3\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"3\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"3\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"3\" <Q11696>?"
    },
    {
        "Question": "What was the first movie released featuring the character Jack Ryan?",
        "ID": "96a00de3",
        "Entities": "Q1068314:Jack Ryan,1:None",
        "Mintaka Answer": "Q507994:The Hunt for Red October",
        "Sparklis label based": "give me every [film] that has as a <characters> [Jack Ryan] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P674> <Q1068314> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_38 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<characters> [ ps:<characters> wd:[Jack Ryan] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_38 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P674 [ ps:P674 wd:Q1068314 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Squall label based": "which [Film] has <characters> [Jack Ryan] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P674> <Q1068314> and has the lowest <P577>?"
    },
    {
        "Question": "Who directed the movie Spider-Man 2?",
        "ID": "a2a187e8",
        "Entities": "Q190145:Spider-Man 2",
        "Mintaka Answer": "Q275402:Sam Raimi",
        "Sparklis label based": "[Spider-Man 2] has a <director>",
        "Sparklis ID based": "<Q190145> has a <P57>",
        "Sparql label based": "SELECT DISTINCT ?P57_8 WHERE { wd:[Spider-man 2] p:<director> [ ps:<director> ?P57_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P57_8 WHERE { wd:Q190145 p:P57 [ ps:P57 ?P57_8 ] . }",
        "Squall label based": "what is a <director> of [Spider-man 2]?",
        "Squall ID based": "what is a <P57> of <Q190145>?"
    },
    {
        "Question": "What was Michael Crichton's sixth novel, and the first to be published using his own name?",
        "ID": "d7242917",
        "Entities": "Q172140:Michael Crichton,6:None,1:None",
        "Mintaka Answer": "Q513036:The Andromeda Strain",
        "Sparklis label based": "[Michael Crichton] is the <author> of a [literary work] that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "<Q172140> is the <P50> of a <Q7725634> that has the lowest-to-highest <P577>",
        "Sparql label based": "select distinct ?q7725634_8 where { ?q7725634_8 wdt:<instance of> wd:[Literary Work] . ?q7725634_8 p:<author> [ ps:<author> wd:[Michael Crichton] ] . ?q7725634_8 p:<publication date> [ ps:<publication date> ?p577_111 ] . } order by asc(?p577_111) limit 1 offset 5",
        "Sparql ID based": "select distinct ?q7725634_8 where { ?q7725634_8 wdt:P31 wd:Q7725634 . ?q7725634_8 p:P50 [ ps:P50 wd:Q172140 ] . ?q7725634_8 p:P577 [ ps:P577 ?p577_111 ] . } order by asc(?p577_111) limit 1 offset 5",
        "Squall label based": "which [Literary Work] has <author> [Michael Crichton] and has the 6th lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P50> <Q172140> and has the 6th lowest <P577>?"
    },
    {
        "Question": "What NBA team drafted LeBron James?",
        "ID": "17f8dcf5",
        "Entities": "Q36159:LeBron James, Q155223:National Basketball Association",
        "Mintaka Answer": "Q162990:Cleveland Cavaliers",
        "Sparklis label based": "[LeBron James 2] is <drafted by> something and has as a <league> [National Basketball Association]",
        "Sparklis ID based": "<Q36159> is <P647> something and has as a <P118> <Q155223>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { wd:[Lebron James 2] p:<drafted by> [ ps:<drafted by> ?thing_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { wd:Q36159 p:P647 [ ps:P647 ?thing_8 ] . }",
        "Squall label based": "what is a <drafted by> of [Lebron James 2]?",
        "Squall ID based": "what is a <P647> of <Q36159>?"
    },
    {
        "Question": "Is Kamala Harris older than Barack Obama?",
        "ID": "04caf8ef",
        "Entities": "Q10853588:Kamala Harris,Q76:Barack Obama",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Kamala Harris] has a <date of birth> and [Barack Obama] has a <date of birth>",
        "Sparklis ID based": "<Q10853588> has a <P569> and <Q76> has a <P569>",
        "Sparql label based": "ASK { wd:[Kamala Harris] p:<date of birth> [ ps:<date of birth> ?P569_7 ] . wd:[Barack Obama] p:<date of birth> [ ps:<date of birth> ?P569_8 ] . FILTER(?P569_8 > ?P569_7) }",
        "Sparql ID based": "ASK { wd:Q10853588 p:P569 [ ps:P569 ?P569_7 ] . wd:Q76 p:P569 [ ps:P569 ?P569_8 ] . FILTER(?P569_8 > ?P569_7) }",
        "Squall label based": "whether [Kamala Harris] has a <date of birth> lesser than a <date of birth> of [Barack Obama]?",
        "Squall ID based": "whether <Q10853588> has a <P569> lesser than a <P569> of <Q76>?"
    },
    {
        "Question": "Which countries in North America do not have English as an official language?",
        "ID": "3ccb395a",
        "Entities": "Q1860:English,Q49:North America",
        "Mintaka Answer": "Q800:Costa Rica,Q804:Panama,Q241:Cuba,Q786:Dominican Republic,Q792:El Salvador,Q774:Guatemala,Q790:Haiti,Q783:Honduras,Q96:Mexico,Q811:Nicaragua",
        "Sparklis label based": "give me every [country] that has as a <continent> [North America] and that not has as an <official language> [English]",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q49> and that not has as an <P37> <Q1860>",
        "Sparql label based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<continent> [ ps:<continent> wd:[North America] ] . FILTER ( NOT EXISTS { ?Q6256_1 p:<official language> [ ps:<official language> wd:[English] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P30 [ ps:P30 wd:Q49 ] . FILTER ( NOT EXISTS { ?Q6256_1 p:P37 [ ps:P37 wd:Q1860 ] . } ) }",
        "Squall label based": "which [Country] has <continent> [North America] and has not <official language> [English]?",
        "Squall ID based": "which <Q6256> has <P30> <Q49> and has not <P37> <Q1860>?"
    },
    {
        "Question": "What was the third Fast & Furious movie chronologically?",
        "ID": "c84b8a8e",
        "Entities": "Q1576873:Fast & Furious,3:None",
        "Mintaka Answer": "Q213208:The Fast and the Furious: Tokyo Drift",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q1576873>?"
    },
    {
        "Question": "What children's literacy show was hosted by LeVar Burton?",
        "ID": "d8711a70",
        "Entities": "Q312570:LeVar Burton",
        "Mintaka Answer": "Q3930958:Reading Rainbow",
        "Sparklis label based": "give me every [human] that matches [LeVar Burton] and that is [LeVar Burton] and that is <nominated for> with a <for work> [NAACP Image Award for Outstanding Performance in a Youth/Children's Series or Special]",
        "Sparklis ID based": "give me every <Q5> that matches <Q312570> and that is <Q312570> and that is <P1411> with a <P1686> <Q6952068>",
        "Sparql label based": "SELECT DISTINCT ?P1686_12 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . VALUES ?Q5_8 { wd:[Levar Burton] wd:[Blizzard] wd:[Levar Burton Filmography] wd:[Reach For Me] wd:[Levar Burton Reads] wd:[Category:films Directed By Levar Burton] wd:[The Tiger Woods Story] wd:[Smart House] wd:[Category:television Episodes Directed By Levar Burton] wd:[Category:levar Burton] wd:[Template:levar Burton]} FILTER ( ?Q5_8 = wd:[Levar Burton] ) ?Q5_8 p:<nominated for> [ n1:<for work> ?P1686_12 ; ps:<nominated for> wd:[Naacp Image Award For Outstanding Performance In A Youth/children's Series Or Special] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_12 WHERE { ?Q5_8 wdt:P31 wd:Q5 . VALUES ?Q5_8 { wd:Q312570 wd:Q3595729 wd:Q6506493 wd:Q7300190 wd:Q109545571 wd:Q8455334 wd:Q7769261 wd:Q670646 wd:Q107043722 wd:Q55295977 wd:Q18510640} FILTER ( ?Q5_8 = wd:Q312570 ) ?Q5_8 p:P1411 [ n1:P1686 ?P1686_12 ; ps:P1411 wd:Q6952068 ] . }",
        "Squall label based": "at which <for work> a [Human] that is [Levar Burton] and [Levar Burton] or [Blizzard] or [Levar Burton Filmography] or [Reach For Me] or [Levar Burton Reads] or [Category:films Directed By Levar Burton] or [The Tiger Woods Story] or [Smart House] or [Category:television Episodes Directed By Levar Burton] or [Category:levar Burton] or [Template:levar Burton] has <nominated for> [Naacp Image Award For Outstanding Performance In A Youth/children's Series Or Special]?",
        "Squall ID based": "at which <P1686> a <Q5> that is <Q312570> and <Q312570> or <Q3595729> or <Q6506493> or <Q7300190> or <Q109545571> or <Q8455334> or <Q7769261> or <Q670646> or <Q107043722> or <Q55295977> or <Q18510640> has <P1411> <Q6952068>?"
    },
    {
        "Question": "Which country won the most medals at the 2016 Olympics?",
        "ID": "8733a95a",
        "Entities": "Q8613:2016 Summer Olympics",
        "Mintaka Answer": "Q30:United States of America",
        "Sparklis label based": "[2016 Summer Olympics] has  a <participant> that has  a [country]  and that <award received> with a <quantity>  something   and for each [country] give me the highest-to-lowest total <quantity>",
        "Sparklis ID based": "<Q8613> has a <P710> that has a <Q6256> and that <P166> with a <P1114> something and for each <Q6256> give me the highest-to-lowest total <P1114>",
        "Sparql label based": "SELECT DISTINCT ?P17_333 WHERE { wd:[2016 Summer Olympics] p:<participant> [ ps:<participant> ?P710_229 ] . ?P710_229 p:<country> [ ps:<country> ?P17_333 ] . ?P710_229 p:<award received> [ pq:<quantity> ?P1114_340 ; ps:<award received> ?thing_337 ] . } GROUP BY ?P17_333 ORDER BY DESC(SUM(?P1114_340) ) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P17_333 WHERE { wd:Q8613 p:P710 [ ps:P710 ?P710_229 ] . ?P710_229 p:P17 [ ps:P17 ?P17_333 ] . ?P710_229 p:P166 [ pq:P1114 ?P1114_340 ; ps:P166 ?thing_337 ] . } GROUP BY ?P17_333 ORDER BY DESC(SUM(?P1114_340) ) LIMIT 1",
        "Squall label based": "what is a <participant> of [2016 Summer Olympics] and has <award received> at the highest <quantity> a thing?",
        "Squall ID based": "what is a <P710> of <Q8613> and has <P166> at the highest <P1114> a thing?"
    },
    {
        "Question": "Which original member(s) of Queen are not alive anymore?",
        "ID": "55007283",
        "Entities": "Q15862:Queen",
        "Mintaka Answer": "Q15869:Freddie Mercury",
        "Sparklis label based": "[Queen] is the <instance of> [rock band] and <has part(s)> that has a <date of death>",
        "Sparklis ID based": "<Q15862> is the <P31> <Q5741069> and <P527> that has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[Queen] ] . ?P463_8 p:<date of death> [ ps:<date of death> ?P570_111 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q15862 ] . ?P463_8 p:P570 [ ps:P570 ?P570_111 ] . }",
        "Squall label based": "what has <member of> [Queen] and has a <date of death>?",
        "Squall ID based": "what has <P463> <Q15862> and has a <P570>?"
    },
    {
        "Question": "How many members are in G-Idle?",
        "ID": "24fde2c6",
        "Entities": "Q51885404:(G)I-dle",
        "Mintaka Answer": "Q56259927:Cho Mi-yeon,Q56761923:Minnie,Q26707915:Jeon Soyeon,Q55287306:Song Yuqi,Q55287305:Shuhua",
        "Sparklis label based": "[(G)I-dle] has a <member of> and give me the number of <member>",
        "Sparklis ID based": "<Q51885404> has a <P463> and give me the number of <member>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P463_9) AS ?number_of_47) WHERE { ?P463_9 p:<member of> [ ps:<member of> wd:[(g)i-dle] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P463_9) AS ?number_of_47) WHERE { ?P463_9 p:P463 [ ps:P463 wd:Q51885404 ] . }",
        "Squall label based": "how many thing has <member of> [(g)i-dle]?",
        "Squall ID based": "how many thing has <P463> <Q51885404>?"
    },
    {
        "Question": "How many countries are there in Asia?",
        "ID": "f9d04771",
        "Entities": "Q48:Asia",
        "Mintaka Answer": "48",
        "Sparklis label based": "give me every [country] that has as a <continent> [Asia] and give me the number of [country]",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q48> and give me the number of <Q6256>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_38) WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<continent> [ ps:<continent> wd:[Asia] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_38) WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P30 [ ps:P30 wd:Q48 ] . } LIMIT 1",
        "Squall label based": "how many [Country] has <continent> [Asia]?",
        "Squall ID based": "how many <Q6256> has <P30> <Q48>?"
    },
    {
        "Question": "In what year was Edgar Allen Poe's poem The Raven published?",
        "ID": "cd4e4e9a",
        "Entities": "Q16867:Edgar Allan Poe, Q22726:The Raven",
        "Mintaka Answer": "1845",
        "Sparklis label based": "[The Raven] has as an <author> [Edgar Allan Poe] and has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q22726> has as an <P50> <Q16867> and has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[The Raven] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q22726 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a <publication date> of [The Raven]?",
        "Squall ID based": "what is the year of a <P577> of <Q22726>?"
    },
    {
        "Question": "Did Single Ladies come out the same year as Halo?",
        "ID": "a9397251",
        "Entities": "Q147409:Single Ladies (Put a Ring on It), Q1747150:Halo",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Single Ladies (Put a Ring on It)] has a <publication date> and [Halo] has a <publication date>",
        "Sparklis ID based": "<Q147409> has a <P577> and <Q1747150> has a <P577>",
        "Sparql label based": "Ask { wd:[Single Ladies (put A Ring On It)] p:<publication date> [ ps:<publication date> ?date1 ] . BIND (year(?date1) AS ?expr_101) wd:[Halo] p:<publication date> [ ps:<publication date> ?date2 ] . BIND (year(?date2) AS ?expr_102) FILTER (?expr_101 = ?expr_102) }",
        "Sparql ID based": "Ask { wd:Q147409 p:P577 [ ps:P577 ?date1 ] . BIND (year(?date1) AS ?expr_101) wd:Q1747150 p:P577 [ ps:P577 ?date2 ] . BIND (year(?date2) AS ?expr_102) FILTER (?expr_101 = ?expr_102) }",
        "Squall label based": "whether [Single Ladies (put A Ring On It)] has a <publication date> whose year is the year of a <publication date> of [Halo]?",
        "Squall ID based": "whether <Q147409> has a <P577> whose year is the year of a <P577> of <Q1747150>?"
    },
    {
        "Question": "Who ran for president in 2008 and was from Chicago, Illinois?",
        "ID": "b37a9a88",
        "Entities": "Q11696:President of the United States,Q1297:Chicago,2008:None",
        "Mintaka Answer": "Q76:Barack Obama",
        "Sparklis label based": "give me every [human] that is the <candidate> of [2008 United States presidential election] and that has as a residence [Chicago]",
        "Sparklis ID based": "give me every <Q5> that is the <P726> of <Q45578> and that has as a residence <Q1297>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[2008 United States Presidential Election] p:<candidate> [ ps:<candidate> ?Q5_1 ] . ?Q5_1 p:<residence> [ ps:<residence> wd:[Chicago] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q45578 p:P726 [ ps:P726 ?Q5_1 ] . ?Q5_1 p:P551 [ ps:P551 wd:Q1297 ] . }",
        "Squall label based": "which [Human] is a <candidate> of [2008 United States Presidential Election] and has <residence> [Chicago]?",
        "Squall ID based": "which <Q5> is a <P726> of <Q45578> and has <P551> <Q1297>?"
    },
    {
        "Question": "Is J. K. Rowling younger than Stephen King?",
        "ID": "338238b6",
        "Entities": "Q34660:J. K. Rowling,Q39829:Stephen King",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[J. K. Rowling] has a <date of birth> and [Stephen King] has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "<Q34660> has a <P569> and <Q39829> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "Ask { wd:[J. K. Rowling] p:<date of birth> [ ps:<date of birth> ?dob1 ] . wd:[Stephen King] p:<date of birth> [ ps:<date of birth> ?dob2 ] . FILTER (?dob1 > ?dob2) }",
        "Sparql ID based": "Ask { wd:Q34660 p:P569 [ ps:P569 ?dob1 ] . wd:Q39829 p:P569 [ ps:P569 ?dob2 ] . FILTER (?dob1 > ?dob2) }",
        "Squall label based": "whether [J. K. Rowling] has a <date of birth> greater than a <date of birth> of [Stephen King]?",
        "Squall ID based": "whether <Q34660> has a <P569> greater than a <P569> of <Q39829>?"
    },
    {
        "Question": "When did Michael Jackson win his first Grammy Award?",
        "ID": "3e43622d",
        "Entities": "Q41254:Grammy Award,Q2831:Michael Jackson,1:None",
        "Mintaka Answer": "1980",
        "Sparklis label based": "[Michael Jackson] <award received> something that is the <instance of> [Grammy Award] with the lowest-to-highest <point in time> and give me the year of the <point in time>",
        "Sparklis ID based": "<Q2831> <P166> something that is the <P31> <Q41254> with the lowest-to-highest <P585> and give me the year of the <P585>",
        "Sparql label based": "select distinct ?expr_134 where { wd:[Michael Jackson] p:<award received> [ ps:<award received> ?p31_5 ; n1:<point in time> ?p585_7 ] . ?p31_5 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . bind (year(?p585_7) as ?expr_134) } order by asc(?p585_7) limit 1",
        "Sparql ID based": "select distinct ?expr_134 where { wd:Q2831 p:P166 [ ps:P166 ?p31_5 ; n1:P585 ?p585_7 ] . ?p31_5 p:P31 [ ps:P31 wd:Q41254 ] . bind (year(?p585_7) as ?expr_134) } order by asc(?p585_7) limit 1",
        "Squall label based": "what is the year of the lowest thing at which <point in time> [Michael Jackson] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the year of the lowest thing at which <P585> <Q2831> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "Did Assassin's Creed: Valhalla come out before 2021?",
        "ID": "5305d7ed",
        "Entities": "Q92464687:Assassin's Creed Valhalla",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Assassin's Creed Valhalla] has a <publication date> and where the year of the <publication date> < 2021",
        "Sparklis ID based": "<Q92464687> has a <P577> and where the year of the <P577> < 2021",
        "Sparql label based": "Ask { wd:[Assassin's Creed Valhalla] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < 2021) ) }",
        "Sparql ID based": "Ask { wd:Q92464687 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < 2021) ) }",
        "Squall label based": "whether [Assassin's Creed Valhalla] has a <publication date> whose year is lesser than 2021?",
        "Squall ID based": "whether <Q92464687> has a <P577> whose year is lesser than 2021?"
    },
    {
        "Question": "Which series started first, Mortal Kombat or Street Fighter?",
        "ID": "cc95a611",
        "Entities": "Q288035:Street Fighter, Q241163:Mortal Kombat",
        "Mintaka Answer": "Q288035:Street Fighter",
        "Sparklis label based": "[Street Fighter] has a <publication date> and give me every [video game] that has as a <part of the series> [Mortal Kombat] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "<Q288035> has a <P577> and give me every <Q7889> that has as a <P179> <Q241163> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Street Fighter] wd:[Mortal Kombat] } ?x p:<publication date> [ ps:<publication date> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q288035 wd:Q241163 } ?x p:P577 [ ps:P577 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Street Fighter] or [Mortal Kombat] and has the lowest <publication date>?",
        "Squall ID based": "what is <Q288035> or <Q241163> and has the lowest <P577>?"
    },
    {
        "Question": "Which movie was directed by Darren Aronofsky and starred Rachel Weisz?",
        "ID": "c43881e9",
        "Entities": "Q192762:Darren Aronofsky,Q134077:Rachel Weisz",
        "Mintaka Answer": "Q842770:The Fountain",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Rachel Weisz] and that has as a <director> [Darren Aronofsky]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q134077> and that has as a <P57> <Q192762>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Rachel Weisz] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Darren Aronofsky] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q134077 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q192762 ] . }",
        "Squall label based": "which [Film] has <cast member> [Rachel Weisz] and has <director> [Darren Aronofsky]?",
        "Squall ID based": "which <Q11424> has <P161> <Q134077> and has <P57> <Q192762>?"
    },
    {
        "Question": "Which Hunger Games book was not made as a single movie?",
        "ID": "a2699c51",
        "Entities": "Q11679:The Hunger Games",
        "Mintaka Answer": "Q40354:Mockingjay",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Hunger Games] and that has a [derivative work] and for each [literary work] give me the number higher or equal to 2 of [derivative work]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q212965> and that has a <Q836950> and for each <Q7725634> give me the number higher or equal to 2 of <Q836950>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 3] ] . ?Q7725634_1 p:<derivative work> [ ps:<derivative work> ?P4969_6 ] . } GROUP BY ?Q7725634_1 HAVING ( xsd:double(str(COUNT(DISTINCT ?P4969_6))) >= 2 )",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q11679 ] . ?Q7725634_1 p:P4969 [ ps:P4969 ?P4969_6 ] . } GROUP BY ?Q7725634_1 HAVING ( xsd:double(str(COUNT(DISTINCT ?P4969_6))) >= 2 )",
        "Squall label based": "which [Literary Work] has <part of the series> [The Hunger Games 3] and has more than 1 <derivative work>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q11679> and has more than 1 <P4969>?"
    },
    {
        "Question": "How many Pirates of the Caribbean movies are there?",
        "ID": "4df2564a",
        "Entities": "Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q46717:Pirates of the Caribbean: The Curse of the Black Pearl,Q161087:Pirates of the Caribbean: Dead Man's Chest,Q54274:Pirates of the Caribbean: At World's End,Q183555:Pirates of the Caribbean: On Stranger Tides,Q10350033:Pirates of the Caribbean: Dead Men Tell No Tales",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and give me the number of <Q11424>",
        "Sparql label based": "select distinct ?q11424_39 where { ?q11424_39 wdt:<instance of> wd:[Film] . ?q11424_39 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . }",
        "Sparql ID based": "select distinct ?q11424_39 where { ?q11424_39 wdt:P31 wd:Q11424 . ?q11424_39 p:P179 [ ps:P179 wd:Q194318 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean]?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318>?"
    },
    {
        "Question": "Who was Julia Robert's first husband?",
        "ID": "c54a43b7",
        "Entities": "Q40523:Julia Roberts,1:None",
        "Mintaka Answer": "Q543637:Lyle Lovett",
        "Sparklis label based": "give me every [human] that has as a <spouse> with an <end time> [Julia Roberts]",
        "Sparklis ID based": "give me every <Q5> that has as a <P26> with an <P582> <Q40523>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<spouse> [ n1:<end time> ?P582_12 ; ps:<spouse> wd:[Julia Roberts] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P26 [ n1:P582 ?P582_12 ; ps:P26 wd:Q40523 ] . }",
        "Squall label based": "which [Human] has <spouse> at a <end time> [Julia Roberts]?",
        "Squall ID based": "which <Q5> has <P26> at a <P582> <Q40523>?"
    },
    {
        "Question": "Which of the Pirates of the Caribbean movies is the longest?",
        "ID": "7d8a94d2",
        "Entities": "Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q54274:Pirates of the Caribbean: At World's End",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q194318 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has the highest <P2047>?"
    },
    {
        "Question": "Which movie was directed by the Coen brothers and starred John Turturro?",
        "ID": "fd4d3a28",
        "Entities": "Q244234:John Turturro,Q56095:Coen brothers",
        "Mintaka Answer": "Q237215:Barton Fink",
        "Sparklis label based": "give me every [film] that has a <director> that is the <part of> [Coen brothers] and that has as a <cast member> [John Turturro]",
        "Sparklis ID based": "give me every <Q11424> that has a <P57> that is the <P361> <Q56095> and that has as a <P161> <Q244234>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> ?p57_9 ] . ?p57_9 p:<part of> [ ps:<part of> wd:[Coen Brothers] ] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[John Turturro] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 ?p57_9 ] . ?p57_9 p:P361 [ ps:P361 wd:Q56095 ] . ?q11424_1 p:P161 [ ps:P161 wd:Q244234 ] . }",
        "Squall label based": "which [Film] has <cast member> [John Turturro] and has a <director> that has <part of> [Coen Brothers]?",
        "Squall ID based": "which <Q11424> has <P161> <Q244234> and has a <P57> that has <P361> <Q56095>?"
    },
    {
        "Question": "Who was born in Brooklyn, NY and a current senator of Connecticut?",
        "ID": "2c7359d4",
        "Entities": "Q4416090:United States senator, Q18419:Brooklyn, Q779:Connecticut",
        "Mintaka Answer": "Q2023708:Richard Blumenthal",
        "Sparklis label based": "give me every [human] that has as a <place of birth> [Brooklyn] and that has as a <position held> with the highest-to-lowest <start time> [United States senator] with <electoral district> [Connecticut Class 3 senate seat] that has as a <located in the administrative territorial entity> [Connecticut]",
        "Sparklis ID based": "give me every <Q5> that has as a <P19> <Q18419> and that has as a <P39> with the highest-to-lowest <P580> <Q4416090> with <P768> <Q101498964> that has as a <P131> <Q779>",
        "Sparql label based": "SELECT DISTINCT ?Q5_92 ?P580_96 WHERE { ?Q5_92 wdt:<instance of> wd:[Human] . ?Q5_92 p:<place of birth> [ ps:<place of birth> wd:[Brooklyn] ] . ?Q5_92 p:<position held> [ n1:<start time> ?P580_96 ; ps:<position held> wd:[United States Senator] ; n1:<electoral district> wd:[Connecticut Class 3 Senate Seat] ] . } ORDER BY DESC(?P580_96) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_92 ?P580_96 WHERE { ?Q5_92 wdt:P31 wd:Q5 . ?Q5_92 p:P19 [ ps:P19 wd:Q18419 ] . ?Q5_92 p:P39 [ n1:P580 ?P580_96 ; ps:P39 wd:Q4416090 ; n1:P768 wd:Q101498964 ] . } ORDER BY DESC(?P580_96) LIMIT 1",
        "Squall label based": "which [Human] has <place of birth> [Brooklyn] and has <position held> at the highest <start time> at <electoral district> [Connecticut Class 3 Senate Seat] [United States Senator]?",
        "Squall ID based": "which <Q5> has <P19> <Q18419> and has <P39> at the highest <P580> at <P768> <Q101498964> <Q4416090>?"
    },
    {
        "Question": "When was Milo Goes To College by Descendants released?",
        "ID": "5467f619",
        "Entities": "Q1141744:Milo Goes to College, Q301142:Descendents",
        "Mintaka Answer": "1982",
        "Sparklis label based": "[Milo Goes to College] has as a <performer> [Descendents] and has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q1141744> has as a <P175> <Q301142> and has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_89 WHERE { wd:[Milo Goes To College] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_89) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_89 WHERE { wd:Q1141744 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_89) } LIMIT 1",
        "Squall label based": "what is the year of a <publication date> of [Milo Goes To College]?",
        "Squall ID based": "what is the year of a <P577> of <Q1141744>?"
    },
    {
        "Question": "Who was the ninth governor of California?",
        "ID": "98d600ff",
        "Entities": "Q99:California,9:None",
        "Mintaka Answer": "Q879234:Frederick Low",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of California] with <series ordinal> 9",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q887010> with <P1545> 9",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[Governor Of California] ; n1:<series ordinal> \"9\" ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q887010 ; n1:P1545 \"9\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"9\" [Governor Of California]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"9\" <Q887010>?"
    },
    {
        "Question": "What is the third book in Anne Rice's The Vampire Chronicles series?",
        "ID": "4624bd6b",
        "Entities": "Q184785:Anne Rice, Q840516:The Vampire Chronicles",
        "Mintaka Answer": "Q1214221:The Queen of the Damned",
        "Sparklis label based": "[The Vampire Chronicles] has as an <author> [Anne Rice] and <has part(s)> with <series ordinal> 3",
        "Sparklis ID based": "<Q840516> has as an <P50> <Q184785> and <P527> with <P1545> 3",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE {wd:[The Vampire Chronicles] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ; n1:<series ordinal> \"3\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE {wd:Q840516 p:P527 [ ps:P527 ?P527_8 ; n1:P1545 \"3\" ] . }",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"3\" of [The Vampire Chronicles]?",
        "Squall ID based": "what is a <P527> at <P1545> \"3\" of <Q840516>?"
    },
    {
        "Question": "Which movie directed by Christopher Nolan stars Guy Pierce?",
        "ID": "45ef8aa9",
        "Entities": "Q25191:Christopher Nolan,Q223745:Guy Pearce",
        "Mintaka Answer": "Q190525:Memento",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that has as a <cast member> [Guy Pearce]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that has as a <P161> <Q223745>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Guy Pearce] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . ?q11424_1 p:P161 [ ps:P161 wd:Q223745 ] . }",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has <cast member> [Guy Pearce]?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has <P161> <Q223745>?"
    },
    {
        "Question": "What is the highest-selling Battlefield game?",
        "ID": "3784831d",
        "Entities": "Q474587:Battlefield",
        "Mintaka Answer": "Q791454:Battlefield 3",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Battlefield] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q474587> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "select distinct ?q7889_1 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Battlefield] ] . ?q7889_1 p:<units sold> [ ps:<units sold> ?p2664_5 ] . } order by desc(?p2664_5) limit 1",
        "Sparql ID based": "select distinct ?q7889_1 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q474587 ] . ?q7889_1 p:P2664 [ ps:P2664 ?p2664_5 ] . } order by desc(?p2664_5) limit 1",
        "Squall label based": "which [Video Game] has <part of the series> [Battlefield] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q474587> and has the highest <P2664>?"
    },
    {
        "Question": "Is Henry Cavill taller than Ben Affleck?",
        "ID": "c2b37d9c",
        "Entities": "Q295498:Henry Cavill,Q483118:Ben Affleck",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Henry Cavill] has a <height> and [Ben Affleck] has a <height>",
        "Sparklis ID based": "<Q295498> has a <P2048> and <Q483118> has a <P2048>",
        "Sparql label based": "Ask { wd:[Henry Cavill] p:<height> [ ps:<height> ?x1 ] . wd:[Ben Affleck] p:<height> [ ps:<height> ?x2 ] . FILTER (?x1 > ?x2) }",
        "Sparql ID based": "Ask { wd:Q295498 p:P2048 [ ps:P2048 ?x1 ] . wd:Q483118 p:P2048 [ ps:P2048 ?x2 ] . FILTER (?x1 > ?x2) }",
        "Squall label based": "whether [Henry Cavill] has a <height> greater than a <height> of [Ben Affleck]?",
        "Squall ID based": "whether <Q295498> has a <P2048> greater than a <P2048> of <Q483118>?"
    },
    {
        "Question": "Which ocean is larger, the Atlantic or Pacific?",
        "ID": "b159520b",
        "Entities": "Q97:Atlantic Ocean, Q98:Pacific Ocean",
        "Mintaka Answer": "Q98:Pacific Ocean",
        "Sparklis label based": "[Atlantic Ocean] has an <area> and [Pacific Ocean] has an <area>",
        "Sparklis ID based": "<Q97> has an <P2046> and <Q98> has an <P2046>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Atlantic Ocean] wd:[Pacific Ocean] } ?x p:<area> [ ps:<area> ?y ] . } ORDER BY DESC(?y) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q97 wd:Q98 } ?x p:P2046 [ ps:P2046 ?y ] . } ORDER BY DESC(?y) LIMIT 1",
        "Squall label based": "what is [Atlantic Ocean] or [Pacific Ocean] and has the highest <area>?",
        "Squall ID based": "what is <Q97> or <Q98> and has the highest <P2046>?"
    },
    {
        "Question": "When did Martin Scorsese win his first Oscar?",
        "ID": "081af39c",
        "Entities": "Q41148:Martin Scorsese,1:None",
        "Mintaka Answer": "2007",
        "Sparklis label based": "[Martin Scorsese] <award received> with a <point in time> [Academy Award for Best Director]",
        "Sparklis ID based": "<Q41148> <P166> with a <P585> <Q103360>",
        "Sparql label based": "SELECT DISTINCT ?P585_4 ?P1686_90 WHERE { wd:[Martin Scorsese] p:<award received> [ pq:<point in time> ?P585_4 ; ps:<award received> wd:[Academy Award For Best Director] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P585_4 ?P1686_90 WHERE { wd:Q41148 p:P166 [ pq:P585 ?P585_4 ; ps:P166 wd:Q103360 ] . }",
        "Squall label based": "at which <point in time> [Martin Scorsese] has <award received> [Academy Award For Best Director]?",
        "Squall ID based": "at which <P585> <Q41148> has <P166> <Q103360>?"
    },
    {
        "Question": "Who won the most Grammy Awards in 2020?",
        "ID": "e07f9eed",
        "Entities": "Q41254:Grammy Award,2020:None",
        "Mintaka Answer": "Q20029978:Finneas O'Connell",
        "Sparklis label based": "give me every human that award received  a Grammy Awards with a point in time  and give me the year of the point in time that is 2020 and for each human give me the highest-to-lowest number of Grammy Awards",
        "Sparklis ID based": "give me every human that award received a Grammy Awards with a point in time and give me the year of the point in time that is 2020 and for each human give me the highest-to-lowest number of Grammy Awards",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q41254_38 wdt:<instance of> wd:[Grammy Awards] . ?Q5_1 p:<award received> [ ps:<award received> ?Q41254_38 ; n1:<point in time> ?P585_142 ] . BIND (year(?P585_142) AS ?expr_268) FILTER ( ?expr_268 = \"2020\"^^xsd:integer ) } GROUP BY ?Q5_1 ORDER BY DESC(COUNT(DISTINCT ?Q41254_38)) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q41254_38 wdt:P31 wd:Q41254 . ?Q5_1 p:P166 [ ps:P166 ?Q41254_38 ; n1:P585 ?P585_142 ] . BIND (year(?P585_142) AS ?expr_268) FILTER ( ?expr_268 = \"2020\"^^xsd:integer ) } GROUP BY ?Q5_1 ORDER BY DESC(COUNT(DISTINCT ?Q41254_38)) LIMIT 1",
        "Squall label based": "which [Human] has <award received> at <point in time> '2020-01-01t00:00:00z'^^xsd:datetime the most [Grammy Awards]?",
        "Squall ID based": "which <Q5> has <P166> at <P585> '2020-01-01t00:00:00z'^^xsd:datetime the most <Q41254>?"
    },
    {
        "Question": "What Harry Potter movie made the most money?",
        "ID": "46a4d235",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q161678:Harry Potter and the Deathly Hallows \u2013 Part 1",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_349 p:<box office> [ ps:<box office> ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_349 p:P2142 [ ps:P2142 ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2142>?"
    },
    {
        "Question": "How many screenwriters does the movie Pulp Fiction have?",
        "ID": "2a5965c9",
        "Entities": "Q104123:Pulp Fiction",
        "Mintaka Answer": "Q3772:Quentin Tarantino,Q450720:Roger Avary",
        "Sparklis label based": "[Pulp Fiction] has a <screenwriter>",
        "Sparklis ID based": "<Q104123> has a <P58>",
        "Sparql label based": "SELECT DISTINCT ?P58_11 WHERE { wd:[Pulp Fiction] p:<screenwriter> [ ps:<screenwriter> ?P58_11 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P58_11 WHERE { wd:Q104123 p:P58 [ ps:P58 ?P58_11 ] . }",
        "Squall label based": "what is a <screenwriter> of [Pulp Fiction]?",
        "Squall ID based": "what is a <P58> of <Q104123>?"
    },
    {
        "Question": "What's the shortest theatrically released movie?",
        "ID": "d949da73",
        "Entities": "Q11424:film",
        "Mintaka Answer": "Q374172:The Kid",
        "Sparklis label based": "give me everything that is the <instance of> [film] and that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me everything that is the <P31> <Q11424> and that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?P31_1 WHERE { ?P31_1 p:<instance of> [ ps:<instance of> wd:[Film] ] . ?P31_1 p:<duration> [ ps:<duration> ?P2047_38 ] . } ORDER BY ASC(?P2047_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P31_1 WHERE { ?P31_1 p:P31 [ ps:P31 wd:Q11424 ] . ?P31_1 p:P2047 [ ps:P2047 ?P2047_38 ] . } ORDER BY ASC(?P2047_38) LIMIT 1",
        "Squall label based": "what has <instance of> [Film] and has the lowest <duration>?",
        "Squall ID based": "what has <P31> <Q11424> and has the lowest <P2047>?"
    },
    {
        "Question": "Who was the 13th president of the United States?",
        "ID": "59c4ac6b",
        "Entities": "Q30:United States of America,13:None",
        "Mintaka Answer": "Q12306:Millard Fillmore",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 13 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 13 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"13\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"13\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"13\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"13\" <Q11696>?"
    },
    {
        "Question": "Who is the head coach of the Buffalo Bills?",
        "ID": "b46a8087",
        "Entities": "Q221626:Buffalo Bills",
        "Mintaka Answer": "Q7441226:Sean McDermott",
        "Sparklis label based": "[Buffalo Bills] has a <head coach>",
        "Sparklis ID based": "<Q221626> has a <P286>",
        "Sparql label based": "SELECT DISTINCT ?P286_8 WHERE { wd:[Buffalo Bills] p:<head coach> [ ps:<head coach> ?P286_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P286_8 WHERE { wd:Q221626 p:P286 [ ps:P286 ?P286_8 ] . }",
        "Squall label based": "what is a <head coach> of [Buffalo Bills]?",
        "Squall ID based": "what is a <P286> of <Q221626>?"
    },
    {
        "Question": "Which president of the United States has been married the most times?",
        "ID": "dc4767c9",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q22686:Donald Trump",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] and that has a <spouse>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has a <P26>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P26_5 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_1 p:<spouse> [ ps:<spouse> ?P26_5 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P26_5 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_1 p:P26 [ ps:P26 ?P26_5 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has a <spouse>?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has a <P26>?"
    },
    {
        "Question": "What year did Louis Armstrong record the song What A Wonderful World?",
        "ID": "1e36efce",
        "Entities": "Q944632:What a Wonderful World, Q1779:Louis Armstrong",
        "Mintaka Answer": "1967",
        "Sparklis label based": "[What a Wonderful World] has as a <performer> with a <publication date> [Louis Armstrong] and give me the year of the <publication date>",
        "Sparklis ID based": "<Q944632> has as a <P175> with a <P577> <Q1779> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_4 WHERE { wd:[What A Wonderful World] p:<performer> [ n1:<publication date> ?P577_4 ; ps:<performer> wd:[Louis Armstrong] ] . BIND (year(?P577_4) AS ?expr_89) }",
        "Sparql ID based": "SELECT DISTINCT ?P577_4 WHERE { wd:Q944632 p:P175 [ n1:P577 ?P577_4 ; ps:P175 wd:Q1779 ] . BIND (year(?P577_4) AS ?expr_89) }",
        "Squall label based": "what has a year and is a thing at which <publication date> [What A Wonderful World] has <performer> [Louis Armstrong]?",
        "Squall ID based": "what has a year and is a thing at which <P577> <Q944632> has <P175> <Q1779>?"
    },
    {
        "Question": "Who is the singer for AC/DC, who was born in the United Kingdom?",
        "ID": "28772773",
        "Entities": "Q145:United Kingdom,Q27593:AC/DC",
        "Mintaka Answer": "Q295948:Brian Johnson",
        "Sparklis label based": "give me the highest-to-lowest [human] that has as an <occupation> [singer] and that is the <member of> [AC/DC] and that has a <place of birth> that has as a <country> [United Kingdom]",
        "Sparklis ID based": "give me the highest-to-lowest <Q5> that has as an <P106> <Q177220> and that is the <P463> <Q27593> and that has a <P19> that has as a <P17> <Q145>",
        "Sparql label based": "SELECT DISTINCT ?Q5_24 WHERE { ?Q5_24 wdt:<instance of> wd:[Human] . ?Q5_24 p:<occupation> [ ps:<occupation> wd:[Singer] ] . ?Q5_24 p:<member of> [ ps:<member of> wd:[Ac/dc] ] . ?Q5_24 p:<place of birth> [ ps:<place of birth> ?P19_30 ] . ?P19_30 p:<country> [ ps:<country> wd:[United Kingdom] ] . } ORDER BY DESC(?Q5_24) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_24 WHERE { ?Q5_24 wdt:P31 wd:Q5 . ?Q5_24 p:P106 [ ps:P106 wd:Q177220 ] . ?Q5_24 p:P463 [ ps:P463 wd:Q27593 ] . ?Q5_24 p:P19 [ ps:P19 ?P19_30 ] . ?P19_30 p:P17 [ ps:P17 wd:Q145 ] . } ORDER BY DESC(?Q5_24) LIMIT 1",
        "Squall label based": "what is the highest [Human] that has <occupation> [Singer] and has <member of> [Ac/dc] and has a <place of birth> that has <country> [United Kingdom]?",
        "Squall ID based": "what is the highest <Q5> that has <P106> <Q177220> and has <P463> <Q27593> and has a <P19> that has <P17> <Q145>?"
    },
    {
        "Question": "Which actress starred in Freaky Friday and the Parent Trap, and was born in the Bronx?",
        "ID": "049fb505",
        "Entities": "Q729782:The Parent Trap,Q118713:Freaky Friday,Q18426:The Bronx",
        "Mintaka Answer": "Q44903:Lindsay Lohan",
        "Sparklis label based": "give me every [human] that has as a <place of birth> [The Bronx] and that is the <cast member> of [The Parent Trap] and of [Freaky Friday]",
        "Sparklis ID based": "give me every <Q5> that has as a <P19> <Q18426> and that is the <P161> of <Q729782> and of <Q118713>",
        "Sparql label based": "SELECT DISTINCT ?Q5_247 WHERE { ?Q5_247 wdt:<instance of> wd:[Human] . ?Q5_247 p:<place of birth> [ ps:<place of birth> wd:[The Bronx] ] . wd:[The Parent Trap] p:<cast member> [ ps:<cast member> ?Q5_247 ] . wd:[Freaky Friday] p:<cast member> [ ps:<cast member> ?Q5_247 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_247 WHERE { ?Q5_247 wdt:P31 wd:Q5 . ?Q5_247 p:P19 [ ps:P19 wd:Q18426 ] . wd:Q729782 p:P161 [ ps:P161 ?Q5_247 ] . wd:Q118713 p:P161 [ ps:P161 ?Q5_247 ] . }",
        "Squall label based": "which [Human] has <place of birth> [The Bronx] and is a <cast member> of [The Parent Trap] and [Freaky Friday]?",
        "Squall ID based": "which <Q5> has <P19> <Q18426> and is a <P161> of <Q729782> and <Q118713>?"
    },
    {
        "Question": "What is the seventh book in The Wheel of Time series?",
        "ID": "ca7bc679",
        "Entities": "Q4470:The Wheel of Time,7:None",
        "Mintaka Answer": "Q1850845:A Crown of Swords",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 7 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 7 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"7\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"7\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"7\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"7\" <Q4470>?"
    },
    {
        "Question": "Which governors from Washington have not been Republican since 1990?",
        "ID": "fff4704f",
        "Entities": "Q29468:Republican Party, Q1223:Washington",
        "Mintaka Answer": "Q142462:Booth Gardner, Q880280:Mike Lowry, Q350378:Gary Locke, Q239366:Christine Gregoire, Q1100710:Jay Inslee",
        "Sparklis label based": "give me every [human] that not has as a <member of political party> [Republican Party] and that has as a <position held> with a <start time> [Governor of Washington] and where the year of the <start time> >= 1990",
        "Sparklis ID based": "give me every <Q5> that not has as a <P102> <Q29468> and that has as a <P39> with a <P580> <Q19647220> and where the year of the <P580> >= 1990",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ n1:<start time> ?P580_12 ; ps:<position held> wd:[Governor Of Washington] ] . FILTER ( NOT EXISTS { ?Q5_8 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( (year(?P580_12) > \"1990\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ n1:P580 ?P580_12 ; ps:P39 wd:Q19647220 ] . FILTER ( NOT EXISTS { ?Q5_8 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( (year(?P580_12) > \"1990\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater than 1990 [Governor Of Washington] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater than 1990 <Q19647220> and has not <P102> <Q29468>?"
    },
    {
        "Question": "What is the most populous city that is not located in Asia?",
        "ID": "5bbd77db",
        "Entities": "Q48:Asia",
        "Mintaka Answer": "Q174:S\u00e3o Paulo",
        "Sparklis label based": "give me every [city] that has as a <continent> and not [Asia] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has as a <P30> and not <Q48> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "select distinct ?q515_8 where { ?q515_8 wdt:<instance of> wd:[City] . ?q515_8 p:<continent> [ ps:<continent> [] ] . filter ( not exists { ?q515_8 p:<continent> [ ps:<continent> wd:[Asia] ] . } ) ?q515_8 p:<population> [ ps:<population> ?p1082_12 ] . } order by desc(?p1082_12) limit 1",
        "Sparql ID based": "select distinct ?q515_8 where { ?q515_8 wdt:P31 wd:Q515 . ?q515_8 p:P30 [ ps:P30 [] ] . filter ( not exists { ?q515_8 p:P30 [ ps:P30 wd:Q48 ] . } ) ?q515_8 p:P1082 [ ps:P1082 ?p1082_12 ] . } order by desc(?p1082_12) limit 1",
        "Squall label based": "which [City] has a <continent> and has not <continent> [Asia] and has the highest <population>?",
        "Squall ID based": "which <Q515> has a <P30> and has not <P30> <Q48> and has the highest <P1082>?"
    },
    {
        "Question": "How many Die Hard films are there?",
        "ID": "32e75f52",
        "Entities": "Q2716420:Die Hard",
        "Mintaka Answer": "Q105598:Die Hard,Q105993:Die Hard 2,Q106871:Die Hard with a Vengeance,Q50861:Live Free or Die Hard,Q72276:A Good Day to Die Hard",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Die Hard] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2716420> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:<instance of> wd:[Film] . ?Q11424_311 p:<part of the series> [ ps:<part of the series> wd:[Die Hard] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:P31 wd:Q11424 . ?Q11424_311 p:P179 [ ps:P179 wd:Q2716420 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Die Hard]?",
        "Squall ID based": "which <Q11424> has <P179> <Q2716420>?"
    },
    {
        "Question": "How many Underworld movies are there?",
        "ID": "ee21213c",
        "Entities": "Q82332:Underworld",
        "Mintaka Answer": "Q164804:Underworld,Q646025:Underworld: Evolution,Q755715:Underworld: Rise of the Lycans,Q680989:Underworld: Awakening,Q21130624:Underworld: Blood Wars",
        "Sparklis label based": "[Underworld] <has part(s)>",
        "Sparklis ID based": "<Q82332> <P527>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Underworld] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q82332 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "what is a <has part(s)> of [Underworld]?",
        "Squall ID based": "what is a <P527> of <Q82332>?"
    },
    {
        "Question": "How many Ratchet and Clank games have come out on PS5?",
        "ID": "cb44f2f7",
        "Entities": "Q5170139:Ratchet & Clank, Q63184502:PlayStation 5",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Ratchet & Clank] <has part(s)> that has as a <platform> [PlayStation 5] and give me the number of part(s)",
        "Sparklis ID based": "<Q5170139> <P527> that has as a <P400> <Q63184502> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Ratchet & Clank] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<platform> [ ps:<platform> wd:[Playstation 5] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q5170139 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P400 [ ps:P400 wd:Q63184502 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <has part(s)> of [Ratchet & Clank] and has <platform> [Playstation 5]?",
        "Squall ID based": "how many thing is a <P527> of <Q5170139> and has <P400> <Q63184502>?"
    },
    {
        "Question": "How many members are in Chvrches?",
        "ID": "be486984",
        "Entities": "Q5118436:Chvrches",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Chvrches] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q5118436> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Chvrches] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q5118436 p:P527 [ ps:P527 ?P527_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <has part(s)> of [Chvrches]?",
        "Squall ID based": "how many thing is a <P527> of <Q5118436>?"
    },
    {
        "Question": "Who won the Best Actor Oscar in 2020?",
        "ID": "896da71f",
        "Entities": "Q103916:Academy Award for Best Actor",
        "Mintaka Answer": "Q185140:Joaquin Phoenix",
        "Sparklis label based": "give me every human that <award received> with a <point in time> [Academy Award for Best Actor] and where the year of the <point in time> = 2020",
        "Sparklis ID based": "give me every human that <P166> with a <P585> <Q103916> and where the year of the <P585> = 2020",
        "Sparql label based": "SELECT DISTINCT ?Q5_99 ?P585_102 WHERE { ?Q5_99 wdt:<instance of> wd:[Human] . ?Q5_99 p:<award received> [ n1:<point in time> ?P585_102 ; ps:<award received> wd:[Academy Award For Best Actor] ] . FILTER ( (year(?P585_102) = \"2020\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_99 ?P585_102 WHERE { ?Q5_99 wdt:P31 wd:Q5 . ?Q5_99 p:P166 [ n1:P585 ?P585_102 ; ps:P166 wd:Q103916 ] . FILTER ( (year(?P585_102) = \"2020\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <award received> at a <point in time> whose year is 2020 [Academy Award For Best Actor]?",
        "Squall ID based": "which <Q5> has <P166> at a <P585> whose year is 2020 <Q103916>?"
    },
    {
        "Question": "What is the first Lana Del Rey album called?",
        "ID": "65dcc89b",
        "Entities": "Q37150:Lana Del Rey,1:None",
        "Mintaka Answer": "Q770514:Lana Del Ray a.k.a. Lizzy Grant",
        "Sparklis label based": "give me every [album] that has as a <performer> [Lana Del Rey] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q37150> and that has the lowest-to-highest <P577>",
        "Sparql label based": "select distinct ?q482994_1 where { ?q482994_1 wdt:<instance of> wd:[Album] . ?q482994_1 p:<performer> [ ps:<performer> wd:[Lana Del Rey] ] . ?q482994_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . } order by asc(?p577_5) limit 1",
        "Sparql ID based": "select distinct ?q482994_1 where { ?q482994_1 wdt:P31 wd:Q482994 . ?q482994_1 p:P175 [ ps:P175 wd:Q37150 ] . ?q482994_1 p:P577 [ ps:P577 ?p577_5 ] . } order by asc(?p577_5) limit 1",
        "Squall label based": "which [Album] has <performer> [Lana Del Rey] and has the lowest <publication date>?",
        "Squall ID based": "which <Q482994> has <P175> <Q37150> and has the lowest <P577>?"
    },
    {
        "Question": "Which Harry Potter film made the most money?",
        "ID": "87a5f306",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q232009:Harry Potter and the Deathly Hallows \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "select distinct ?q11424_8 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?q11424_8 p:<box office> [ ps:<box office> ?p2142_12 ] . } order by desc(?p2142_12) limit 1",
        "Sparql ID based": "select distinct ?q11424_8 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P179 [ ps:P179 wd:Q216930 ] . ?q11424_8 p:P2142 [ ps:P2142 ?p2142_12 ] . } order by desc(?p2142_12) limit 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2142>?"
    },
    {
        "Question": "How many movies are in The Twilight Saga?",
        "ID": "fdb461b3",
        "Entities": "Q652599:The Twilight Saga",
        "Mintaka Answer": "Q160071:Twilight,Q116928:The Twilight Saga: New Moon,Q217010:The Twilight Saga: Eclipse,Q60506:The Twilight Saga: Breaking Dawn \u2013 Part 1,Q60487:The Twilight Saga: Breaking Dawn \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Twilight Saga] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q652599> and give me the number of <Q11424>",
        "Sparql label based": "select distinct ?q11424_39 where { ?q11424_39 wdt:<instance of> wd:[Film] . ?q11424_39 p:<part of the series> [ ps:<part of the series> wd:[The Twilight Saga] ] . }",
        "Sparql ID based": "select distinct ?q11424_39 where { ?q11424_39 wdt:P31 wd:Q11424 . ?q11424_39 p:P179 [ ps:P179 wd:Q652599 ] . }",
        "Squall label based": "which [Film] has <part of the series> [The Twilight Saga]?",
        "Squall ID based": "which <Q11424> has <P179> <Q652599>?"
    },
    {
        "Question": "Which Star Trek movie made the most money?",
        "ID": "68663d7b",
        "Entities": "Q1092:Star Trek",
        "Mintaka Answer": "Q213081:Star Trek",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Star Trek 2] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1102217> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Star Trek 2] ] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_12 ] . } ORDER BY DESC(?P2142_12) Limit 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q1102217 ] . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_12 ] . } ORDER BY DESC(?P2142_12) Limit 1",
        "Squall label based": "which [Film] has <part of the series> [Star Trek 2] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q1102217> and has the highest <P2142>?"
    },
    {
        "Question": "How many teams has Kevin Durant played for?",
        "ID": "68c1372b",
        "Entities": "Q29545:Kevin Durant",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Kevin Durant] has a <member of sports team> and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q29545> has a <P54> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Kevin Durant] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q29545 p:P54 [ ps:P54 ?P54_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <member of sports team> of [Kevin Durant]?",
        "Squall ID based": "how many thing is a <P54> of <Q29545>?"
    },
    {
        "Question": "What was the second book in the Wheel of Time series?",
        "ID": "eb316b33",
        "Entities": "Q4470:The Wheel of Time,2:None",
        "Mintaka Answer": "Q470229:The Great Hunt",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 2 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 2 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"2\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"2\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"2\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"2\" <Q4470>?"
    },
    {
        "Question": "Did Avengers: Endgame have a bigger budget than Avengers: Infinity War?",
        "ID": "adf16132",
        "Entities": "Q23780914:Avengers: Infinity War,Q23781155:Avengers: Endgame",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Avengers: Infinity War] has a <cost> and [Avengers: Endgame] has a <cost> and give me the total 1st <cost> and give me the total 2nd <cost> and where the total 2nd <cost> < the total 1st <cost>",
        "Sparklis ID based": "<Q23780914> has a <P2130> and <Q23781155> has a <P2130> and give me the total 1st <P2130> and give me the total 2nd <P2130> and where the total 2nd <P2130> <_the_total_1st_<cost>",
        "Sparql label based": "Ask { VALUES ?P2130_8 {wd:[Avengers: Infinity War] wd:[Avengers: Endgame]} ?P2130_8 p:<cost> [ ps:<cost> ?value ] . }",
        "Sparql ID based": "Ask { VALUES ?P2130_8 {wd:Q23780914 wd:Q23781155} ?P2130_8 p:P2130 [ ps:P2130 ?value ] . }",
        "Squall label based": "is there a thing that is [Avengers: Infinity War] or [Avengers: Endgame] and has a <cost>?",
        "Squall ID based": "is there a thing that is <Q23780914> or <Q23781155> and has a <P2130>?"
    },
    {
        "Question": "Did Justin Trudeau become prime minister before 2016?",
        "ID": "3637d371",
        "Entities": "Q3099714:Justin Trudeau,2016:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Justin Trudeau] has as a <position held> with a <start time> [Prime Minister of Canada] and where the year of the <start time> < 2016",
        "Sparklis ID based": "<Q3099714> has as a <P39> with a <P580> <Q839078> and where the year of the <P580> < 2016",
        "Sparql label based": "ASK { wd:[Justin Trudeau] p:<position held> [ n1:<start time> ?P580_4 ; ps:<position held> wd:[Prime Minister Of Canada] ] . FILTER (year(?P580_4) < 2016)}",
        "Sparql ID based": "ASK { wd:Q3099714 p:P39 [ n1:P580 ?P580_4 ; ps:P39 wd:Q839078 ] . FILTER (year(?P580_4) < 2016)}",
        "Squall label based": "whether [Justin Trudeau] has <position held> at a <start time> whose year is lesser than 2016 [Prime Minister Of Canada]?",
        "Squall ID based": "whether <Q3099714> has <P39> at a <P580> whose year is lesser than 2016 <Q839078>?"
    },
    {
        "Question": "When did Clint Eastwood direct his first movie?",
        "ID": "e9e628ae",
        "Entities": "Q43203:Clint Eastwood,1:None",
        "Mintaka Answer": "1971",
        "Sparklis label based": "give me every [film] that has as a <director> [Clint Eastwood] and that has a <publication date> and give me lowest-to-highest the year of the <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q43203> and that has a <P577> and give me lowest-to-highest the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_213 WHERE { ?Q11424_91 wdt:<instance of> wd:[Film] . ?Q11424_91 p:<director> [ ps:<director> wd:[Clint Eastwood] ] . ?Q11424_91 p:<publication date> [ ps:<publication date> ?P577_128 ] . BIND (year(?P577_128) AS ?expr_213) } ORDER BY ASC(?expr_213) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_213 WHERE { ?Q11424_91 wdt:P31 wd:Q11424 . ?Q11424_91 p:P57 [ ps:P57 wd:Q43203 ] . ?Q11424_91 p:P577 [ ps:P577 ?P577_128 ] . BIND (year(?P577_128) AS ?expr_213) } ORDER BY ASC(?expr_213) LIMIT 1",
        "Squall label based": "what is the lowest year of a <publication date> of a [Film] that has <director> [Clint Eastwood]?",
        "Squall ID based": "what is the lowest year of a <P577> of a <Q11424> that has <P57> <Q43203>?"
    },
    {
        "Question": "Which member of The Police was not British?",
        "ID": "26d6d309",
        "Entities": "Q842438:Britons,Q178095:The Police",
        "Mintaka Answer": "Q315711:Stewart Copeland",
        "Sparklis label based": "[The Police] has a <member of> that not has as a <country of citizenship> [United Kingdom]",
        "Sparklis ID based": "<Q178095> has a <P463> that not has as a <P27> <Q145>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[The Police] ] . FILTER ( NOT EXISTS { ?P463_8 p:<country of citizenship> [ ps:<country of citizenship> wd:[United Kingdom] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q178095 ] . FILTER ( NOT EXISTS { ?P463_8 p:P27 [ ps:P27 wd:Q145 ] . } ) }",
        "Squall label based": "what has <member of> [The Police] and has not <country of citizenship> [United Kingdom]?",
        "Squall ID based": "what has <P463> <Q178095> and has not <P27> <Q145>?"
    },
    {
        "Question": "How many singers has AC/DC had?",
        "ID": "e0e02c21",
        "Entities": "Q27593:AC/DC",
        "Mintaka Answer": "Q204162:Bon Scott,Q295948:Brian Johnson",
        "Sparklis label based": "[AC/DC] <has part(s)> that has as an <occupation> [singer] and give me the number of part(s)",
        "Sparklis ID based": "<Q27593> <P527> that has as an <P106> <Q177220> and give me the number of part(s)",
        "Sparql label based": "select distinct (count(distinct ?p527_8) as ?number_of_46) where { wd:[Ac/dc] p:<has part(s)> [ ps:<has part(s)> ?p527_8 ] . ?p527_8 p:<occupation> [ ps:<occupation> wd:[Singer] ] . }",
        "Sparql ID based": "select distinct (count(distinct ?p527_8) as ?number_of_46) where { wd:Q27593 p:P527 [ ps:P527 ?p527_8 ] . ?p527_8 p:P106 [ ps:P106 wd:Q177220 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Ac/dc] and has <occupation> [Singer]?",
        "Squall ID based": "how many thing is a <P527> of <Q27593> and has <P106> <Q177220>?"
    },
    {
        "Question": "How many countries in North America?",
        "ID": "981958a1",
        "Entities": "Q49:North America",
        "Mintaka Answer": "Q16:Canada,Q30:United States of America,Q96:Mexico",
        "Sparklis label based": "give me every [country] that has as a <continent> [North America]",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q49>",
        "Sparql label based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<continent> [ ps:<continent> wd:[North America] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P30 [ ps:P30 wd:Q49 ] . }",
        "Squall label based": "which [Country] has <continent> [North America]?",
        "Squall ID based": "which <Q6256> has <P30> <Q49>?"
    },
    {
        "Question": "In what year did the Seattle Seahawks sign Russell Wilson as quarterback?",
        "ID": "65b37fdb",
        "Entities": "Q1149781:Russell Wilson, Q221878:Seattle Seahawks",
        "Mintaka Answer": "2012",
        "Sparklis label based": "[Russell Wilson] has as an <occupation> [American football player] and has as a <position played on team speciality> [quarterback] and has as a <member of sports team> with a <start time> [Seattle Seahawks] and give me the year of the <start time>",
        "Sparklis ID based": "<Q1149781> has as an <P106> <Q19204627> and has as a <P413> <Q622747> and has as a <P54> with a <P580> <Q221878> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_89 WHERE { wd:[Russell Wilson] p:<member of sports team> [ n1:<start time> ?P580_4 ; ps:<member of sports team> wd:[Seattle Seahawks] ] . BIND (year(?P580_4) AS ?expr_89) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_89 WHERE { wd:Q1149781 p:P54 [ n1:P580 ?P580_4 ; ps:P54 wd:Q221878 ] . BIND (year(?P580_4) AS ?expr_89) }",
        "Squall label based": "what is the year of a thing at which <start time> [Russell Wilson] has <member of sports team> [Seattle Seahawks]?",
        "Squall ID based": "what is the year of a thing at which <P580> <Q1149781> has <P54> <Q221878>?"
    },
    {
        "Question": "How many UEFA Champions league has AC Milan won?",
        "ID": "7e763655",
        "Entities": "Q18756:UEFA Champions League, Q1543:A.C. Milan",
        "Mintaka Answer": "7",
        "Sparklis label based": "[A.C. Milan] has a <victory> that has as a <sports season of league or competition> [UEFA Champions League] and give me the number of <victory>",
        "Sparklis ID based": "<Q1543> has a <P2522> that has as a <P3450> <Q18756> and give me the number of <P2522>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P2522_8) AS ?number_of_46) WHERE { wd:[A.c. Milan] p:<victory> [ ps:<victory> ?P2522_8 ] . ?P2522_8 p:<sports season of league or competition> [ ps:<sports season of league or competition> wd:[Uefa Champions League] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P2522_8) AS ?number_of_46) WHERE { wd:Q1543 p:P2522 [ ps:P2522 ?P2522_8 ] . ?P2522_8 p:P3450 [ ps:P3450 wd:Q18756 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <victory> of [A.c. Milan] and has <sports season of league or competition> [Uefa Champions League]?",
        "Squall ID based": "how many thing is a <P2522> of <Q1543> and has <P3450> <Q18756>?"
    },
    {
        "Question": "How many Academy Awards did the movie Titanic win?",
        "ID": "059584aa",
        "Entities": "Q44578:Titanic,Q19020:Academy Awards",
        "Mintaka Answer": "Q393686:Academy Award for Best Visual Effects,Q830079:Academy Award for Best Sound,Q112243:Academy Award for Best Original Song,Q131520:Academy Award for Best Cinematography,Q488645:Academy Award for Best Sound Editing",
        "Sparklis label based": "[Titanic] <award received> something that is the <instance of> [Academy Awards]",
        "Sparklis ID based": "<Q25173> <P166> something that is the <P31> <Q19020>",
        "Sparql label based": "select distinct ?P31_159 where { wd:[Titanic 2] p:<award received> [ ps:<award received> ?P31_159 ] . ?P31_159 p:<instance of> [ ps:<instance of> wd:[Academy Awards] ] . }",
        "Sparql ID based": "select distinct ?P31_159 where { wd:Q44578 p:P166 [ ps:P166 ?P31_159 ] . ?P31_159 p:P31 [ ps:P31 wd:Q19020 ] . }",
        "Squall label based": "what is a <award received> of [Titanic 2] and has <instance of> [Academy Awards]?",
        "Squall ID based": "what is a <P166> of <Q44578> and has <P31> <Q19020>?"
    },
    {
        "Question": "Which Studio Ghibli movie scored the lowest on Rotten Tomatoes?",
        "ID": "8e4901d3",
        "Entities": "Q105584:Rotten Tomatoes, Q182950:Studio Ghibli",
        "Mintaka Answer": "Q96031360:Earwig and the Witch",
        "Sparklis label based": "[Studio Ghibli] is the <production company> of something that has the lowest-to-highest <review score> review <score by> [Rotten Tomatoes]",
        "Sparklis ID based": "<Q182950> is the <P272> of something that has the lowest-to-highest <P444> review <P447> <Q105584>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 ?P444_83 WHERE { ?thing_8 p:<production company> [ ps:<production company> wd:[Studio Ghibli] ] . ?thing_8 p:<review score> [ ps:<review score> ?P444_83 ; n1:<score by> wd:[Rotten Tomatoes] ] . } ORDER BY ASC(?P444_83) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 ?P444_83 WHERE { ?thing_8 p:P272 [ ps:P272 wd:Q182950 ] . ?thing_8 p:P444 [ ps:P444 ?P444_83 ; n1:P447 wd:Q105584 ] . } ORDER BY ASC(?P444_83) LIMIT 1",
        "Squall label based": "what has <production company> [Studio Ghibli] and has <review score> at <score by> [Rotten Tomatoes] the lowest thing?",
        "Squall ID based": "what has <P272> <Q182950> and has <P444> at <P447> <Q105584> the lowest thing?"
    },
    {
        "Question": "Is Tom Hanks older than Ron Howard?",
        "ID": "e1e5f8b8",
        "Entities": "Q2263:Tom Hanks, Q103646:Ron Howard",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "Tom Hanks has a <date of birth> and [Ron Howard] has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "Tom Hanks has a <P569> and <Q103646> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Tom Hanks] p:<date of birth> [ ps:<date of birth> ?age1 ] . wd:[Ron Howard] p:<date of birth> [ ps:<date of birth> ?age2 ] . FILTER (?age1 < ?age2) }",
        "Sparql ID based": "ASK { wd:Q2263 p:P569 [ ps:P569 ?age1 ] . wd:Q103646 p:P569 [ ps:P569 ?age2 ] . FILTER (?age1 < ?age2) }",
        "Squall label based": "whether [Tom Hanks] has a <date of birth> lesser than a <date of birth> of [Ron Howard]?",
        "Squall ID based": "whether <Q2263> has a <P569> lesser than a <P569> of <Q103646>?"
    },
    {
        "Question": "What Wheel of Time book has the least pages?",
        "ID": "0d4f9681",
        "Entities": "Q4470:The Wheel of Time",
        "Mintaka Answer": "Q568375:The Path of Daggers",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Wheel of Time] and that has the lowest-to-highest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q4470> and that has the lowest-to-highest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Wheel Of Time] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY ASC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q4470 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY ASC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Wheel Of Time] and has the lowest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q4470> and has the lowest <P1104>?"
    },
    {
        "Question": "What Mario Kart game has sold the most copies?",
        "ID": "466dc7a1",
        "Entities": "Q188196:Mario Kart",
        "Mintaka Answer": "Q838707:Mario Kart Wii",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mario Kart] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q188196> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Kart] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ; n1:<point in time> \"2021-03-31T00:00:00Z\" ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q188196 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ; n1:P585 \"2021-03-31T00:00:00Z\" ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Kart] and has <units sold> at <point in time> \"2021-03-31T00:00:00Z\" the highest thing?",
        "Squall ID based": "which <Q7889> has <P179> <Q188196> and has <P2664> at <P585> \"2021-03-31T00:00:00Z\" the highest thing?"
    },
    {
        "Question": "How many studio albums has Bruce Springsteen released?",
        "ID": "0f7acae7",
        "Entities": "Q1225:Bruce Springsteen",
        "Mintaka Answer": "Q1470381:Greetings from Asbury Park, N.J.,Q1463801:The Wild, the Innocent & the E Street Shuffle,Q752366:Born to Run,Q902146:Darkness on the Edge of Town,Q1340975:The River",
        "Sparklis label based": "[Bruce Springsteen] is the <performer> of an [album] and give me the number of [album]",
        "Sparklis ID based": "<Q1225> is the <P175> of an <Q482994> and give me the number of <Q482994>",
        "Sparql label based": "select distinct (count(distinct ?q482994_118) as ?number_of_749) where { ?q482994_118 wdt:<instance of> wd:[Album] . ?q482994_118 p:<performer> [ ps:<performer> wd:[Bruce Springsteen] ] . }",
        "Sparql ID based": "select distinct (count(distinct ?q482994_118) as ?number_of_749) where { ?q482994_118 wdt:P31 wd:Q482994 . ?q482994_118 p:P175 [ ps:P175 wd:Q1225 ] . }",
        "Squall label based": "how many [Album] has <performer> [Bruce Springsteen]?",
        "Squall ID based": "how many <Q482994> has <P175> <Q1225>?"
    },
    {
        "Question": "What is the best-selling handheld console of all time?",
        "ID": "16a22426",
        "Entities": "Q941818:handheld game console",
        "Mintaka Answer": "Q170323:Nintendo DS",
        "Sparklis label based": "give me every [electronic device model] that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q62008942> that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q62008942_9 WHERE { ?Q62008942_9 wdt:<instance of> wd:[Electronic Device Model] . ?Q62008942_9 p:<units sold> [ ps:<units sold> ?P2664_82 ] . } ORDER BY DESC(?P2664_82) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q62008942_9 WHERE { ?Q62008942_9 wdt:P31 wd:Q62008942 . ?Q62008942_9 p:P2664 [ ps:P2664 ?P2664_82 ] . } ORDER BY DESC(?P2664_82) LIMIT 1",
        "Squall label based": "which [Electronic Device Model] has the highest <units sold>?",
        "Squall ID based": "which <Q62008942> has the highest <P2664>?"
    },
    {
        "Question": "Which wife of King Henry VIII did not survive childbirth?",
        "ID": "9a23739d",
        "Entities": "Q38370:Henry VIII of England",
        "Mintaka Answer": "Q182637:Jane Seymour",
        "Sparklis label based": "[Henry VIII of England] has a <spouse> that has as a <cause of death> death [puerperal infection]",
        "Sparklis ID based": "<Q38370> has a <P26> that has as a <P509> death <Q1419347>",
        "Sparql label based": "SELECT DISTINCT ?P26_8 WHERE { wd:[Henry Viii Of England] p:<spouse> [ ps:<spouse> ?P26_8 ] . ?P26_8 p:<cause of death> [ ps:<cause of death> wd:[Puerperal Infection] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P26_8 WHERE { wd:Q38370 p:P26 [ ps:P26 ?P26_8 ] . ?P26_8 p:P509 [ ps:P509 wd:Q1419347 ] . } LIMIT 1",
        "Squall label based": "what is a <spouse> of [Henry Viii Of England] and has <cause of death> [Puerperal Infection]?",
        "Squall ID based": "what is a <P26> of <Q38370> and has <P509> <Q1419347>?"
    },
    {
        "Question": "What is Kylie Jenner's daughter's name?",
        "ID": "10296f3c",
        "Entities": "Q1770624:Kylie Jenner",
        "Mintaka Answer": "Q59534229:Stormi Webster",
        "Sparklis label based": "give me every [human] that has as a mother [Kylie Jenner] and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a mother <Q1770624> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<mother> [ ps:<mother> wd:[Kylie Jenner] ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P25 [ ps:P25 wd:Q1770624 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . }",
        "Squall label based": "which [Human] has <mother> [Kylie Jenner] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P25> <Q1770624> and has <P21> <Q6581072>?"
    },
    {
        "Question": "How many Pulitzer Prizes has Colson Whitehead won?",
        "ID": "9508d042",
        "Entities": "Q509662: Colson Whitehead, Q46525: Pulitzer Prize",
        "Mintaka Answer": "Q27957817: The Underground Railroad, Q85808003: The Nickel Boys",
        "Sparklis label based": "[Colson Whitehead] <award received> with a <for work> something that is the <part of> [Pulitzer Prize] and give me the number of <for work>",
        "Sparklis ID based": "<Q509662> <P166> with a <P1686> something that is the <P361> <Q46525> and give me the number of <P1686>",
        "Sparql label based": "SELECT DISTINCT ?P1686_12 WHERE { wd:[Colson Whitehead] p:<award received> [ n1:<for work> ?P1686_12 ; ps:<award received> ?P361_8 ] . ?P361_8 p:<part of> [ ps:<part of> wd:[Pulitzer Prize] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_12 WHERE { wd:Q509662 p:P166 [ n1:P1686 ?P1686_12 ; ps:P166 ?P361_8 ] . ?P361_8 p:P361 [ ps:P361 wd:Q46525 ] . }",
        "Squall label based": "at which <for work> [Colson Whitehead] has a <award received> that has <part of> [Pulitzer Prize]?",
        "Squall ID based": "at which <P1686> <Q509662> has a <P166> that has <P361> <Q46525>?"
    },
    {
        "Question": "What is the second Avengers movie in the series?",
        "ID": "fafc0acd",
        "Entities": "Q20021634:Avengers,2:None",
        "Mintaka Answer": "Q14171368:Avengers: Age of Ultron",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 2 [Avengers 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 2 <Q20021634>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[Avengers 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q20021634 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"2\" [Avengers 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"2\" <Q20021634>?"
    },
    {
        "Question": "Which Halloween movie did Jamie Lee Curtis not appear in?",
        "ID": "5a127d08",
        "Entities": "Q106997:Jamie Lee Curtis",
        "Mintaka Answer": "Q959853:Halloween 4: The Return of Michael Myers",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Halloween 3] and that not has as a <cast member> [Jamie Lee Curtis]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1364022> and that not has as a <P161> <Q106997>",
        "Sparql label based": "select distinct ?q11424_311 where { ?q11424_311 wdt:<instance of> wd:[Film] . ?q11424_311 p:<part of the series> [ ps:<part of the series> wd:[Halloween 3] ] . filter ( not exists { ?q11424_311 p:<cast member> [ ps:<cast member> wd:[Jamie Lee Curtis] ] . } ) }",
        "Sparql ID based": "select distinct ?q11424_311 where { ?q11424_311 wdt:P31 wd:Q11424 . ?q11424_311 p:P179 [ ps:P179 wd:Q1364022 ] . filter ( not exists { ?q11424_311 p:P161 [ ps:P161 wd:Q106997 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Halloween 3] and has not <cast member> [Jamie Lee Curtis]?",
        "Squall ID based": "which <Q11424> has <P179> <Q1364022> and has not <P161> <Q106997>?"
    },
    {
        "Question": "What was the first Far Cry not developed by Ubisoft?",
        "ID": "b01da186",
        "Entities": "Q337865:Far Cry, Q188273:Ubisoft",
        "Mintaka Answer": "Q337865:Far Cry",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Far Cry] and that not has as a <developer> [Ubisoft Montreal]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q2667817> and that not has as a <P178> <Q903621>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Far Cry] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<publisher> [ ps:<publisher> wd:[Ubisoft] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q2667817 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P123 [ ps:P123 wd:Q188273 ] . } ) } LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Far Cry] and has not <publisher> [Ubisoft]?",
        "Squall ID based": "which <Q7889> has <P179> <Q2667817> and has not <P123> <Q188273>?"
    },
    {
        "Question": "Did Avatar come out before the year 2000?",
        "ID": "28c04abb",
        "Entities": "Q24871:Avatar,2000:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Avatar] has a <publication date> and where the year of the <publication date> < 2000",
        "Sparklis ID based": "<Q24871> has a <P577> and where the year of the <P577> < 2000",
        "Sparql label based": "ASK { wd:[Avatar] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q24871 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"2000\"^^xsd:integer) ) }",
        "Squall label based": "whether [Avatar] has a <publication date> whose year is lesser than 2000?",
        "Squall ID based": "whether <Q24871> has a <P577> whose year is lesser than 2000?"
    },
    {
        "Question": "Which movie was directed by Christopher Nolan and starred Robert Pattinson?",
        "ID": "5b004c40",
        "Entities": "Q36767:Robert Pattinson,Q25191:Christopher Nolan",
        "Mintaka Answer": "Q63985561:Tenet",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that has as a <cast member> [Robert Pattinson]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that has as a <P161> <Q36767>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Robert Pattinson] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q36767 ] . }",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has <cast member> [Robert Pattinson]?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has <P161> <Q36767>?"
    },
    {
        "Question": "How many movies has Tom Cruise been in and been nominated for an Academy Award?",
        "ID": "06c03c4f",
        "Entities": "Q19020:Academy Awards,Q37079:Tom Cruise",
        "Mintaka Answer": "Q471159:Born on the Fourth of July,Q329131:Jerry Maguire,Q588420:Magnolia",
        "Sparklis label based": "[Tom Cruise] is the <cast member> of a [film] that is <nominated for> an [Academy Awards] that is an [award for best leading actor] and give me the number of [film]",
        "Sparklis ID based": "<Q37079> is the <P161> of a <Q11424> that is <P1411> an <Q19020> that is an <Q96474691> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_88) WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Tom Cruise] ] . ?Q19020_47 wdt:<instance of> wd:[Academy Awards] . ?Q11424_8 p:<nominated for> [ ps:<nominated for> ?Q19020_47 ] . ?Q19020_47 wdt:<instance of> wd:[Award For Best Leading Actor] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_88) WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P161 [ ps:P161 wd:Q37079 ] . ?Q19020_47 wdt:P31 wd:Q19020 . ?Q11424_8 p:P1411 [ ps:P1411 ?Q19020_47 ] . ?Q19020_47 wdt:P31 wd:Q96474691 . }",
        "Squall label based": "how many [Film] has <cast member> [Tom Cruise] and has <nominated for> a [Academy Awards] that is a [Award For Best Leading Actor]?",
        "Squall ID based": "how many <Q11424> has <P161> <Q37079> and has <P1411> a <Q19020> that is a <Q96474691>?"
    },
    {
        "Question": "Which actor played James Bond and was from Ireland?",
        "ID": "1cbe8494",
        "Entities": "Q2009573:James Bond,Q27:Ireland",
        "Mintaka Answer": "Q81520:Pierce Brosnan",
        "Sparklis label based": "give me every [human] that is the <cast member> of list of [James Bond films] and that has as a <country of citizenship> Republic of [Ireland]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of list of <Q151472> and that has as a <P27> Republic of <Q22890>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[James Bond Films] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Ireland 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q151472 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q27 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [James Bond Films] and has <country of citizenship> [Ireland 2]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q151472> and has <P27> <Q27>?"
    },
    {
        "Question": "When did Mariah Carey win her first Grammy?",
        "ID": "3bc40afc",
        "Entities": "Q41254:Grammy Award, Q41076:Mariah Carey",
        "Mintaka Answer": "1991",
        "Sparklis label based": "[Mariah Carey 2] <award received> with a <point in time> something that is the <instance of> [Grammy Awards] and give me lowest-to-highest the year of the <point in time>",
        "Sparklis ID based": "<Q41076> <P166> with a <P585> something that is the <P31> <Q41254> and give me lowest-to-highest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?P585_12 WHERE { wd:[Mariah Carey 2] p:<award received> [ n1:<point in time> ?P585_12 ; ps:<award received> ?P31_8 ] . ?P31_8 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] .} LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P585_12 WHERE { wd:Q41076 p:P166 [ n1:P585 ?P585_12 ; ps:P166 ?P31_8 ] . ?P31_8 p:P31 [ ps:P31 wd:Q41254 ] .} LIMIT 1",
        "Squall label based": "at which <point in time> [Mariah Carey 2] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "at which <P585> <Q41076> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "How many Super Bowl wins does Tom Brady have?",
        "ID": "ff1ea042",
        "Entities": "Q32096:Super Bowl, Q313381:Tom Brady",
        "Mintaka Answer": "6",
        "Sparklis label based": "[Tom Brady] has a <member of sports team> that is the <winner> of something that is the <instance of> [Super Bowl] and give me the number of instance",
        "Sparklis ID based": "<Q313381> has a <P54> that is the <P1346> of something that is the <P31> <Q32096> and give me the number of instance",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_46) AS ?number_of_84) WHERE { wd:[Tom Brady] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P31_46 p:<winner> [ ps:<winner> ?P54_8 ] . ?P31_46 p:<instance of> [ ps:<instance of> wd:[Super Bowl] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_46) AS ?number_of_84) WHERE { wd:Q313381 p:P54 [ ps:P54 ?P54_8 ] . ?P31_46 p:P1346 [ ps:P1346 ?P54_8 ] . ?P31_46 p:P31 [ ps:P31 wd:Q32096 ] . } LIMIT 1",
        "Squall label based": "how many thing has <winner> a <member of sports team> of [Tom Brady] and has <instance of> [Super Bowl]?",
        "Squall ID based": "how many thing has <P1346> a <P54> of <Q313381> and has <P31> <Q32096>?"
    },
    {
        "Question": "Which actress from Germany was in the movie Troy?",
        "ID": "60d0d2bf",
        "Entities": "Q183:Germany,Q186587:Troy",
        "Mintaka Answer": "Q57118:Diane Kruger",
        "Sparklis label based": "give me every [human] that has as a <country of citizenship> [Germany] and that is the <cast member> of [Troy]",
        "Sparklis ID based": "give me every <Q5> that has as a <P27> <Q183> and that is the <P161> of <Q186587>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Germany] ] . wd:[Troy] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P27 [ ps:P27 wd:Q183 ] . wd:Q186587 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] has <country of citizenship> [Germany] and is a <cast member> of [Troy]?",
        "Squall ID based": "which <Q5> has <P27> <Q183> and is a <P161> of <Q186587>?"
    },
    {
        "Question": "What is the second book in the Twilight series?",
        "ID": "d55c9de0",
        "Entities": "Q44523:Twilight,2:None",
        "Mintaka Answer": "Q191540:New Moon",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Twilight 3] with <series ordinal> 2",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q44523> with <P1545> 2",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Twilight 3] ; n1:<series ordinal> \"2\" ] . }",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ ps:P179 wd:Q44523 ; n1:P1545 \"2\" ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"2\" [Twilight 3]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"2\" <Q44523>?"
    },
    {
        "Question": "Which member of ZZ Top is no longer alive?",
        "ID": "1ee4aa1e",
        "Entities": "Q136591:ZZ Top",
        "Mintaka Answer": "Q553413:Dusty Hill",
        "Sparklis label based": "[ZZ Top] <has part(s)> with an <end time>",
        "Sparklis ID based": "<Q136591> <P527> with an <P582>",
        "Sparql label based": "select distinct ?p527_8 ?p582_174 where { wd:[Zz Top] p:<has part(s)> [ ps:<has part(s)> ?p527_8 ; n1:<end time> ?p582_174 ] . }",
        "Sparql ID based": "select distinct ?p527_8 ?p582_174 where { wd:Q136591 p:P527 [ ps:P527 ?p527_8 ; n1:P582 ?p582_174 ] . }",
        "Squall label based": "what is a <has part(s)> at a <end time> of [Zz Top]?",
        "Squall ID based": "what is a <P527> at a <P582> of <Q136591>?"
    },
    {
        "Question": "Which Chronicles of Narnia book does not have Edmund Pevensie in it?",
        "ID": "76e8e7a7",
        "Entities": "Q483412:The Chronicles of Narnia, Q582234:Edmund Pevensie",
        "Mintaka Answer": "Q331669:The Silver Chair, Q477831:The Magician's Nephew",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Chronicles of Narnia] and that not has as a <characters> [Edmund Pevensie]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q483412> and that not has as a <P674> <Q582234>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Chronicles Of Narnia] ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:<characters> [ ps:<characters> wd:[Edmund Pevensie] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q483412 ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:P674 [ ps:P674 wd:Q582234 ] . } ) } LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Chronicles Of Narnia] and has not <characters> [Edmund Pevensie]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q483412> and has not <P674> <Q582234>?"
    },
    {
        "Question": "How many capital cities have populations over 10 million?",
        "ID": "a4c8b2f1",
        "Entities": "Q5119:capital",
        "Mintaka Answer": "Q956:Beijing,Q1490:Tokyo,Q3838:Kinshasa,Q649:Moscow,Q3630:Jakarta",
        "Sparklis label based": "give me every [capital] city that has a <population> higher or equal to 10000000",
        "Sparklis ID based": "give me every <Q5119> city that has a <P1082> higher or equal to 10000000",
        "Sparql label based": "SELECT DISTINCT ?Q5119_1 WHERE { ?Q5119_1 wdt:<instance of> wd:[Capital] . ?Q5119_1 p:<population> [ ps:<population> ?P1082_112 ] . FILTER ( xsd:double(str(?P1082_112)) >= 10000000 ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5119_1 WHERE { ?Q5119_1 wdt:P31 wd:Q5119 . ?Q5119_1 p:P1082 [ ps:P1082 ?P1082_112 ] . FILTER ( xsd:double(str(?P1082_112)) >= 10000000 ) }",
        "Squall label based": "which [Capital] has a <population> greater or equal to 10000000?",
        "Squall ID based": "which <Q5119> has a <P1082> greater or equal to 10000000?"
    },
    {
        "Question": "Which Smash Bros game did Princess Peach not appear in?",
        "ID": "9c91d85a",
        "Entities": "Q507001:Princess Peach, Q2778220:Super Smash Bros.",
        "Mintaka Answer": "Q870981:Super Smash Bros.",
        "Sparklis label based": "give me every [video game] that not has as a <characters> [Princess Peach] and that has as a <part of the series> [Super Smash Bros. 2]",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P674> <Q507001> and that has as a <P179> <Q2778220>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Super Smash Bros. 2] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Princess Peach] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q2778220 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q507001 ] . } ) } LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Super Smash Bros. 2] and has not <characters> [Princess Peach]?",
        "Squall ID based": "which <Q7889> has <P179> <Q2778220> and has not <P674> <Q507001>?"
    },
    {
        "Question": "Who was the 30th president?",
        "ID": "830aba0b",
        "Entities": "Q11696:President of the United States,30:None",
        "Mintaka Answer": "Q36023:Calvin Coolidge",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 30 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 30 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"30\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"30\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"30\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"30\" <Q11696>?"
    },
    {
        "Question": "Which Assassin's Creed games do not appear on Playstation devices?",
        "ID": "000583c8",
        "Entities": "Q420292:Assassin's Creed, Q10677:PlayStation",
        "Mintaka Answer": "Q1992159:Assassin's Creed: Alta\u00efr's Chronicles, Q2075360:Assassin's Creed II: Discovery, Q16382628:Assassin's Creed: Pirates, Q18711530:Assassin's Creed Identity, Q61098860:Assassin's Creed: Rebellion",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Assassin's Creed] and that has a <platform> that not is the <part(s)> of [PlayStation]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q200864> and that has a <P400> that not is the <part(s)> of <Q10677>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Assassin's Creed 2] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<platform> [ ps:<platform> wd:[Playstation] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q420292 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P400 [ ps:P400 wd:Q10677 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Assassin's Creed 2] and has not <platform> [Playstation]?",
        "Squall ID based": "which <Q7889> has <P179> <Q420292> and has not <P400> <Q10677>?"
    },
    {
        "Question": "When did Eminem win his last Grammy?",
        "ID": "c1f6beda",
        "Entities": "Q41254:Grammy Award, Q5608:Eminem",
        "Mintaka Answer": "2015",
        "Sparklis label based": "[Eminem] <award received> with a <point in time> something that is the <instance of> [Grammy Award] and give me highest-to-lowest the year of the <point in time>",
        "Sparklis ID based": "<Q5608> <P166> with a <P585> something that is the <P31> <Q41254> and give me highest-to-lowest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?P585_12 WHERE { wd:[Eminem] p:<award received> [ n1:<point in time> ?P585_12 ; ps:<award received> ?P31_8 ] . ?P31_8 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] .} ORDER BY DESC(?P585_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P585_12 WHERE { wd:Q5608 p:P166 [ n1:P585 ?P585_12 ; ps:P166 ?P31_8 ] . ?P31_8 p:P31 [ ps:P31 wd:Q41254 ] .} ORDER BY DESC(?P585_12) LIMIT 1",
        "Squall label based": "what is the highest thing at which <point in time> [Eminem] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the highest thing at which <P585> <Q5608> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "Did Toxic by Britney Spears come out before 2004?",
        "ID": "423f7460",
        "Entities": "Q379751:Toxic,Q11975:Britney Spears,2004:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Toxic] has a <publication date> and where the year of the <publication date> < 2004",
        "Sparklis ID based": "<Q379751> has a <P577> and where the year of the <P577> < 2004",
        "Sparql label based": "ASK { wd:[Toxic] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER (year(?P577_8) < 2004) }",
        "Sparql ID based": "ASK { wd:Q379751 p:P577 [ ps:P577 ?P577_8 ] . FILTER (year(?P577_8) < 2004) }",
        "Squall label based": "whether [Toxic] has a <publication date> whose year is lesser than 2004?",
        "Squall ID based": "whether <Q379751> has a <P577> whose year is lesser than 2004?"
    },
    {
        "Question": "What is the name of the hero in The Legend of Zelda series?",
        "ID": "4bb50a1f",
        "Entities": "Q12393:The Legend of Zelda",
        "Mintaka Answer": "Q568553:Link",
        "Sparklis label based": "[The Legend of Zelda] has a <characters> that has as a <narrative role> [protagonist]",
        "Sparklis ID based": "<Q12393> has a <P674> that has as a <P5800> <Q215972>",
        "Sparql label based": "SELECT DISTINCT ?P674_18 WHERE { wd:[The Legend Of Zelda] p:<characters> [ ps:<characters> ?P674_18 ] . ?P674_18 p:<narrative role> [ ps:<narrative role> wd:[Protagonist] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P674_18 WHERE { wd:Q12393 p:P674 [ ps:P674 ?P674_18 ] . ?P674_18 p:P5800 [ ps:P5800 wd:Q215972 ] . }",
        "Squall label based": "what is a <characters> of [The Legend Of Zelda] and has <narrative role> [Protagonist]?",
        "Squall ID based": "what is a <P674> of <Q12393> and has <P5800> <Q215972>?"
    },
    {
        "Question": "Which Mario Kart game did Donkey Kong not appear in?",
        "ID": "8d5cc350",
        "Entities": "Q12389:Donkey Kong, Q188196:Mario Kart",
        "Mintaka Answer": "Q1061560:Super Mario Kart",
        "Sparklis label based": "give me every [video game] that not has as a <characters> [Donkey Kong 3] and that has as a <part of the series> [Mario Kart]",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P674> <Q12389> and that has as a <P179> <Q188196>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Kart] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Donkey Kong 3] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q188196 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q12389 ] . } ) } LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Kart] and has not <characters> [Donkey Kong 3]?",
        "Squall ID based": "which <Q7889> has <P179> <Q188196> and has not <P674> <Q12389>?"
    },
    {
        "Question": "What is the highest mountain in Texas?",
        "ID": "f367adc0",
        "Entities": "Q1439:Texas",
        "Mintaka Answer": "Q32793:Guadalupe Peak",
        "Sparklis label based": "give me every [mountain] that has as a <located in the administrative territorial entity> [Texas] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has as a <P131> <Q1439> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 ?P2044_5 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Texas] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_5 ] . } ORDER BY DESC(?P2044_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 ?P2044_5 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P131 [ ps:P131 wd:Q1439 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_5 ] . } ORDER BY DESC(?P2044_5) LIMIT 1",
        "Squall label based": "which [Mountain] has <located in the administrative territorial entity> [Texas] and has the highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has <P131> <Q1439> and has the highest <P2044>?"
    },
    {
        "Question": "Who was California governor and was also a movie actor?",
        "ID": "ea410fb1",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q2685:Arnold Schwarzenegger",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of California] that has as an <applies to jurisdiction> [California] and that has as an <occupation> [actor]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q887010> that has as an <P1001> <Q99> and that has as an <P106> <Q33999>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of California] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q887010 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q33999 ] . } LIMIT 1",
        "Squall label based": "which [Human] has <position held> [Governor Of California] and has <occupation> [Actor]?",
        "Squall ID based": "which <Q5> has <P39> <Q887010> and has <P106> <Q33999>?"
    },
    {
        "Question": "Which movie was directed by Martin Scorsese and featured Ray Liotta?",
        "ID": "3781077f",
        "Entities": "Q211280:Ray Liotta,Q41148:Martin Scorsese",
        "Mintaka Answer": "Q42047:Goodfellas",
        "Sparklis label based": "give me every [film] that has as a cast member [Ray Liotta] and that has as a <director> [Martin Scorsese]",
        "Sparklis ID based": "give me every <Q11424> that has as a cast member <Q211280> and that has as a <P57> <Q41148>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Ray Liotta] ] . ?q11424_1 p:<director> [ ps:<director> wd:[Martin Scorsese] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P161 [ ps:P161 wd:Q211280 ] . ?q11424_1 p:P57 [ ps:P57 wd:Q41148 ] . }",
        "Squall label based": "which [Film] has <cast member> [Ray Liotta] and has <director> [Martin Scorsese]?",
        "Squall ID based": "which <Q11424> has <P161> <Q211280> and has <P57> <Q41148>?"
    },
    {
        "Question": "How many Star Trek movies have Chris Pine in them?",
        "ID": "3aab03ad",
        "Entities": "Q1092:Star Trek,Q23466:Chris Pine",
        "Mintaka Answer": "Q213081:Star Trek,Q171711:Star Trek Into Darkness,Q20023116:Star Trek Beyond",
        "Sparklis label based": "[Chris Pine] is the <cast member> of a [film] that is a [Star Trek film] and give me the number of [film]",
        "Sparklis ID based": "<Q23466> is the <P161> of a <Q11424> that is a <Q61283808> and give me the number of <Q11424>",
        "Sparql label based": "select distinct (count(distinct ?q11424_8) as ?number_of_47) where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<cast member> [ ps:<cast member> wd:[Chris Pine] ] . ?q11424_8 wdt:<instance of> wd:[Star Trek Film] . }",
        "Sparql ID based": "select distinct (count(distinct ?q11424_8) as ?number_of_47) where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P161 [ ps:P161 wd:Q23466 ] . ?q11424_8 wdt:P31 wd:Q61283808 . }",
        "Squall label based": "how many [Film] has <cast member> [Chris Pine] and is a [Star Trek Film]?",
        "Squall ID based": "how many <Q11424> has <P161> <Q23466> and is a <Q61283808>?"
    },
    {
        "Question": "How many Hobbit movies are there directed by Peter Jackson?",
        "ID": "38c2f2d2",
        "Entities": "Q74331:The Hobbit trilogy,Q4465:Peter Jackson",
        "Mintaka Answer": "Q80379:The Hobbit: An Unexpected Journey,Q719915:The Hobbit: The Desolation of Smaug,Q919649:The Hobbit: The Battle of the Five Armies",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Hobbit trilogy] and that has as a <director> [Peter Jackson] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q74331> and that has as a <P57> <Q4465> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[The Hobbit Trilogy] ] . ?Q11424_8 p:<director> [ ps:<director> wd:[Peter Jackson] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q74331 ] . ?Q11424_8 p:P57 [ ps:P57 wd:Q4465 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [The Hobbit Trilogy] and has <director> [Peter Jackson]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q74331> and has <P57> <Q4465>?"
    },
    {
        "Question": "Which movie starred both Chris Farley and Matthew Perry?",
        "ID": "4d6a5b65",
        "Entities": "Q311752:Chris Farley,Q171758:Matthew Perry",
        "Mintaka Answer": "Q1397677:Almost Heroes",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Chris Farley] and [Matthew Perry]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q311752> and <Q171758>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Chris Farley] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Matthew Perry] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q311752 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q171758 ] . }",
        "Squall label based": "which [Film] has <cast member> [Chris Farley] and [Matthew Perry]?",
        "Squall ID based": "which <Q11424> has <P161> <Q311752> and <Q171758>?"
    },
    {
        "Question": "What was the last movie in the Dirty Harry franchise?",
        "ID": "03f9b7f6",
        "Entities": "Q110206:Dirty Harry",
        "Mintaka Answer": "Q263460:The Dead Pool",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 5 [Dirty Harry]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 5 <Q2712648>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"5\" ; ps:<part of the series> wd:[Dirty Harry] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"5\" ; ps:P179 wd:Q2712648 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"5\" [Dirty Harry]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"5\" <Q2712648>?"
    },
    {
        "Question": "Which actor was in The Call of the Wild and Star Wars movies?",
        "ID": "70cc549b",
        "Entities": "Q462:Star Wars,Q57982258:The Call of the Wild",
        "Mintaka Answer": "Q81328:Harrison Ford",
        "Sparklis label based": "give me every [human] that is the <cast member> of [The Call of the Wild] and of [Star Wars: Episode IV \u2013 A New Hope]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q57982258> and of <Q17738>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[The Call Of The Wild] p:<cast member> [ ps:<cast member> ?q5_1 ] . wd:[Star Wars: Episode Iv \u2013 A New Hope] p:<cast member> [ ps:<cast member> ?q5_1 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q57982258 p:P161 [ ps:P161 ?q5_1 ] . wd:Q17738 p:P161 [ ps:P161 ?q5_1 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [The Call Of The Wild] and [Star Wars: Episode Iv \u2013 A New Hope]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q57982258> and <Q17738>?"
    },
    {
        "Question": "What was Christopher Walken's first movie?",
        "ID": "e44b59e0",
        "Entities": "Q185051:Christopher Walken,1:None",
        "Mintaka Answer": "Q1192193:The Anderson Tapes",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Christopher Walken] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q185051> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Christopher Walken] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P161 [ ps:P161 wd:Q185051 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Squall label based": "which [Film] has <cast member> [Christopher Walken] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P161> <Q185051> and has the lowest <P577>?"
    },
    {
        "Question": "Which Nintendo game has sold the most copies?",
        "ID": "1c833264",
        "Entities": "Q8093:Nintendo",
        "Mintaka Answer": "Q71936:Wii Sports",
        "Sparklis label based": "give me every [video game] that has as a publisher [Nintendo] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a publisher <Q8093> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<publisher> [ ps:<publisher> wd:[Nintendo] ] . ?Q7889_8 p:<units sold> [ ps:<units sold> ?P2664_12 ] . } ORDER BY DESC(?P2664_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_8 WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P123 [ ps:P123 wd:Q8093 ] . ?Q7889_8 p:P2664 [ ps:P2664 ?P2664_12 ] . } ORDER BY DESC(?P2664_12) LIMIT 1",
        "Squall label based": "which [Video Game] has <publisher> [Nintendo] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P123> <Q8093> and has the highest <P2664>?"
    },
    {
        "Question": "Is Mount Rainier taller than Pike's Peak?",
        "ID": "b06c61b0",
        "Entities": "Q194057:Mount Rainier, Q665321:Pikes Peak",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Mount Rainier] has an <elevation above sea level> and [Pikes Peak] has an <elevation above sea level> and give me the total 1st <elevation above sea level> and give me the total 2nd <elevation above sea level> and where the total 2nd <elevation above sea level> < the total 1st <elevation above sea level>",
        "Sparklis ID based": "<Q754601> has an <P2044> and <Q665321> has an <P2044> and give me the total 1st <P2044> and give me the total 2nd <P2044> and where the total 2nd <P2044> < the total 1st <P2044>",
        "Sparql label based": "ASK { wd:[Mount Rainier 2] p:<elevation above sea level> [ ps:<elevation above sea level> ?height1 ] . wd:[Pikes Peak] p:<elevation above sea level> [ ps:<elevation above sea level> ?height2 ] . FILTER (?height1 > ?height2) }",
        "Sparql ID based": "ASK { wd:Q194057 p:P2044 [ ps:P2044 ?height1 ] . wd:Q665321 p:P2044 [ ps:P2044 ?height2 ] . FILTER (?height1 > ?height2) }",
        "Squall label based": "whether [Mount Rainier 2] has a <elevation above sea level> greater than a <elevation above sea level> of [Pikes Peak]?",
        "Squall ID based": "whether <Q194057> has a <P2044> greater than a <P2044> of <Q665321>?"
    },
    {
        "Question": "How many Kill Bill movies are there?",
        "ID": "cc2111ac",
        "Entities": "Q165325:Kill Bill Volume 1",
        "Mintaka Answer": "Q165325:Kill Bill Volume 1,Q928019:Kill Bill Volume 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Kill Bill: The Whole Bloody Affair] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q223132> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_46) AS ?number_of_83) WHERE { ?Q11424_46 wdt:<instance of> wd:[Film] . ?Q11424_46 p:<part of the series> [ ps:<part of the series> wd:[Kill Bill: The Whole Bloody Affair] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_46) AS ?number_of_83) WHERE { ?Q11424_46 wdt:P31 wd:Q11424 . ?Q11424_46 p:P179 [ ps:P179 wd:Q223132 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Kill Bill: The Whole Bloody Affair]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q223132>?"
    },
    {
        "Question": "How many Grammy Awards did Eric Clapton win in 2006?",
        "ID": "1d3f0c6b",
        "Entities": "Q41254:Grammy Award, Q48187:Eric Clapton",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Eric Clapton] <award received> a [Grammy Awards] with a <point in time> and where the year of the <point in time> = 2006 and give me the number of [Grammy Awards]",
        "Sparklis ID based": "<Q48187> <P166> a <Q41254> with a <P585> and where the year of the <P585> = 2006 and give me the number of <Q41254>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_171) WHERE { ?Q41254_8 wdt:<instance of> wd:[Grammy Awards] . wd:[Eric Clapton] p:<award received> [ ps:<award received> ?Q41254_8 ; n1:<point in time> ?P585_46 ] . FILTER ( (year(?P585_46) = \"2006\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_171) WHERE { ?Q41254_8 wdt:P31 wd:Q41254 . wd:Q48187 p:P166 [ ps:P166 ?Q41254_8 ; n1:P585 ?P585_46 ] . FILTER ( (year(?P585_46) = \"2006\"^^xsd:integer) ) }",
        "Squall label based": "how many [Grammy Awards] is a <award received> at a <point in time> whose year is 2006 of [Eric Clapton]?",
        "Squall ID based": "how many <Q41254> is a <P166> at a <P585> whose year is 2006 of <Q48187>?"
    },
    {
        "Question": "When did Brad Pitt win his first Oscar for acting?",
        "ID": "262d4104",
        "Entities": "Q35332:Brad Pitt,Q19020:Academy Awards,1:None",
        "Mintaka Answer": "2014",
        "Sparklis label based": "[Brad Pitt] <award received> with a <point in time> [Academy Award for Best Supporting Actor] and give me the year of the <point in time>",
        "Sparklis ID based": "<Q35332> <P166> with a <P585> <Q106291> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_132 WHERE { ?Q19020_8 wdt:<instance of> wd:[Academy Awards] . wd:[Brad Pitt] p:<award received> [ ps:<award received> ?Q19020_8 ; n1:<point in time> ?P585_47 ] . BIND (year(?P585_47) AS ?expr_132) } ORDER BY ASC(?expr_132) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_132 WHERE { ?Q19020_8 wdt:P31 wd:Q19020 . wd:Q35332 p:P166 [ ps:P166 ?Q19020_8 ; n1:P585 ?P585_47 ] . BIND (year(?P585_47) AS ?expr_132) } ORDER BY ASC(?expr_132) LIMIT 1",
        "Squall label based": "what is the lowest year of a thing at which <point in time> [Brad Pitt] has <award received> a [Academy Awards]?",
        "Squall ID based": "what is the lowest year of a thing at which <P585> <Q35332> has <P166> a <Q19020>?"
    },
    {
        "Question": "Which MCU movie comes first chronologically?",
        "ID": "3a2de53a",
        "Entities": "Q642878:Marvel Cinematic Universe,1:None",
        "Mintaka Answer": "Q275120:Captain America: The First Avenger",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 1 [Marvel Cinematic Universe]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 1 <Q642878>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_113 WHERE { ?Q11424_113 wdt:<instance of> wd:[Film] . ?Q11424_113 p:<part of the series> [ n1:<series ordinal> \"1\" ; ps:<part of the series> wd:[Marvel Cinematic Universe] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_113 WHERE { ?Q11424_113 wdt:P31 wd:Q11424 . ?Q11424_113 p:P179 [ n1:P1545 \"1\" ; ps:P179 wd:Q642878 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"1\" [Marvel Cinematic Universe]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"1\" <Q642878>?"
    },
    {
        "Question": "Who was president first, Ronald Reagan or George H.W. Bush?",
        "ID": "3505c333",
        "Entities": "Q11696:President of the United States, Q9960:Ronald Reagan, Q23505:George H. W. Bush",
        "Mintaka Answer": "Q9960:Ronald Reagan",
        "Sparklis label based": "give me every [human] that has as a <position held> with the lowest-to-highest <start time>  [President of the United States]  and that is [Ronald Reagan] or that is [George H. W. Bush]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q11696> and that is <Q9960> or that is <Q23505>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { VALUES ?Q5_1 { wd:[Ronald Reagan] wd:[George H. W. Bush] } ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<start time> ?P580_5 ; ps:<position held> wd:[President Of The United States] ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { VALUES ?Q5_1 { wd:Q9960 wd:Q23505 } ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P580 ?P580_5 ; ps:P39 wd:Q11696 ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Squall label based": "which [Human] is [Ronald Reagan] or [George H. W. Bush] and has <position held> at the lowest <start time> [President Of The United States]?",
        "Squall ID based": "which <Q5> is <Q9960> or <Q23505> and has <P39> at the lowest <P580> <Q11696>?"
    },
    {
        "Question": "Who wrote Journey to the Center of the Earth?",
        "ID": "be5ec9d0",
        "Entities": "Q219457:A Journey to the Center of the Earth",
        "Mintaka Answer": "Q33977:Jules Verne",
        "Sparklis label based": "[A Journey to the Center of the Earth] has an <author>",
        "Sparklis ID based": "<Q219457> has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_8 WHERE { wd:[A Journey To The Center Of The Earth] p:<author> [ ps:<author> ?P50_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P50_8 WHERE { wd:Q219457 p:P50 [ ps:P50 ?P50_8 ] . }",
        "Squall label based": "what is a <author> of [A Journey To The Center Of The Earth]?",
        "Squall ID based": "what is a <P50> of <Q219457>?"
    },
    {
        "Question": "When was the first Matrix movie released?",
        "ID": "223c9000",
        "Entities": "Q83495:The Matrix,1:None",
        "Mintaka Answer": "1999",
        "Sparklis label based": "give me every [film] that has as a <media franchise> [The Matrix] and that has the lowest-to-highest <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P8345> <Q13014087> and that has the lowest-to-highest <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_197 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<media franchise> [ ps:<media franchise> wd:[The Matrix] ] . ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_110 ] . BIND (year(?P577_110) AS ?expr_197) } ORDER BY ASC(?P577_110) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_197 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P8345 [ ps:P8345 wd:Q13014087 ] . ?Q11424_8 p:P577 [ ps:P577 ?P577_110 ] . BIND (year(?P577_110) AS ?expr_197) } ORDER BY ASC(?P577_110) LIMIT 1",
        "Squall label based": "what is the year of the lowest <publication date> of a [Film] that has <media franchise> [The Matrix]?",
        "Squall ID based": "what is the year of the lowest <P577> of a <Q11424> that has <P8345> <Q13014087>?"
    },
    {
        "Question": "Did Richard Sherman join the Tampa Bay Buccaneers before 2020?",
        "ID": "ffa600e6",
        "Entities": "Q320476:Tampa Bay Buccaneers,Q2947411:Richard Sherman,2020:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Richard Sherman] has as a <member of sports team> with a <start time> [Tampa Bay Buccaneers] and give me the year of the <start time> lower or equal to 2020",
        "Sparklis ID based": "<Q2947411> has as a <P54> with a <P580> <Q320476> and give me the year of the <P580> lower or equal to 2020",
        "Sparql label based": "ASK { wd:[Richard Sherman] p:<member of sports team> [ n1:<start time> ?P580_4 ; ps:<member of sports team> wd:[Tampa Bay Buccaneers] ] . BIND (year(?P580_4) AS ?expr_90) FILTER ( xsd:double(str(?expr_90)) <= 2020 ) }",
        "Sparql ID based": "ASK { wd:Q2947411 p:P54 [ n1:P580 ?P580_4 ; ps:P54 wd:Q320476 ] . BIND (year(?P580_4) AS ?expr_90) FILTER ( xsd:double(str(?expr_90)) <= 2020 ) }",
        "Squall label based": "whether [Richard Sherman] has <member of sports team> at a <start time> whose year is lesser or equal to 2020 [Tampa Bay Buccaneers]?",
        "Squall ID based": "whether <Q2947411> has <P54> at a <P580> whose year is lesser or equal to 2020 <Q320476>?"
    },
    {
        "Question": "What was the last Harry Potter book?",
        "ID": "80f464a3",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] with the highest-to-lowest <series ordinal>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> with the highest-to-lowest <P1545>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1545_3 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ; n1:<series ordinal> ?P1545_3 ] . } ORDER BY DESC(?P1545_3) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1545_3 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q8337 ; n1:P1545 ?P1545_3 ] . } ORDER BY DESC(?P1545_3) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> at the highest <series ordinal> [Harry Potter 2]?",
        "Squall ID based": "which <Q7725634> has <P179> at the highest <P1545> <Q8337>?"
    },
    {
        "Question": "What is the third part of the Fast & Furious?",
        "ID": "25569cc4",
        "Entities": "Q1576873:Fast & Furious,3:None",
        "Mintaka Answer": "Q213208:The Fast and the Furious: Tokyo Drift",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q1576873>?"
    },
    {
        "Question": "How many Academy Awards did John Wayne win?",
        "ID": "315f8406",
        "Entities": "Q40531:John Wayne,Q19020:Academy Awards",
        "Mintaka Answer": "Q103916:Academy Award for Best Actor",
        "Sparklis label based": "[John Wayne] <award received> an [Academy Awards] and give me the number of [Academy Awards]",
        "Sparklis ID based": "<Q40531> <P166> an <Q19020> and give me the number of <Q19020>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_46) WHERE { ?Q19020_8 wdt:<instance of> wd:[Academy Awards] . wd:[John Wayne] p:<award received> [ ps:<award received> ?Q19020_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_46) WHERE { ?Q19020_8 wdt:P31 wd:Q19020 . wd:Q40531 p:P166 [ ps:P166 ?Q19020_8 ] . }",
        "Squall label based": "how many [Academy Awards] is a <award received> of [John Wayne]?",
        "Squall ID based": "how many <Q19020> is a <P166> of <Q40531>?"
    },
    {
        "Question": "Who won Best Director for the Academy Awards in 1938?",
        "ID": "4c37df90",
        "Entities": "Q103360:Academy Award for Best Director,Q19020:Academy Awards,1938:None",
        "Mintaka Answer": "Q332530:Leo McCarey",
        "Sparklis label based": "give me every [human] that has as an <occupation> [film director] and that <award received> with <point in time> 1938-01-01T00:00:00Z [Academy Award for Best Director]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q2526255> and that <P166> with <P585> 1938-01-01T00:00:00Z <Q103360>",
        "Sparql label based": "SELECT DISTINCT ?Q5_9 WHERE { ?Q5_9 wdt:<instance of> wd:[Human] .?Q5_9 p:<occupation> [ ps:<occupation> wd:[Film Director] ] .?Q5_9 p:<award received> [ n1:<point in time> \"1938-01-01T00:00:00Z\"^^xsd:dateTime ; ps:<award received> wd:[Academy Award For Best Director] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_9 WHERE { ?Q5_9 wdt:P31 wd:Q5 .?Q5_9 p:P106 [ ps:P106 wd:Q2526255 ] .?Q5_9 p:P166 [ n1:P585 \"1938-01-01T00:00:00Z\"^^xsd:dateTime ; ps:P166 wd:Q103360 ] . }",
        "Squall label based": "which [Human] has <occupation> [Film Director] and has <award received> at <point in time> 1938-01-01T00:00:00Z [Academy Award For Best Director]?",
        "Squall ID based": "which <Q5> has <P106> <Q2526255> and has <P166> at <P585> 1938-01-01T00:00:00Z <Q103360>?"
    },
    {
        "Question": "Which actor played Spider-Man and was born in England?",
        "ID": "bad12250",
        "Entities": "Q21:England,Q79037:Spider-Man",
        "Mintaka Answer": "Q2023710:Tom Holland",
        "Sparklis label based": "give me every [human] that is the <cast member> of a [film] with name of the <character role> \"Peter Parker / Spider-Man\" and that has as a <country of citizenship> [United Kingdom]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> with name of the <P453> \"Peter Parker / Spider-Man\" and that has as a <P27> <Q145>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q11424_38 wdt:<instance of> wd:[Film] . ?Q11424_38 p:<cast member> [ ps:<cast member> ?Q5_1 ; n1:<name of the character role> \"Peter Parker / Spider-Man\" ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[United Kingdom] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q11424_38 wdt:P31 wd:Q11424 . ?Q11424_38 p:P161 [ ps:P161 ?Q5_1 ; n1:P4633 \"Peter Parker / Spider-Man\" ] . ?Q5_1 p:P27 [ ps:P27 wd:Q145 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <name of the character role> \"Peter Parker / Spider-Man\" of a [Film] and has <country of citizenship> [United Kingdom]?",
        "Squall ID based": "which <Q5> is a <P161> at <P4633> \"Peter Parker / Spider-Man\" of a <Q11424> and has <P27> <Q145>?"
    },
    {
        "Question": "What is the highest-selling Grand Theft Auto game?",
        "ID": "c8d3ebe9",
        "Entities": "Q132730:Grand Theft Auto",
        "Mintaka Answer": "Q17452:Grand Theft Auto V",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Grand Theft Auto] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q132730> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Grand Theft Auto] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q132730 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Grand Theft Auto] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q132730> and has the highest <P2664>?"
    },
    {
        "Question": "Which Lord of the Rings movie cost the least money to make?",
        "ID": "4e23d73b",
        "Entities": "Q190214:The Lord of the Rings trilogy",
        "Mintaka Answer": "Q127367:The Lord of the Rings: The Fellowship of the Ring",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Lord of the Rings trilogy] and that has the lowest-to-highest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q190214> and that has the lowest-to-highest <P2130>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2130_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . ?Q11424_349 p:<cost> [ ps:<cost> ?P2130_353 ] . } ORDER BY ASC(?P2130_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2130_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q190214 ] . ?Q11424_349 p:P2130 [ ps:P2130 ?P2130_353 ] . } ORDER BY ASC(?P2130_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Lord Of The Rings Trilogy] and has the lowest <cost>?",
        "Squall ID based": "which <Q11424> has <P179> <Q190214> and has the lowest <P2130>?"
    },
    {
        "Question": "Did The Twilight Saga: New Moon come out before 1995?",
        "ID": "93855345",
        "Entities": "Q116928:The Twilight Saga: New Moon,1995:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[The Twilight Saga: New Moon] has a <publication date> and where the year of the <publication date> < 1995",
        "Sparklis ID based": "<Q116928> has a <P577> and where the year of the <P577> < 1995",
        "Sparql label based": "ASK { wd:[The Twilight Saga: New Moon] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"1995\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q116928 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"1995\"^^xsd:integer) ) }",
        "Squall label based": "whether [The Twilight Saga: New Moon] has a <publication date> whose year is lesser than 1995?",
        "Squall ID based": "whether <Q116928> has a <P577> whose year is lesser than 1995?"
    },
    {
        "Question": "What year was Madonna born?",
        "ID": "7f204cb7",
        "Entities": "Q1744:Madonna",
        "Mintaka Answer": "1958",
        "Sparklis label based": "give me Human [Madonna] has a <date of birth>",
        "Sparklis ID based": "give me Human <Q1744> has a <P569>",
        "Sparql label based": "SELECT DISTINCT (year(xsd:dateTime(?P569_8)) as ?birthYear) WHERE { wd:[Madonna] p:<date of birth> [ ps:<date of birth> ?P569_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (year(xsd:dateTime(?P569_8)) as ?birthYear) WHERE { wd:Q1744 p:P569 [ ps:P569 ?P569_8 ] . }",
        "Squall label based": "what is the year of the xsd:dateTime of a <date of birth> of [Madonna]?",
        "Squall ID based": "what is the year of the xsd:dateTime of a <P569> of <Q1744>?"
    },
    {
        "Question": "What is the fourth installment to the Matrix series called?",
        "ID": "11f2c248",
        "Entities": "Q83495:The Matrix,4:None",
        "Mintaka Answer": "Q80322391:The Matrix Resurrections",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 4 [The Matrix series]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 4 <Q1210827>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"4\" ; ps:<part of the series> wd:[The Matrix Series] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"4\" ; ps:P179 wd:Q1210827 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"4\" [The Matrix Series]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"4\" <Q1210827>?"
    },
    {
        "Question": "Which NFL team won Super Bowl 37?",
        "ID": "bf0d2c47",
        "Entities": "Q939802:Super Bowl XXXVII, Q1215884:National Football League",
        "Mintaka Answer": "Q320476:Tampa Bay Buccaneers",
        "Sparklis label based": "give me every [American football team] that has as a <league> [National Football League] and that is the <winner> of [Super Bowl XXXVII]",
        "Sparklis ID based": "give me every <Q17156793> that has as a <P118> <Q1215884> and that is the <P1346> of <Q939802>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . ?Q17156793_1 p:<league> [ ps:<league> wd:[National Football League] ] . wd:[Super Bowl Xxxvii] p:<winner> [ ps:<winner> ?Q17156793_1 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . ?Q17156793_1 p:P118 [ ps:P118 wd:Q1215884 ] . wd:Q939802 p:P1346 [ ps:P1346 ?Q17156793_1 ] . } LIMIT 1",
        "Squall label based": "which [American Football Team] has <league> [National Football League] and is a <winner> of [Super Bowl Xxxvii]?",
        "Squall ID based": "which <Q17156793> has <P118> <Q1215884> and is a <P1346> of <Q939802>?"
    },
    {
        "Question": "Did The Devil's Rejects come out after 2003?",
        "ID": "2748e966",
        "Entities": "Q1534510:The Devil's Rejects,2003:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Devil's Rejects] has a <publication date> and give me the year of the <publication date> > 2003",
        "Sparklis ID based": "<Q1534510> has a <P577> and give me the year of the <P577> > 2003",
        "Sparql label based": "ASK { wd:[The Devil's Rejects] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) > \"2003\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q1534510 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) > \"2003\"^^xsd:integer) ) }",
        "Squall label based": "whether [The Devil's Rejects] has a <publication date> whose year is greater than 2003?",
        "Squall ID based": "whether <Q1534510> has a <P577> whose year is greater than 2003?"
    },
    {
        "Question": "How many Republican governors has Texas had since 2000?",
        "ID": "e1e134c5",
        "Entities": "Q29468:Republican Party,Q1439:Texas,2000:None",
        "Mintaka Answer": "Q207:George W. Bush,Q215057:Rick Perry,Q5605224:Greg Abbott",
        "Sparklis label based": "give me every [human] that has as a <member of political party> [Republican Party] and that has as a <position held> [Governor of Texas] that has as an <applies to jurisdiction Texas> with a <start time> and where the year of the <start time> \u2265 2000 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P102> <Q29468> and that has as a <P39> <Q5589725> that has as an <applies_to_jurisdiction_Texas> with a <P580> and where the year of the <P580> \u2265 2000 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Texas] ; n1:<start time> ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2000\") ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q5589725 ; n1:P580 ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2000\") ) } LIMIT 1",
        "Squall label based": "how many [Human] has <member of political party> [Republican Party] and has <position held> at a <start time> greater or equal to 2000 [Governor Of Texas]?",
        "Squall ID based": "how many <Q5> has <P102> <Q29468> and has <P39> at a <P580> greater or equal to 2000 <Q5589725>?"
    },
    {
        "Question": "Who sang Level Up and is also a spouse to Russell Wilson?",
        "ID": "af54b3cd",
        "Entities": "Q55669660:Level Up, Q1149781:Russell Wilson",
        "Mintaka Answer": "Q203223:Ciara",
        "Sparklis label based": "[Level Up] has a <performer> that has as a <spouse> [Russell Wilson]",
        "Sparklis ID based": "<Q55669660> has a <P175> that has as a <P26> <Q1149781>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[Level Up] p:<performer> [ ps:<performer> ?P175_8 ] . ?P175_8 p:<spouse> [ ps:<spouse> wd:[Russell Wilson] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q55669660 p:P175 [ ps:P175 ?P175_8 ] . ?P175_8 p:P26 [ ps:P26 wd:Q1149781 ] . } LIMIT 1",
        "Squall label based": "what is a <performer> of [Level Up] and has <spouse> [Russell Wilson]?",
        "Squall ID based": "what is a <P175> of <Q55669660> and has <P26> <Q1149781>?"
    },
    {
        "Question": "How many games are in the Half-Life series?",
        "ID": "d5a811cb",
        "Entities": "Q752241:Half-Life",
        "Mintaka Answer": "Q279744:Half-Life,Q193581:Half-Life 2,:None",
        "Sparklis label based": "[Half-Life] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q752241> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(?P527_9) as ?p) WHERE { wd:[Half-life] p:<has part(s)> [ ps:<has part(s)> ?P527_9 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(?P527_9) as ?p) WHERE { wd:Q752241 p:P527 [ ps:P527 ?P527_9 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Half-life]?",
        "Squall ID based": "how many thing is a <P527> of <Q752241>?"
    },
    {
        "Question": "What was the first Halo game that did not have Martin O'Donnell as the composer?",
        "ID": "95100a87",
        "Entities": "Q276217:Halo: Combat Evolved, Q2484073:Martin O'Donnell",
        "Mintaka Answer": "Q747836:Halo Wars",
        "Sparklis label based": "give me every [video game] that not has as a <composer> [Martin O'Donnell] and that has as a <part of the series> [Halo] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P86> <Q2484073> and that has as a <P179> <Q1747150> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P577_38 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Halo] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<composer> [ ps:<composer> wd:[Martin O'donnell] ] . } ) ?Q7889_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P577_38 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q1747150 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P86 [ ps:P86 wd:Q2484073 ] . } ) ?Q7889_1 p:P577 [ ps:P577 ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Halo] and has not <composer> [Martin O'donnell] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1747150> and has not <P86> <Q2484073> and has the lowest <P577>?"
    },
    {
        "Question": "Which movie actress was born in Dalby, Australia and has also played a leading role in the Suicide Squad movie?",
        "ID": "52db3d16",
        "Entities": "Q1001056:Dalby,Q18604504:Suicide Squad",
        "Mintaka Answer": "Q1924847:Margot Robbie",
        "Sparklis label based": "give me every [human] that has as a <place of birth> [Dalby] and that is the <cast member> of [Suicide Squad]",
        "Sparklis ID based": "give me every <Q5> that has as a <P19> <Q1001056> and that is the <P161> of <Q18604504>",
        "Sparql label based": "SELECT DISTINCT ?Q5_247 WHERE { ?Q5_247 wdt:<instance of> wd:[Human] . ?Q5_247 p:<place of birth> [ ps:<place of birth> wd:[Dalby] ] . wd:[Suicide Squad] p:<cast member> [ ps:<cast member> ?Q5_247 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_247 WHERE { ?Q5_247 wdt:P31 wd:Q5 . ?Q5_247 p:P19 [ ps:P19 wd:Q1001056 ] . wd:Q18604504 p:P161 [ ps:P161 ?Q5_247 ] . }",
        "Squall label based": "which [Human] has <place of birth> [Dalby] and is a <cast member> of [Suicide Squad]?",
        "Squall ID based": "which <Q5> has <P19> <Q1001056> and is a <P161> of <Q18604504>?"
    },
    {
        "Question": "What character had the nickname butcher of Blaviken?",
        "ID": "0e7f5949",
        "Entities": "Q19007130:Blaviken",
        "Mintaka Answer": "Q2492923:Geralt of Rivia",
        "Sparklis label based": "give me every [literary character] that has as a <nickname> Le boucher de Blaviken",
        "Sparklis ID based": "give me every <Q3658341> that has as a <P1449> Le boucher de Blaviken",
        "Sparql label based": "SELECT DISTINCT ?Q3658341_8 WHERE { ?Q3658341_8 wdt:<instance of> wd:[Literary Character] . ?Q3658341_8 p:<nickname> [ ps:<nickname> \"Le boucher de Blaviken\"@fr ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q3658341_8 WHERE { ?Q3658341_8 wdt:P31 wd:Q3658341 . ?Q3658341_8 p:P1449 [ ps:P1449 \"Le boucher de Blaviken\"@fr ] . }",
        "Squall label based": "which [Literary Character] has <nickname> \"Le boucher de Blaviken\"@fr?",
        "Squall ID based": "which <Q3658341> has <P1449> \"Le boucher de Blaviken\"@fr?"
    },
    {
        "Question": "Did Fifty Shades of Grey come out before 2000?",
        "ID": "9058e2a5",
        "Entities": "Q557867:Fifty Shades of Grey,2000:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Fifty Shades of Grey 2] has a <publication date> and give me the year of the <publication date> < 2000",
        "Sparklis ID based": "<Q557867> has a <P577> and give me the year of the <P577> < 2000",
        "Sparql label based": "ASK { wd:[Fifty Shades Of Grey 2] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q557867 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"2000\"^^xsd:integer) ) }",
        "Squall label based": "whether [Fifty Shades Of Grey 2] has a <publication date> whose year is lesser than 2000?",
        "Squall ID based": "whether <Q557867> has a <P577> whose year is lesser than 2000?"
    },
    {
        "Question": "Which BioShock game was not developed by 2k Marin?",
        "ID": "913570ae",
        "Entities": "Q4914658:BioShock, Q1204929:2K Marin",
        "Mintaka Answer": "Q57270:BioShock",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [BioShock] and that not has as a <developer> [2K Marin]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q4914658> and that not has as a <P178> <Q1204929>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Bioshock] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<developer> [ ps:<developer> wd:[2k Marin] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q4914658 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P178 [ ps:P178 wd:Q1204929 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Bioshock] and has not <developer> [2k Marin]?",
        "Squall ID based": "which <Q7889> has <P179> <Q4914658> and has not <P178> <Q1204929>?"
    },
    {
        "Question": "Which Final Fantasy game has sold the most?",
        "ID": "b84e6c35",
        "Entities": "Q12391356:Final Fantasy",
        "Mintaka Answer": "Q214232:Final Fantasy VII",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Final Fantasy] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q99416119> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "select distinct ?q7889_1 ?p2664_38 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Final Fantasy] ] . ?q7889_1 p:<units sold> [ ps:<units sold> ?p2664_38 ] . } order by desc(?p2664_38) limit 1",
        "Sparql ID based": "select distinct ?q7889_1 ?p2664_38 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q99416119 ] . ?q7889_1 p:P2664 [ ps:P2664 ?p2664_38 ] . } order by desc(?p2664_38) limit 1",
        "Squall label based": "which [Video Game] has <part of the series> [Final Fantasy] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q99416119> and has the highest <P2664>?"
    },
    {
        "Question": "Which actor starred in Good Will Hunting and attended Harvard?",
        "ID": "9aab4bd5",
        "Entities": "Q193835:Good Will Hunting,Q13371:Harvard University",
        "Mintaka Answer": "Q175535:Matt Damon",
        "Sparklis label based": "give me every [human] that is <educated at> [Harvard University] and that is the <cast member> of [Good Will Hunting]",
        "Sparklis ID based": "give me every <Q5> that is <P69> <Q13371> and that is the <P161> of <Q193835>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<educated at> [ ps:<educated at> wd:[Harvard University] ] . wd:[Good Will Hunting] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P69 [ ps:P69 wd:Q13371 ] . wd:Q193835 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] has <educated at> [Harvard University] and is a <cast member> of [Good Will Hunting]?",
        "Squall ID based": "which <Q5> has <P69> <Q13371> and is a <P161> of <Q193835>?"
    },
    {
        "Question": "Did The Beatles release Rubber Soul before Revolver?",
        "ID": "40db23ca",
        "Entities": "Q1299:The Beatles, Q190640:Rubber Soul, Q185121:Revolver",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Rubber Soul] has as a <performer> [The Beatles] and has a <publication date> and [Revolver] has as a <performer> [The Beatles] and has a <publication date>",
        "Sparklis ID based": "<Q190640> has as a <P175> <Q3295515> and has a <P577> and <Q185121> has as a <P175> <Q3295515> and has a <P577>",
        "Sparql label based": "ASK { wd:[Rubber Soul] p:<publication date> [ ps:<publication date> ?date1 ] . wd:[Revolver] p:<publication date> [ ps:<publication date> ?date2 ] . FILTER (?date1 < ?date2) }",
        "Sparql ID based": "ASK { wd:Q190640 p:P577 [ ps:P577 ?date1 ] . wd:Q185121 p:P577 [ ps:P577 ?date2 ] . FILTER (?date1 < ?date2) }",
        "Squall label based": "whether [Rubber Soul] has a <publication date> lesser than a <publication date> of [Revolver]?",
        "Squall ID based": "whether <Q190640> has a <P577> lesser than a <P577> of <Q185121>?"
    },
    {
        "Question": "When was Halo: Combat Evolved first released?",
        "ID": "99040138",
        "Entities": "Q276217:Halo: Combat Evolved",
        "Mintaka Answer": "2001-11-15",
        "Sparklis label based": "[Halo: Combat Evolved] has a <publication date>",
        "Sparklis ID based": "<Q276217> has a <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_8 WHERE { wd:[Halo: Combat Evolved] p:<publication date> [ ps:<publication date> ?P577_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P577_8 WHERE { wd:Q276217 p:P577 [ ps:P577 ?P577_8 ] . } LIMIT 1",
        "Squall label based": "what is a <publication date> of [Halo: Combat Evolved]?",
        "Squall ID based": "what is a <P577> of <Q276217>?"
    },
    {
        "Question": "Which actress was in Suicide Squad and went to Somerset College?",
        "ID": "5f37b1ca",
        "Entities": "Q18604504:Suicide Squad,Q7559837:Somerset College",
        "Mintaka Answer": "Q1924847:Margot Robbie",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Suicide Squad] and that is <educated at> [Somerset College]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q18604504> and that is <P69> <Q7559837>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Suicide Squad] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<educated at> [ ps:<educated at> wd:[Somerset College] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q18604504 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P69 [ ps:P69 wd:Q7559837 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Suicide Squad] and has <educated at> [Somerset College]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q18604504> and has <P69> <Q7559837>?"
    },
    {
        "Question": "Which Harper Lee novel was not published in the 20th century?",
        "ID": "6ce1fb0d",
        "Entities": "Q182658:Harper Lee,20:None",
        "Mintaka Answer": "Q18949486:Go Set a Watchman",
        "Sparklis label based": "give me every [literary work] that has as an <author>  [Harper Lee]  and that has  a <publication date>  and where the year of the <publication date> > 1900 and where the year of the <publication date> < 2000",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q182658> and that has a <P577> and where the year of the <P577> > 1900 and where the year of the <P577> < 2000",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_133 WHERE { ?Q7725634_133 wdt:<instance of> wd:[Literary Work] . ?Q7725634_133 p:<author> [ ps:<author> wd:[Harper Lee] ] . ?Q7725634_133 p:<publication date> [ ps:<publication date> ?P577_137 ] . FILTER ( (year(?P577_137) > \"1900\"^^xsd:integer) ) FILTER ( (year(?P577_137) < \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_133 WHERE { ?Q7725634_133 wdt:P31 wd:Q7725634 . ?Q7725634_133 p:P50 [ ps:P50 wd:Q182658 ] . ?Q7725634_133 p:P577 [ ps:P577 ?P577_137 ] . FILTER ( (year(?P577_137) > \"1900\"^^xsd:integer) ) FILTER ( (year(?P577_137) < \"2000\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <author> [Harper Lee] and has a <publication date> whose year is greater than 1900 and whose year is lesser than 2000?",
        "Squall ID based": "which <Q7725634> has <P50> <Q182658> and has a <P577> whose year is greater than 1900 and whose year is lesser than 2000?"
    },
    {
        "Question": "Where was Conan from in Howard's Conan the Warrior?",
        "ID": "0428f737",
        "Entities": "Q189169:Conan the Barbarian, Q207640:Robert E. Howard, Q2180182:Conan the Warrior",
        "Mintaka Answer": "Q2623624:Cimmeria",
        "Sparklis label based": "Conan the Warrior has as a <characters> [Conan the Barbarian] that has a <country of citizenship>",
        "Sparklis ID based": "Conan the Warrior has as a <P674> <Q189169> that has a <P27>",
        "Sparql label based": "SELECT DISTINCT ?P27_8 WHERE { wd:[Conan The Barbarian] p:<country of citizenship> [ ps:<country of citizenship> ?P27_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P27_8 WHERE { wd:Q189169 p:P27 [ ps:P27 ?P27_8 ] . } LIMIT 1",
        "Squall label based": "what is a <country of citizenship> of [Conan The Barbarian]?",
        "Squall ID based": "what is a <P27> of <Q189169>?"
    },
    {
        "Question": "When was the first movie of the Pirates of the Caribbean franchise released?",
        "ID": "5c7f52d3",
        "Entities": "Q194318:Pirates of the Caribbean,1:None",
        "Mintaka Answer": "2003",
        "Sparklis label based": "[Pirates of the Caribbean] has the lowest-to-highest <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q194318> has the lowest-to-highest <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_135 WHERE { wd:[Pirates Of The Caribbean] p:<publication date> [ ps:<publication date> ?P577_8 ] . BIND (year(?P577_8) AS ?expr_135) } ORDER BY ASC(?P577_8) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_135 WHERE { wd:Q194318 p:P577 [ ps:P577 ?P577_8 ] . BIND (year(?P577_8) AS ?expr_135) } ORDER BY ASC(?P577_8) LIMIT 1",
        "Squall label based": "what is the year of the lowest <publication date> of [Pirates Of The Caribbean]?",
        "Squall ID based": "what is the year of the lowest <P577> of <Q194318>?"
    },
    {
        "Question": "How many movies has Jodie Foster directed?",
        "ID": "31cd845c",
        "Entities": "Q41351:Jodie Foster",
        "Mintaka Answer": "Q1170870:Little Man Tate,Q1395242:Home for the Holidays,Q847940:The Beaver,Q19363691:Money Monster",
        "Sparklis label based": "[Jodie Foster] is the <director> of a [film] and give me the number of [film]",
        "Sparklis ID based": "<Q41351> is the <P57> of a <Q11424> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<director> [ ps:<director> wd:[Jodie Foster] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P57 [ ps:P57 wd:Q41351 ] . }",
        "Squall label based": "which [Film] has <director> [Jodie Foster]?",
        "Squall ID based": "which <Q11424> has <P57> <Q41351>?"
    },
    {
        "Question": "Did Risk of Rain 2 come out before 2021?",
        "ID": "c892b493",
        "Entities": "Q62569141:Risk of Rain 2",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Risk of Rain 2] has a <publication date> and where the year of the <publication date> < 2021",
        "Sparklis ID based": "<Q62569141> has a <P577> and where the year of the <P577> < 2021",
        "Sparql label based": "ASK { wd:[Risk Of Rain 2] p:<publication date> [ ps:<publication date> ?P577_8 ] . FIlter ((year(?P577_8) < \"2021\"^^xsd:integer)) }",
        "Sparql ID based": "ASK { wd:Q62569141 p:P577 [ ps:P577 ?P577_8 ] . FIlter ((year(?P577_8) < \"2021\"^^xsd:integer)) }",
        "Squall label based": "whether [Risk Of Rain 2] has a <publication date> whose year is lesser than 2021?",
        "Squall ID based": "whether <Q62569141> has a <P577> whose year is lesser than 2021?"
    },
    {
        "Question": "Who was king of the Franks and died in 814?",
        "ID": "5624cf03",
        "Entities": "Q43482:Franks,814:None",
        "Mintaka Answer": "Q3044:Charlemagne",
        "Sparklis label based": "give me every [human] that has as a <position held>  [king of Franks]  and that has  a <date of death>  and give me the year of the <date of death> that is 814",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q22923081> and that has a <P570> and give me the year of the <P570> that is 814",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[King Of Franks] ] . ?Q5_1 p:<date of death> [ ps:<date of death> ?P570_5 ] . BIND (year(?P570_5) AS ?expr_132) FILTER ( ?expr_132 = \"814\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q22923081 ] . ?Q5_1 p:P570 [ ps:P570 ?P570_5 ] . BIND (year(?P570_5) AS ?expr_132) FILTER ( ?expr_132 = \"814\"^^xsd:integer ) }",
        "Squall label based": "which [Human] has <position held> [King Of Franks] and has a <date of death> whose year is 814?",
        "Squall ID based": "which <Q5> has <P39> <Q22923081> and has a <P570> whose year is 814?"
    },
    {
        "Question": "Which Judy Blume books were not meant for those under eighteen?",
        "ID": "49b90275",
        "Entities": "Q441214:Judy Blume,18:None",
        "Mintaka Answer": "Q7999479:Wifey,Q7637435:Summer Sisters,Q20899469:In The Unlikely Event",
        "Sparklis label based": "give me every [written work] that has as an <author> [Judy Blume] and that not has as an <intended public> [child]",
        "Sparklis ID based": "give me every <Q47461344> that has as an <P50> <Q441214> and that not has as an <P2360> <Q7569>",
        "Sparql label based": "SELECT DISTINCT ?Q47461344_7 WHERE { ?Q47461344_7 wdt:<instance of> wd:[Written Work] . ?Q47461344_7 p:<author> [ ps:<author> wd:[Judy Blume] ] . FILTER ( NOT EXISTS { ?Q47461344_7 p:<intended public> [ ps:<intended public> wd:[Child] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q47461344_7 WHERE { ?Q47461344_7 wdt:P31 wd:Q47461344 . ?Q47461344_7 p:P50 [ ps:P50 wd:Q441214 ] . FILTER ( NOT EXISTS { ?Q47461344_7 p:P2360 [ ps:P2360 wd:Q7569 ] . } ) }",
        "Squall label based": "which [Written Work] has <author> [Judy Blume] and has not <intended public> [Child]?",
        "Squall ID based": "which <Q47461344> has <P50> <Q441214> and has not <P2360> <Q7569>?"
    },
    {
        "Question": "How many games are in the Warcraft series?",
        "ID": "093b2245",
        "Entities": "Q815739:Warcraft",
        "Mintaka Answer": "5",
        "Sparklis label based": "[Warcraft] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q815739> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Warcraft] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q815739 p:P527 [ ps:P527 ?P527_8 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <has part(s)> of [Warcraft]?",
        "Squall ID based": "how many thing is a <P527> of <Q815739>?"
    },
    {
        "Question": "Who won the 2019 NL MVP?",
        "ID": "6fa5cca5",
        "Entities": "Q858082:National League, Q1514249:Major League Baseball Most Valuable Player Award",
        "Mintaka Answer": "Q29514757:Cody Bellinger",
        "Sparklis label based": "give me every [human] that <award received> with <point in time> 2019-01-01T00:00:00Z [Major League Baseball Most Valuable Player Award]",
        "Sparklis ID based": "give me every <Q5> that <P166> with <P585> 2019-01-01T00:00:00Z <Q1514249>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<award received> [ n1:<point in time> \"2019-01-01T00:00:00Z\"^^xsd:dateTime ; ps:<award received> wd:[Major League Baseball Most Valuable Player Award] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P166 [ n1:P585 \"2019-01-01T00:00:00Z\"^^xsd:dateTime ; ps:P166 wd:Q1514249 ] . }",
        "Squall label based": "which [Human] has <award received> at <point in time> 2019-01-01T00:00:00Z [Major League Baseball Most Valuable Player Award]?",
        "Squall ID based": "which <Q5> has <P166> at <P585> 2019-01-01T00:00:00Z <Q1514249>?"
    },
    {
        "Question": "What game in the Grand Theft Auto series sold the most copies?",
        "ID": "fb4e6039",
        "Entities": "Q132730:Grand Theft Auto",
        "Mintaka Answer": "Q17452:Grand Theft Auto V",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Grand Theft Auto] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q132730> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Grand Theft Auto] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_6 ] . } ORDER BY DESC(?P2664_6) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q132730 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_6 ] . } ORDER BY DESC(?P2664_6) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Grand Theft Auto] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q132730> and has the highest <P2664>?"
    },
    {
        "Question": "Which Twilight movie has the longest runtime?",
        "ID": "5e139a34",
        "Entities": "Q44523:Twilight",
        "Mintaka Answer": "Q116928:The Twilight Saga: New Moon",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Twilight Saga] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q652599> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Twilight Saga] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q652599 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Twilight Saga] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q652599> and has the highest <P2047>?"
    },
    {
        "Question": "Which 1997 Steven Spielberg movie does not star Jeff Goldblum?",
        "ID": "d3f06b09",
        "Entities": "Q106706:Jeff Goldblum, Q8877:Steven Spielberg",
        "Mintaka Answer": "Q472361:Amistad",
        "Sparklis label based": "give me every [film] that has as a <director> [Steven Spielberg] and that has as a <publication date> 1997-01-01T00:00:00Z and that not has as a <cast member> [Jeff Goldblum]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q8877> and that has as a <P577> 1997-01-01T00:00:00Z and that not has as a <P161> <Q106706>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> \"1997-01-01T00:00:00Z\"^^xsd:dateTime ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Jeff Goldblum] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q8877 ] . ?Q11424_1 p:P577 [ ps:P577 \"1997-01-01T00:00:00Z\"^^xsd:dateTime ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q106706 ] . } ) }",
        "Squall label based": "which [Film] has <director> [Steven Spielberg] and has <publication date> 1997-01-01T00:00:00Z and has not <cast member> [Jeff Goldblum]?",
        "Squall ID based": "which <Q11424> has <P57> <Q8877> and has <P577> 1997-01-01T00:00:00Z and has not <P161> <Q106706>?"
    },
    {
        "Question": "Which is the higher-grossing 2020 movie, 1917 or Bad Boys for Life?",
        "ID": "4ecf1250",
        "Entities": "Q29021224:Bad Boys for Life,Q62721520:1917,2020:None",
        "Mintaka Answer": "Q29021224:Bad Boys for Life",
        "Sparklis label based": "[Bad Boys for Life] has a <box office> and [1917] has a <box office> with valid in place [worldwide]",
        "Sparklis ID based": "<Q29021224> has a <P2142> and <Q62721520> has a <P2142> with valid in place <Q13780930>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Bad Boys For Life] wd:[1917] } ?x p:<box office> [ ps:<box office> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q29021224 wd:Q62721520 } ?x p:P2142 [ ps:P2142 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [Bad Boys For Life] or [1917] and has the highest <box office>?",
        "Squall ID based": "what is <Q29021224> or <Q62721520> and has the highest <P2142>?"
    },
    {
        "Question": "Which game in the Final Fantasy series sold the most copies?",
        "ID": "16034331",
        "Entities": "Q12391356:Final Fantasy",
        "Mintaka Answer": "Q214232:Final Fantasy VII",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Final Fantasy] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q99416119> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Final Fantasy] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q99416119 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Final Fantasy] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q99416119> and has the highest <P2664>?"
    },
    {
        "Question": "Which member of Amon Amarth was not born in Sweden?",
        "ID": "4d2011f2",
        "Entities": "Q34:Sweden,Q192863:Amon Amarth",
        "Mintaka Answer": "None",
        "Sparklis label based": "[Amon Amarth] has a <member of> that not has as a <country of citizenship> [Sweden]",
        "Sparklis ID based": "<Q192863> has a <P463> that not has as a <P27> <Q34>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[Amon Amarth] ] . FILTER ( NOT EXISTS { ?P463_8 p:<country of citizenship> [ ps:<country of citizenship> wd:[Sweden] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q192863 ] . FILTER ( NOT EXISTS { ?P463_8 p:P27 [ ps:P27 wd:Q34 ] . } ) }",
        "Squall label based": "what has <member of> [Amon Amarth] and has not <country of citizenship> [Sweden]?",
        "Squall ID based": "what has <P463> <Q192863> and has not <P27> <Q34>?"
    },
    {
        "Question": "Which actors in Black Panther are no longer alive?",
        "ID": "b6daa2d3",
        "Entities": "Q23780734:Black Panther",
        "Mintaka Answer": "Q5066520:Chadwick Boseman",
        "Sparklis label based": "[Black Panther] has a <cast member> that has a <cause of death>",
        "Sparklis ID based": "<Q23780734> has a <P161> that has a <P509>",
        "Sparql label based": "SELECT DISTINCT ?P161_8 ?P509_111 WHERE { wd:[Black Panther] p:<cast member> [ ps:<cast member> ?P161_8 ] . ?P161_8 p:<cause of death> [ ps:<cause of death> ?P509_111 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P161_8 ?P509_111 WHERE { wd:Q23780734 p:P161 [ ps:P161 ?P161_8 ] . ?P161_8 p:P509 [ ps:P509 ?P509_111 ] . }",
        "Squall label based": "what is a <cast member> of [Black Panther] and has a <cause of death>?",
        "Squall ID based": "what is a <P161> of <Q23780734> and has a <P509>?"
    },
    {
        "Question": "What was the longest Lord of the Rings book?",
        "ID": "69ec1e6d",
        "Entities": "Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q208002:The Fellowship of the Ring",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Lord of the Rings] and that has a <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> and that has a <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_39 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_39 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_39 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_39 ] . } LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings] and has a <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228> and has a <P1104>?"
    },
    {
        "Question": "Which Jason Bourne movie is Matt Damon not in?",
        "ID": "a0161b8a",
        "Entities": "Q1059919:Jason Bourne, Q175535:Matt Damon",
        "Mintaka Answer": "Q494048:The Bourne Legacy",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Matt Damon] and that is based on [Bourne series]",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q175535> and that is based on <Q15908162>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<based on> [ ps:<based on> wd:[Bourne Series] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Matt Damon] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P144 [ ps:P144 wd:Q15908162 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q175535 ] . } ) } LIMIT 1",
        "Squall label based": "which [Film] has <based on> [Bourne Series] and has not <cast member> [Matt Damon]?",
        "Squall ID based": "which <Q11424> has <P144> <Q15908162> and has not <P161> <Q175535>?"
    },
    {
        "Question": "How many Democrat governors has Colorado had since 2000?",
        "ID": "01de4dd0",
        "Entities": "Q1261:Colorado, Q29552:Democratic Party",
        "Mintaka Answer": "3",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Colorado] that has as an <applies to jurisdiction> [Colorado] with a <start time> and that has as a <member of political party> [Democratic Party] and where the year of the <start time> = 2000 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q29514964> that has as an <P1001> <Q1261> with a <P580> and that has as a <P102> <Q29552> and where the year of the <P580> = 2000 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_263) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Colorado] ; n1:<start time> ?P580_140 ] . ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Democratic Party] ] . FILTER ( (str(?P580_140) >= \"2000\") ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_263) WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q29514964 ; n1:P580 ?P580_140 ] . ?Q5_1 p:P102 [ ps:P102 wd:Q29552 ] . FILTER ( (str(?P580_140) >= \"2000\") ) } LIMIT 1",
        "Squall label based": "how many [Human] has <position held> at a <start time> greater or equal to 2000 [Governor Of Colorado] and has <member of political party> [Democratic Party]?",
        "Squall ID based": "how many <Q5> has <P39> at a <P580> greater or equal to 2000 <Q29514964> and has <P102> <Q29552>?"
    },
    {
        "Question": "Which actor was both Indiana Jones and Han Solo?",
        "ID": "3b3cd892",
        "Entities": "Q2562640:Indiana Jones,Q51802:Han Solo",
        "Mintaka Answer": "Q81328:Harrison Ford",
        "Sparklis label based": "give me every [human] that is the <cast member> of a [film] that has as a <part of the series> [Indiana Jones] and that is the <performer> of [Han Solo]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> that has as a <P179> <Q98018448> and that is the <P175> of <Q51802>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q11424_45 wdt:<instance of> wd:[Film] . ?Q11424_45 p:<cast member> [ ps:<cast member> ?Q5_8 ] . ?Q11424_45 p:<part of the series> [ ps:<part of the series> wd:[Indiana Jones] ] . wd:[Han Solo] p:<performer> [ ps:<performer> ?Q5_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q11424_45 wdt:P31 wd:Q11424 . ?Q11424_45 p:P161 [ ps:P161 ?Q5_8 ] . ?Q11424_45 p:P179 [ ps:P179 wd:Q98018448 ] . wd:Q51802 p:P175 [ ps:P175 ?Q5_8 ] . }",
        "Squall label based": "which [Human] is a <performer> of [Han Solo] and is a <cast member> of a [Film] that has <part of the series> [Indiana Jones]?",
        "Squall ID based": "which <Q5> is a <P175> of <Q51802> and is a <P161> of a <Q11424> that has <P179> <Q98018448>?"
    },
    {
        "Question": "Which movie actor starred in Fast and Furious and was a wrestler?",
        "ID": "28d58da8",
        "Entities": "Q1576873:Fast & Furious",
        "Mintaka Answer": "Q10738:Dwayne Johnson",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Fast & Furious 2] and that has as a <sport> [professional wrestling]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q1576873> and that has as a <P641> <Q131359>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[Fast & Furious 2] p:<cast member> [ ps:<cast member> ?q5_1 ] . ?q5_1 p:<sport> [ ps:<sport> wd:[Professional Wrestling] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q1576873 p:P161 [ ps:P161 ?q5_1 ] . ?q5_1 p:P641 [ ps:P641 wd:Q131359 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Fast & Furious 2] and has <sport> [Professional Wrestling]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q1576873> and has <P641> <Q131359>?"
    },
    {
        "Question": "Who is the main character in Final Fantasy 8?",
        "ID": "51562d6a",
        "Entities": "Q245006:Final Fantasy VIII",
        "Mintaka Answer": "Q2607464:Squall Leonhart",
        "Sparklis label based": "give me every <video> game character that has as a <present in work> [Final Fantasy VIII] and that has as a <narrative role> [protagonist]",
        "Sparklis ID based": "give me every <P10> game character that has as a <P1441> <Q245006> and that has as a <P5800> <Q215972>",
        "Sparql label based": "select distinct ?q1569167_1 where { ?q1569167_1 wdt:<instance of> wd:[Video Game Character] . ?q1569167_1 p:<present in work> [ ps:<present in work> wd:[Final Fantasy Viii] ] . ?q1569167_1 p:<narrative role> [ ps:<narrative role> wd:[Protagonist] ] . }",
        "Sparql ID based": "select distinct ?q1569167_1 where { ?q1569167_1 wdt:P31 wd:Q1569167 . ?q1569167_1 p:P1441 [ ps:P1441 wd:Q245006 ] . ?q1569167_1 p:P5800 [ ps:P5800 wd:Q215972 ] . }",
        "Squall label based": "which [Video Game Character] has <present in work> [Final Fantasy Viii] and has <narrative role> [Protagonist]?",
        "Squall ID based": "which <Q1569167> has <P1441> <Q245006> and has <P5800> <Q215972>?"
    },
    {
        "Question": "How many major oceans are there in the world?",
        "ID": "77363e2c",
        "Entities": "Q9430:ocean",
        "Mintaka Answer": "Q788:Arctic Ocean,Q97:Atlantic Ocean,Q1239:Indian Ocean,Q98:Pacific Ocean,Q7354:Southern Ocean",
        "Sparklis label based": "give me every [ocean] that is the part of [World Ocean] and give me the number of [ocean]",
        "Sparklis ID based": "give me every <Q9430> that is the part of <Q715269> and give me the number of <Q9430>",
        "Sparql label based": "select distinct ?q9430_1 where { ?q9430_1 wdt:<instance of> wd:[Ocean] . ?q9430_1 p:<part of> [ ps:<part of> wd:[World Ocean] ] . }",
        "Sparql ID based": "select distinct ?q9430_1 where { ?q9430_1 wdt:P31 wd:Q9430 . ?q9430_1 p:P361 [ ps:P361 wd:Q715269 ] . }",
        "Squall label based": "which [Ocean] has <part of> [World Ocean]?",
        "Squall ID based": "which <Q9430> has <P361> <Q715269>?"
    },
    {
        "Question": "What is the largest canyon in the United States in depth?",
        "ID": "debac72e",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q118841:Grand Canyon",
        "Sparklis label based": "give me every [canyon] that has as a <country> [United States of America] and that has the highest-to-lowest <vertical depth>",
        "Sparklis ID based": "give me every <Q150784> that has as a <P17> <Q30> and that has the highest-to-lowest <P4511>",
        "Sparql label based": "SELECT DISTINCT ?Q150784_1 WHERE { ?Q150784_1 wdt:<instance of> wd:[Canyon] . ?Q150784_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q150784_1 p:<vertical depth> [ ps:<vertical depth> ?P4511_38 ] . } ORDER BY DESC(?P4511_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q150784_1 WHERE { ?Q150784_1 wdt:P31 wd:Q150784 . ?Q150784_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q150784_1 p:P4511 [ ps:P4511 ?P4511_38 ] . } ORDER BY DESC(?P4511_38) LIMIT 1",
        "Squall label based": "which [Canyon] has <country> [United States Of America] and has the highest <vertical depth>?",
        "Squall ID based": "which <Q150784> has <P17> <Q30> and has the highest <P4511>?"
    },
    {
        "Question": "Which Twilight Saga movie did Anna Kendrick not appear in?",
        "ID": "dfa95487",
        "Entities": "Q67701:Anna Kendrick, Q652599:The Twilight Saga",
        "Mintaka Answer": "Q60487:The Twilight Saga: Breaking Dawn \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Twilight Saga] and that not has as a <cast member> [Anna Kendrick]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q652599> and that not has as a <P161> <Q67701>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:<instance of> wd:[Film] . ?Q11424_9 p:<part of the series> [ ps:<part of the series> wd:[The Twilight Saga] ] . FILTER ( NOT EXISTS { ?Q11424_9 p:<cast member> [ ps:<cast member> wd:[Anna Kendrick] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:P31 wd:Q11424 . ?Q11424_9 p:P179 [ ps:P179 wd:Q652599 ] . FILTER ( NOT EXISTS { ?Q11424_9 p:P161 [ ps:P161 wd:Q67701 ] . } ) } LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Twilight Saga] and has not <cast member> [Anna Kendrick]?",
        "Squall ID based": "which <Q11424> has <P179> <Q652599> and has not <P161> <Q67701>?"
    },
    {
        "Question": "Is Simone Biles younger than Jordan Chiles?",
        "ID": "7041880d",
        "Entities": "Q7520267:Simone Biles, Q17486476:Jordan Chiles",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Simone Biles] has a <date of birth> and [Jordan Chiles] has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "<Q7520267> has a <P569> and <Q17486476> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Simone Biles] p:<date of birth> [ ps:<date of birth> ?date1 ] . wd:[Jordan Chiles] p:<date of birth> [ ps:<date of birth> ?date2 ] . FILTER (?date1 > ?date2) }",
        "Sparql ID based": "ASK { wd:Q7520267 p:P569 [ ps:P569 ?date1 ] . wd:Q17486476 p:P569 [ ps:P569 ?date2 ] . FILTER (?date1 > ?date2) }",
        "Squall label based": "whether [Simone Biles] has a <date of birth> greater than a <date of birth> of [Jordan Chiles]?",
        "Squall ID based": "whether <Q7520267> has a <P569> greater than a <P569> of <Q17486476>?"
    },
    {
        "Question": "Which Twilight books did not include the character Renesmee?",
        "ID": "ff08e26c",
        "Entities": "Q2456444:Renesmee Cullen,Q44523:Twilight",
        "Mintaka Answer": "Q189378:Twilight,Q191540:New Moon,Q212473:Eclipse",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Twilight 3] and that not has as a <characters> [Renesmee Cullen]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q44523> and that not has as a <P674> <Q2456444>",
        "Sparql label based": "SELECT distinct ?q7725634_8 where { ?q7725634_8 wdt:<instance of> wd:[Literary Work] . ?q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Twilight 3] ] . filter ( not exists { ?q7725634_8 p:<characters> [ ps:<characters> wd:[Renesmee Cullen] ] . } ) }",
        "Sparql ID based": "SELECT distinct ?q7725634_8 where { ?q7725634_8 wdt:P31 wd:Q7725634 . ?q7725634_8 p:P179 [ ps:P179 wd:Q44523 ] . filter ( not exists { ?q7725634_8 p:P674 [ ps:P674 wd:Q2456444 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Twilight 3] and has not <characters> [Renesmee Cullen]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q44523> and has not <P674> <Q2456444>?"
    },
    {
        "Question": "Who plays Katniss Everdeen in the Hunger Games movie series?",
        "ID": "e1d34b21",
        "Entities": "Q2071301:Katniss Everdeen,Q11885031:The Hunger Games",
        "Mintaka Answer": "Q189490:Jennifer Lawrence",
        "Sparklis label based": "give me every [human] that is the <cast member> with <character role> [Katniss Everdeen] of a [film] that has as a <part of the series> [The Hunger Games 4]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> with <P453> <Q2071301> of a <Q11424> that has as a <P179> <Q11885031>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q11424_45 wdt:<instance of> wd:[Film] . ?Q11424_45 p:<cast member> [ ps:<cast member> ?Q5_8 ; n1:<character role> wd:[Katniss Everdeen] ] . ?Q11424_45 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 4] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q11424_45 wdt:P31 wd:Q11424 . ?Q11424_45 p:P161 [ ps:P161 ?Q5_8 ; n1:P453 wd:Q2071301 ] . ?Q11424_45 p:P179 [ ps:P179 wd:Q11885031 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <character role> [Katniss Everdeen] of a [Film] that has <part of the series> [The Hunger Games 4]?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q2071301> of a <Q11424> that has <P179> <Q11885031>?"
    },
    {
        "Question": "Did Parasite come out before 2020?",
        "ID": "f939065a",
        "Entities": "Q61448040:Parasite,2020:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Parasite] has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q61448040> has a <P577> and give me the year of the <P577>",
        "Sparql label based": "ASk { wd:[Parasite] p:<publication date> [ ps:<publication date> ?P577_8 ] . BIND (year(?P577_8) AS ?expr_93) }",
        "Sparql ID based": "ASk { wd:Q61448040 p:P577 [ ps:P577 ?P577_8 ] . BIND (year(?P577_8) AS ?expr_93) }",
        "Squall label based": "whether [Parasite] has a <publication date> that has a year?",
        "Squall ID based": "whether <Q61448040> has a <P577> that has a year?"
    },
    {
        "Question": "Which actress has famous twin sisters and also played Wanda Maximoff?",
        "ID": "90bf6523",
        "Entities": "Q24022542:Wanda Maximoff",
        "Mintaka Answer": "Q234644:Elizabeth Olsen",
        "Sparklis label based": "give me every [human] that has as a <sibling>  a [twin]  and that is the <cast member> with <character role> [Wanda Maximoff] of a [film]",
        "Sparklis ID based": "give me every <Q5> that has as a <P3373> a <Q159979> and that is the <P161> with <P453> <Q24022542> of a <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q5_20 WHERE { ?Q5_20 wdt:<instance of> wd:[Human] . ?P3373_8 wdt:<instance of> wd:[Twin] . ?Q5_20 p:<sibling> [ ps:<sibling> ?P3373_8 ] . ?Q11424_12 wdt:<instance of> wd:[Film] . ?Q11424_12 p:<cast member> [ ps:<cast member> ?Q5_20 ; n1:<character role> wd:[Wanda Maximoff] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_20 WHERE { ?Q5_20 wdt:P31 wd:Q5 . ?P3373_8 wdt:P31 wd:Q159979 . ?Q5_20 p:P3373 [ ps:P3373 ?P3373_8 ] . ?Q11424_12 wdt:P31 wd:Q11424 . ?Q11424_12 p:P161 [ ps:P161 ?Q5_20 ; n1:P453 wd:Q24022542 ] . }",
        "Squall label based": "which [Human] has <sibling> a [Twin] and is a <cast member> at <character role> [Wanda Maximoff] of a [Film]?",
        "Squall ID based": "which <Q5> has <P3373> a <Q159979> and is a <P161> at <P453> <Q24022542> of a <Q11424>?"
    },
    {
        "Question": "Was the first Mass Effect game released before the first Dragon Age game?",
        "ID": "fe792c40",
        "Entities": "Q953242:Mass Effect, Q1766436:Dragon Age",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mass Effect] and that has the lowest-to-highest <publication date> and [Dragon Age] <has part(s)> that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q953242> and that has the lowest-to-highest <P577> and <Q1766436> <P527> that has the lowest-to-highest <P577>",
        "Sparql label based": "ASK { VALUES ?thing_1 { wd:[Dragon Age] wd:[Mass Effect] } ?thing_1 p:<publication date> [ ps:<publication date> ?P577_103 ] . }",
        "Sparql ID based": "ASK { VALUES ?thing_1 { wd:Q21233462 wd:Q275960 } ?thing_1 p:P577 [ ps:P577 ?P577_103 ] . }",
        "Squall label based": "is there a thing that is [Dragon Age] or [Mass Effect] and has a <publication date>?",
        "Squall ID based": "is there a thing that is <Q21233462> or <Q275960> and has a <P577>?"
    },
    {
        "Question": "Who won the Oscar for Best Actor for playing Hannibal Lecter?",
        "ID": "8382e886",
        "Entities": "Q211013:Hannibal Lecter, Q103916:Academy Award for Best Actor",
        "Mintaka Answer": "Q65932:Anthony Hopkins",
        "Sparklis label based": "[Hannibal Lecter] has a <performer> that <award received> [Academy Award for Best Actor]",
        "Sparklis ID based": "<Q211013> has a <P175> that <P166> <Q103916>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[Hannibal Lecter] p:<performer> [ ps:<performer> ?P175_8 ] . ?P175_8 p:<award received> [ ps:<award received> wd:[Academy Award For Best Actor] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q211013 p:P175 [ ps:P175 ?P175_8 ] . ?P175_8 p:P166 [ ps:P166 wd:Q103916 ] . }",
        "Squall label based": "what is a <performer> of [Hannibal Lecter] and has <award received> [Academy Award For Best Actor]?",
        "Squall ID based": "what is a <P175> of <Q211013> and has <P166> <Q103916>?"
    },
    {
        "Question": "Which Harry Potter movie has the longest runtime?",
        "ID": "7ba320ef",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q102244:Harry Potter and the Chamber of Secrets",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_8 p:<duration> [ ps:<duration> ?P2047_12 ] . } ORDER BY DESC(?P2047_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_8 p:P2047 [ ps:P2047 ?P2047_12 ] . } ORDER BY DESC(?P2047_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2047>?"
    },
    {
        "Question": "Who formed AC/DC?",
        "ID": "bdddc0ab",
        "Entities": "Q27593:AC/DC",
        "Mintaka Answer": "Q44653:Malcolm Young, Q43932:Angus Young",
        "Sparklis label based": "[AC/DC] has a part(s)",
        "Sparklis ID based": "<Q27593> has a part(s)",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Ac/dc] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q27593 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "what is a <has part(s)> of [Ac/dc]?",
        "Squall ID based": "what is a <P527> of <Q27593>?"
    },
    {
        "Question": "What governors of Ohio since 2000 have not been Republican?",
        "ID": "2e4cde5f",
        "Entities": "Q29468:Republican Party, Q1397:Ohio",
        "Mintaka Answer": "Q465295:Ted Strickland",
        "Sparklis label based": "give me every [human] that has as a <position held> with the lowest-to-highest <start time> [Governor of Ohio] and that not has as a <member of political party> [Republican Party] and where the year of the <start time> > 2000",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q17989863> and that not has as a <P102> <Q29468> and where the year of the <P580> > 2000",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 ?P580_13 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ n1:<start time> ?P580_13 ; ps:<position held> wd:[Governor Of Ohio] ] . FILTER ( NOT EXISTS { ?Q5_8 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( (year(?P580_13) > \"2000\"^^xsd:integer) ) } ORDER BY ASC(?P580_13) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 ?P580_13 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ n1:P580 ?P580_13 ; ps:P39 wd:Q17989863 ] . FILTER ( NOT EXISTS { ?Q5_8 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( (year(?P580_13) > \"2000\"^^xsd:integer) ) } ORDER BY ASC(?P580_13) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> whose year is greater than 2000 [Governor Of Ohio] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> whose year is greater than 2000 <Q17989863> and has not <P102> <Q29468>?"
    },
    {
        "Question": "Which Metal Gear game does not include Snake as the main character?",
        "ID": "c9ceb942",
        "Entities": "Q216655:Metal Gear, Q1621656:Solid Snake",
        "Mintaka Answer": "Q1995422:Metal Gear 2: Solid Snake",
        "Sparklis label based": "[Metal Gear 2] <has part(s)> that has as a <characters>  [Solid Snake]  and not with <narrative role> [protagonist]",
        "Sparklis ID based": "<Q216655> <P527> that has as a <P674> <Q1621656> and not with <P5800> <Q215972>",
        "Sparql label based": "SELECT DISTINCT ?P527_7 WHERE { wd:[Metal Gear 2] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . ?P527_7 p:<characters> [ ps:<characters> wd:[Solid Snake] ] . FILTER ( NOT EXISTS { ?P527_7 p:<characters> [ ps:<characters> wd:[Solid Snake] ; n1:<narrative role> wd:[Protagonist] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_7 WHERE { wd:Q216655 p:P527 [ ps:P527 ?P527_7 ] . ?P527_7 p:P674 [ ps:P674 wd:Q1621656 ] . FILTER ( NOT EXISTS { ?P527_7 p:P674 [ ps:P674 wd:Q1621656 ; n1:P5800 wd:Q215972 ] . } ) }",
        "Squall label based": "what is a <has part(s)> of [Metal Gear 2] and has <characters> [Solid Snake] and has not <characters> at <narrative role> [Protagonist] [Solid Snake]?",
        "Squall ID based": "what is a <P527> of <Q216655> and has <P674> <Q1621656> and has not <P674> at <P5800> <Q215972> <Q1621656>?"
    },
    {
        "Question": "What book was published in 2018 and won a Pulitzer Prize in 2019?",
        "ID": "46cedd69",
        "Entities": "Q46525:Pulitzer Prize",
        "Mintaka Answer": "Q56277009:The Overstory",
        "Sparklis label based": "give me every [literary work] that <award received> with a <point in time>  [Pulitzer Prize for Fiction]  and that has  a <publication date>  and where the year of the <publication date> = 2018 and where the year of the <point in time> = 2019",
        "Sparklis ID based": "give me every <Q7725634> that <P166> with a <P585> <Q833633> and that has a <P577> and where the year of the <P577> = 2018 and where the year of the <P585> = 2019",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_7 WHERE { ?Q7725634_7 wdt:<instance of> wd:[Literary Work] . ?Q7725634_7 p:<award received> [ n2:<point in time> ?P585_133 ; ps:<award received> wd:[Pulitzer Prize For Fiction] ] . ?Q7725634_7 p:<publication date> [ ps:<publication date> ?P577_43 ] . FILTER ( (year(?P577_43) = \"2018\"^^xsd:integer) ) FILTER ( (year(?P585_133) = \"2019\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_7 WHERE { ?Q7725634_7 wdt:P31 wd:Q7725634 . ?Q7725634_7 p:P166 [ n2:P585 ?P585_133 ; ps:P166 wd:Q833633 ] . ?Q7725634_7 p:P577 [ ps:P577 ?P577_43 ] . FILTER ( (year(?P577_43) = \"2018\"^^xsd:integer) ) FILTER ( (year(?P585_133) = \"2019\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <award received> at a <point in time> whose year is 2019 [Pulitzer Prize For Fiction] and has a <publication date> whose year is 2018?",
        "Squall ID based": "which <Q7725634> has <P166> at a <P585> whose year is 2019 <Q833633> and has a <P577> whose year is 2018?"
    },
    {
        "Question": "When was Steven Spielberg's first movie released?",
        "ID": "05367f43",
        "Entities": "Q8877:Steven Spielberg,1:None",
        "Mintaka Answer": "1974",
        "Sparklis label based": "give me every [film] that has as a <director> [Steven Spielberg] and that has the lowest-to-highest <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q8877> and that has the lowest-to-highest <P577> and give me the year of the <P577>",
        "Sparql label based": "select distinct ?expr_132 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . ?q11424_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . bind (year(?p577_5) as ?expr_132) } order by asc(?p577_5) limit 1",
        "Sparql ID based": "select distinct ?expr_132 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 wd:Q8877 ] . ?q11424_1 p:P577 [ ps:P577 ?p577_5 ] . bind (year(?p577_5) as ?expr_132) } order by asc(?p577_5) limit 1",
        "Squall label based": "what is the year of the lowest <publication date> of a [Film] that has <director> [Steven Spielberg]?",
        "Squall ID based": "what is the year of the lowest <P577> of a <Q11424> that has <P57> <Q8877>?"
    },
    {
        "Question": "What was the last Fast & Furious movie that Paul Walker starred in?",
        "ID": "24bb051f",
        "Entities": "Q213864:Paul Walker,Q1576873:Fast & Furious",
        "Mintaka Answer": "Q14650496:Furious 7",
        "Sparklis label based": "[Fast & Furious 2] is the <part of the series> of something that has as a <cast member> [Paul Walker] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "<Q1576873> is the <P179> of something that has as a <P161> <Q213864> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?thing_12 WHERE { ?thing_12 p:<part of the series> [ ps:<part of the series> wd:[Fast & Furious 2] ] . ?thing_12 p:<cast member> [ ps:<cast member> wd:[Paul Walker] ] . ?thing_12 p:<publication date> [ ps:<publication date> ?P577_16 ] . } ORDER BY DESC(?P577_16) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_12 WHERE { ?thing_12 p:P179 [ ps:P179 wd:Q1576873 ] . ?thing_12 p:P161 [ ps:P161 wd:Q213864 ] . ?thing_12 p:P577 [ ps:P577 ?P577_16 ] . } ORDER BY DESC(?P577_16) LIMIT 1",
        "Squall label based": "what has <part of the series> [Fast & Furious 2] and has <cast member> [Paul Walker] and has the highest <publication date>?",
        "Squall ID based": "what has <P179> <Q1576873> and has <P161> <Q213864> and has the highest <P577>?"
    },
    {
        "Question": "What year was the first Jurassic Park movie released?",
        "ID": "2fd5a4da",
        "Entities": "Q2336369:Jurassic Park,1:None",
        "Mintaka Answer": "1993",
        "Sparklis label based": "[Jurassic Park 3] has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q2336369> has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_101 WHERE { wd:[Jurassic Park 3] p:<publication date> [ ps:<publication date> ?P577_15 ] . BIND (year(?P577_15) AS ?expr_101) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_101 WHERE { wd:Q2336369 p:P577 [ ps:P577 ?P577_15 ] . BIND (year(?P577_15) AS ?expr_101) }",
        "Squall label based": "what is the year of a <publication date> of [Jurassic Park 3]?",
        "Squall ID based": "what is the year of a <P577> of <Q2336369>?"
    },
    {
        "Question": "Which Harry Potter books were not released before 2005?",
        "ID": "b771eba7",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q46887:Harry Potter and the Half-Blood Prince, Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that has a <publication date> and where the year of the <publication date> \u2265 2005",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that has a <P577> and where the year of the <P577> \u2265 2005",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_262 WHERE { ?Q7725634_262 wdt:<instance of> wd:[Literary Work] . ?Q7725634_262 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?Q7725634_262 p:<publication date> [ ps:<publication date> ?P577_298 ] . FILTER ( (year(?P577_298) >= \"2005\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_262 WHERE { ?Q7725634_262 wdt:P31 wd:Q7725634 . ?Q7725634_262 p:P179 [ ps:P179 wd:Q8337 ] . ?Q7725634_262 p:P577 [ ps:P577 ?P577_298 ] . FILTER ( (year(?P577_298) >= \"2005\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has a <publication date> whose year is greater or equal to 2005?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has a <P577> whose year is greater or equal to 2005?"
    },
    {
        "Question": "How many studio albums does Alice Cooper have?",
        "ID": "5e6c846d",
        "Entities": "Q332032:Alice Cooper",
        "Mintaka Answer": "Q1164827:Pretties for You,Q1754799:Easy Action,Q1754828:Love It to Death,Q1931937:Killer,Q262947:School's Out",
        "Sparklis label based": "give me every [album] that has as a <form of creative work> [studio album] and that has as a <performer> [Alice Cooper] and give me the number of [album]",
        "Sparklis ID based": "give me every <Q482994> that has as a <P7937> <Q208569> and that has as a <P175> <Q332032> and give me the number of <Q482994>",
        "Sparql label based": "SELECT DISTINCT ?Q482994_262 WHERE { ?Q482994_262 wdt:<instance of> wd:[Album] . ?Q482994_262 p:<form of creative work> [ ps:<form of creative work> wd:[Studio Album] ] . ?Q482994_262 p:<performer> [ ps:<performer> wd:[Alice Cooper] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_262 WHERE { ?Q482994_262 wdt:P31 wd:Q482994 . ?Q482994_262 p:P7937 [ ps:P7937 wd:Q208569 ] . ?Q482994_262 p:P175 [ ps:P175 wd:Q332032 ] . }",
        "Squall label based": "which [Album] has <form of creative work> [Studio Album] and has <performer> [Alice Cooper]?",
        "Squall ID based": "which <Q482994> has <P7937> <Q208569> and has <P175> <Q332032>?"
    },
    {
        "Question": "What Lord of the Rings book has the most words?",
        "ID": "af10528c",
        "Entities": "Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q208002:The Fellowship of the Ring",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Lord of the Rings] and that has the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228> and has the highest <P1104>?"
    },
    {
        "Question": "Was The Notebook released in 2004?",
        "ID": "bc81a65c",
        "Entities": "Q223374:The Notebook,2004:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Notebook] has a <publication date> and where the year of the <publication date> = 2004",
        "Sparklis ID based": "<Q223374> has a <P577> and where the year of the <P577> = 2004",
        "Sparql label based": "ASK { wd:[The Notebook] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER ( (year(?P577_7) = \"2004\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q223374 p:P577 [ ps:P577 ?P577_7 ] . FILTER ( (year(?P577_7) = \"2004\"^^xsd:integer) ) }",
        "Squall label based": "whether [The Notebook] has a <publication date> whose year is 2004?",
        "Squall ID based": "whether <Q223374> has a <P577> whose year is 2004?"
    },
    {
        "Question": "Which actor starred in Cry Baby and was married to Amber Heard?",
        "ID": "5577edca",
        "Entities": "Q179746:Cry-Baby,Q229166:Amber Heard",
        "Mintaka Answer": "Q37175:Johnny Depp",
        "Sparklis label based": "give me every [human] that has as an <occupation> [actor] and that is the <cast member> of [Cry-Baby] and that is the <spouse> of [Amber Heard]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q33999> and that is the <P161> of <Q179746> and that is the <P26> of <Q229166>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . wd:[Cry-baby] p:<cast member> [ ps:<cast member> ?q5_1 ] . wd:[Amber Heard] p:<spouse> [ ps:<spouse> ?q5_1 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P106 [ ps:P106 wd:Q33999 ] . wd:Q179746 p:P161 [ ps:P161 ?q5_1 ] . wd:Q229166 p:P26 [ ps:P26 ?q5_1 ] . }",
        "Squall label based": "which [Human] has <occupation> [Actor] and is a <cast member> of [Cry-baby] and is a <spouse> of [Amber Heard]?",
        "Squall ID based": "which <Q5> has <P106> <Q33999> and is a <P161> of <Q179746> and is a <P26> of <Q229166>?"
    },
    {
        "Question": "When did M\u00f6tley Cr\u00fce form?",
        "ID": "60d8ab3f",
        "Entities": "Q1808470:M\u00f6tley Cr\u00fce",
        "Mintaka Answer": "1981",
        "Sparklis label based": "[M\u00f6tley Cr\u00fce] has an <inception>",
        "Sparklis ID based": "<Q486688> has an <P571>",
        "Sparql label based": "SELECT DISTINCT ?P571_8 WHERE { wd:[M\u00f6tley Cr\u00fce] p:<inception> [ ps:<inception> ?P571_8 ] .} LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P571_8 WHERE { wd:Q486688 p:P571 [ ps:P571 ?P571_8 ] .} LIMIT 1",
        "Squall label based": "what is a <inception> of [M\u00f6tley Cr\u00fce]?",
        "Squall ID based": "what is a <P571> of <Q486688>?"
    },
    {
        "Question": "When did Usain Bolt win his first Olympic medal?",
        "ID": "9b020452",
        "Entities": "Q636830:Olympic medal,Q1189:Usain Bolt,1:None",
        "Mintaka Answer": "2008",
        "Sparklis label based": "[Usain Bolt] is the <winner> of an [Olympic sporting event] that has the lowest-to-highest <point in time> and give me the year of the <point in time>",
        "Sparklis ID based": "<Q1189> is the <P1346> of an <Q18536594> that has the lowest-to-highest <P585> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_381 WHERE { ?Q18536594_9 wdt:<instance of> wd:[Olympic Sporting Event] . ?Q18536594_9 p:<winner> [ ps:<winner> wd:[Usain Bolt] ] . ?Q18536594_9 p:<point in time> [ ps:<point in time> ?P585_254 ] . BIND (year(?P585_254) AS ?expr_381) } ORDER BY ASC(?P585_254) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_381 WHERE { ?Q18536594_9 wdt:P31 wd:Q18536594 . ?Q18536594_9 p:P1346 [ ps:P1346 wd:Q1189 ] . ?Q18536594_9 p:P585 [ ps:P585 ?P585_254 ] . BIND (year(?P585_254) AS ?expr_381) } ORDER BY ASC(?P585_254) LIMIT 1",
        "Squall label based": "what is the year of the lowest <point in time> of a [Olympic Sporting Event] that has <winner> [Usain Bolt]?",
        "Squall ID based": "what is the year of the lowest <P585> of a <Q18536594> that has <P1346> <Q1189>?"
    },
    {
        "Question": "When did Carrie, Stephen King's first novel, come out?",
        "ID": "1ac89fad",
        "Entities": "Q39829:Stephen King, Q623394:Carrie",
        "Mintaka Answer": "1974",
        "Sparklis label based": "United States of America has as an <office held by head of government> [President of the United States] that is the <position held> of something with <series ordinal> 22",
        "Sparklis ID based": "United States of America has as an <P1313> <Q11696> that is the <P39> of something with <P1545> 22",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[Carrie] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q623394 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a <publication date> of [Carrie]?",
        "Squall ID based": "what is the year of a <P577> of <Q623394>?"
    },
    {
        "Question": "Which movie was directed by Denis Villeneuve and stars Timothee Chalamet?",
        "ID": "eec08776",
        "Entities": "Q19877770:Timoth\u00e9e Chalamet,Q548823:Denis Villeneuve",
        "Mintaka Answer": "Q60834962:Dune",
        "Sparklis label based": "give me every [film] that has as a <director> [Denis Villeneuve] and that has as a <cast member> [Timoth\u00e9e Chalamet]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q548823> and that has as a <P161> <Q19877770>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Denis Villeneuve] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Timoth\u00e9e Chalamet] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q548823 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q19877770 ] . }",
        "Squall label based": "which [Film] has <director> [Denis Villeneuve] and has <cast member> [Timoth\u00e9e Chalamet]?",
        "Squall ID based": "which <Q11424> has <P57> <Q548823> and has <P161> <Q19877770>?"
    },
    {
        "Question": "How many actors have been elected president?",
        "ID": "2fe92c17",
        "Entities": "Q11696:President of the United States,Q33999:actor",
        "Mintaka Answer": "Q9960:Ronald Reagan",
        "Sparklis label based": "give me every [human] that has as an <occupation> [actor] and that is the <successful candidate> of a [United States presidential election] and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q33999> and that is the <P991> of a <Q47566> and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . ?Q47566_260 wdt:<instance of> wd:[United States Presidential Election] . ?Q47566_260 p:<successful candidate> [ ps:<successful candidate> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q33999 ] . ?Q47566_260 wdt:P31 wd:Q47566 . ?Q47566_260 p:P991 [ ps:P991 ?Q5_1 ] . }",
        "Squall label based": "which [Human] has <occupation> [Actor] and is a <successful candidate> of a [United States Presidential Election]?",
        "Squall ID based": "which <Q5> has <P106> <Q33999> and is a <P991> of a <Q47566>?"
    },
    {
        "Question": "What is the first movie in the Hunger Games series?",
        "ID": "204812000000",
        "Entities": "Q11885031:The Hunger Games,1:None",
        "Mintaka Answer": "Q212965:The Hunger Games",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 1 [The Hunger Games 4]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 1 <Q11885031>",
        "Sparql label based": "select distinct ?q11424_8 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<part of the series> [ n1:<series ordinal> \"1\" ; ps:<part of the series> wd:[The Hunger Games 4] ] . }",
        "Sparql ID based": "select distinct ?q11424_8 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P179 [ n1:P1545 \"1\" ; ps:P179 wd:Q11885031 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"1\" [The Hunger Games 4]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"1\" <Q11885031>?"
    },
    {
        "Question": "Who was Mark Antony's third wife?",
        "ID": "d2255453",
        "Entities": "Q51673:Mark Antony,3:None",
        "Mintaka Answer": "Q233077:Fulvia",
        "Sparklis label based": "[Mark Antony] has a <spouse> with <series ordinal> 3",
        "Sparklis ID based": "<Q51673> has a <P26> with <P1545> 3",
        "Sparql label based": "select distinct ?p26_6 where { wd:[Mark Antony] p:<spouse> [ ps:<spouse> ?p26_6 ; n1:<series ordinal> \"3\" ] . }",
        "Sparql ID based": "select distinct ?p26_6 where { wd:Q51673 p:P26 [ ps:P26 ?p26_6 ; n1:P1545 \"3\" ] . }",
        "Squall label based": "what is a <spouse> at <series ordinal> \"3\" of [Mark Antony]?",
        "Squall ID based": "what is a <P26> at <P1545> \"3\" of <Q51673>?"
    },
    {
        "Question": "Which Transformers movie is the longest?",
        "ID": "fb4f01b0",
        "Entities": "Q2073466:Transformers",
        "Mintaka Answer": "Q6151665:Transformers: Age of Extinction",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Transformers 3] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2073466> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[Transformers 3] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q2073466 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Transformers 3] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q2073466> and has the highest <P2047>?"
    },
    {
        "Question": "Which movie was directed by Martin Scorsese and starred Daniel Day-Lewis?",
        "ID": "247f56fb",
        "Entities": "Q41148:Martin Scorsese,Q166389:Daniel Day-Lewis",
        "Mintaka Answer": "Q154581:Gangs of New York",
        "Sparklis label based": "give me every [film] that has as a <director> [Martin Scorsese] and that has as a <cast member> [Daniel Day-Lewis]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q41148> and that has as a <P161> <Q166389>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Martin Scorsese] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Daniel Day-lewis] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q41148 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q166389 ] . }",
        "Squall label based": "which [Film] has <director> [Martin Scorsese] and has <cast member> [Daniel Day-lewis]?",
        "Squall ID based": "which <Q11424> has <P57> <Q41148> and has <P161> <Q166389>?"
    },
    {
        "Question": "How many Academy Awards did The Father movie win?",
        "ID": "7a859d8b",
        "Entities": "Q65066669:The Father,Q19020:Academy Awards",
        "Mintaka Answer": "Q107258:Academy Award for Best Writing, Adapted Screenplay,Q103916:Academy Award for Best Actor",
        "Sparklis label based": "[The Father] <award received> an [Academy Awards] and give me the number of [Academy Awards]",
        "Sparklis ID based": "<Q65066669> <P166> an <Q19020> and give me the number of <Q19020>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_47) WHERE { ?Q19020_8 wdt:<instance of> wd:[Academy Awards] . wd:[The Father] p:<award received> [ ps:<award received> ?Q19020_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_47) WHERE { ?Q19020_8 wdt:P31 wd:Q19020 . wd:Q65066669 p:P166 [ ps:P166 ?Q19020_8 ] . }",
        "Squall label based": "how many [Academy Awards] is a <award received> of [The Father]?",
        "Squall ID based": "how many <Q19020> is a <P166> of <Q65066669>?"
    },
    {
        "Question": "Which Harry Potter movie made the least money?",
        "ID": "b24c4dc6",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q102448:Harry Potter and the Prisoner of Azkaban",
        "Sparklis label based": "give me every [film] that has the lowest-to-highest <box office> and that has as a <part of the series> [Harry Potter film series]",
        "Sparklis ID based": "give me every <Q11424> that has the lowest-to-highest <P2142> and that has as a <P179> <Q216930>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<box office> [ ps:<box office> ?P2142_7 ] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . } ORDER BY ASC(?P2142_7) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P2142 [ ps:P2142 ?P2142_7 ] . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ] . } ORDER BY ASC(?P2142_7) LIMIT 1",
        "Squall label based": "which [Film] has the lowest <box office> and has <part of the series> [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has the lowest <P2142> and has <P179> <Q216930>?"
    },
    {
        "Question": "Which Quentin Tarantino movie made the most money?",
        "ID": "37fe2b75",
        "Entities": "Q3772:Quentin Tarantino",
        "Mintaka Answer": "Q571032:Django Unchained",
        "Sparklis label based": "give me every [film] that has the highest-to-lowest <box office> and that has as a <director> [Quentin Tarantino]",
        "Sparklis ID based": "give me every <Q11424> that has the highest-to-lowest <P2142> and that has as a <P57> <Q3772>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<box office> [ ps:<box office> ?P2142_7 ] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . } ORDER BY ASC(?P2142_7) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P2142 [ ps:P2142 ?P2142_7 ] . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ] . } ORDER BY ASC(?P2142_7) LIMIT 1",
        "Squall label based": "which [Film] has the lowest <box office> and has <part of the series> [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has the lowest <P2142> and has <P179> <Q216930>?"
    },
    {
        "Question": "Who was formerly a footballer and now a president?",
        "ID": "d4aafc5e",
        "Entities": "Q5466448:Footballer, Q30461:president",
        "Mintaka Answer": "Q173139:George Weah",
        "Sparklis label based": "give me every [human] that has a <position held> that is the <subclass of> [president] and that has as an <occupation> [association football player] and [politician]",
        "Sparklis ID based": "give me every <Q5> that has a <P39> that is the <P279> <Q30461> and that has as an <P106> <Q937857> and <Q82955>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P39_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> ?P39_9 ] . ?P39_9 p:<subclass of> [ ps:<subclass of> wd:[President] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Association Football Player] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Politician] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P39_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 ?P39_9 ] . ?P39_9 p:P279 [ ps:P279 wd:Q30461 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q937857 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q82955 ] . }",
        "Squall label based": "which [Human] has <occupation> [Association Football Player] and [Politician] and has a <position held> that has <subclass of> [President]?",
        "Squall ID based": "which <Q5> has <P106> <Q937857> and <Q82955> and has a <P39> that has <P279> <Q30461>?"
    },
    {
        "Question": "What is the largest city in Oregon by population?",
        "ID": "97c651a9",
        "Entities": "Q824:Oregon",
        "Mintaka Answer": "Q6106:Portland",
        "Sparklis label based": "give me every [city of Oregon] that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q63440326> that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q63440326_1 WHERE { ?Q63440326_1 wdt:<instance of> wd:[City Of Oregon] . ?Q63440326_1 p:<population> [ ps:<population> ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q63440326_1 WHERE { ?Q63440326_1 wdt:P31 wd:Q63440326 . ?Q63440326_1 p:P1082 [ ps:P1082 ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Squall label based": "which [City Of Oregon] has the highest <population>?",
        "Squall ID based": "which <Q63440326> has the highest <P1082>?"
    },
    {
        "Question": "Who played Max Schreck in Batman?",
        "ID": "8b7f1fc2",
        "Entities": "Q18914861:Batman,Q6007347:Max Shreck",
        "Mintaka Answer": "Q185051:Christopher Walken",
        "Sparklis label based": "give me every [human] that is the <cast member> of a [film] that has as a <part of the series> [Batman] and that is the <performer> of [Max Shreck]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> that has as a <P179> <Q18914861> and that is the <P175> of <Q6007347>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q11424_38 wdt:<instance of> wd:[Film] . ?Q11424_38 p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q11424_38 p:<part of the series> [ ps:<part of the series> wd:[Batman] ] . wd:[Max Shreck] p:<performer> [ ps:<performer> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q11424_38 wdt:P31 wd:Q11424 . ?Q11424_38 p:P161 [ ps:P161 ?Q5_1 ] . ?Q11424_38 p:P179 [ ps:P179 wd:Q18914861 ] . wd:Q6007347 p:P175 [ ps:P175 ?Q5_1 ] . }",
        "Squall label based": "which [Human] is a <performer> of [Max Shreck] and is a <cast member> of a [Film] that has <part of the series> [Batman]?",
        "Squall ID based": "which <Q5> is a <P175> of <Q6007347> and is a <P161> of a <Q11424> that has <P179> <Q18914861>?"
    },
    {
        "Question": "What is the longest road in Arizona?",
        "ID": "8468efbe",
        "Entities": "Q816:Arizona",
        "Mintaka Answer": "Q472552:U.S. Route 191",
        "Sparklis label based": "give me every [road] that has as a <located in the administrative territorial entity> [Arizona] and that has the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q34442> that has as a <P131> <Q816> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q34442_1 ?P2043_5 WHERE { ?Q34442_1 wdt:<instance of> wd:[Road] . ?Q34442_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Arizona] ] . ?Q34442_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q34442_1 ?P2043_5 WHERE { ?Q34442_1 wdt:P31 wd:Q34442 . ?Q34442_1 p:P131 [ ps:P131 wd:Q816 ] . ?Q34442_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [Road] has <located in the administrative territorial entity> [Arizona] and has the highest <length>?",
        "Squall ID based": "which <Q34442> has <P131> <Q816> and has the highest <P2043>?"
    },
    {
        "Question": "How many NBA teams did Russell Westbrook play for?",
        "ID": "5f1687ae",
        "Entities": "Q155223:National Basketball Association, Q196185:Russell Westbrook",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Russell Westbrook] has as a <league> [National Basketball Association] and has a <member of sports team> that has as a <league> [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q196185> has as a <P118> <Q155223> and has a <P54> that has as a <P118> <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:[Russell Westbrook] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ] . ?P54_4 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:Q196185 p:P54 [ ps:P54 ?P54_4 ] . ?P54_4 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Russell Westbrook] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q196185> and has <P118> <Q155223>?"
    },
    {
        "Question": "In what year was Kamala Harris proclaimed the first female vice president of America?",
        "ID": "9373539b",
        "Entities": "Q11699:Vice President of the United States, Q10853588:Kamala Harris",
        "Mintaka Answer": "2021",
        "Sparklis label based": "[Kamala Harris] has as a <position held> with a <start time> [Vice President of the United States] and give me the year of the <start time>",
        "Sparklis ID based": "<Q10853588> has as a <P39> with a <P580> <Q11699> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[Kamala Harris] p:<position held> [ n1:<start time> ?P580_4 ; ps:<position held> wd:[Vice President Of The United States] ] . BIND (year(?P580_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q10853588 p:P39 [ n1:P580 ?P580_4 ; ps:P39 wd:Q11699 ] . BIND (year(?P580_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a thing at which <start time> [Kamala Harris] has <position held> [Vice President Of The United States]?",
        "Squall ID based": "what is the year of a thing at which <P580> <Q10853588> has <P39> <Q11699>?"
    },
    {
        "Question": "What is the shortest song on Michael Jackson's Off the Wall album?",
        "ID": "a6cfd68c",
        "Entities": "Q2831:Michael Jackson, Q44289:Off the Wall",
        "Mintaka Answer": "Q49834:Girlfriend",
        "Sparklis label based": "[Off the Wall] has a <tracklist> that has the lowest-to-highest <duration>",
        "Sparklis ID based": "<Q44289> has a <P658> that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?P658_4 WHERE {wd:[Off The Wall] p:<tracklist> [ ps:<tracklist> ?P658_4 ] . ?P658_4 p:<duration> [ ps:<duration> ?P2047_42 ] . } ORDER BY ASC(?P2047_42) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P658_4 WHERE {wd:Q44289 p:P658 [ ps:P658 ?P658_4 ] . ?P658_4 p:P2047 [ ps:P2047 ?P2047_42 ] . } ORDER BY ASC(?P2047_42) LIMIT 1",
        "Squall label based": "what is a <tracklist> of [Off The Wall] and has the lowest <duration>?",
        "Squall ID based": "what is a <P658> of <Q44289> and has the lowest <P2047>?"
    },
    {
        "Question": "What is the best-selling Halo game of all time?",
        "ID": "352f2674",
        "Entities": "Q1747150:Halo",
        "Mintaka Answer": "Q16888147:Halo 5: Guardians",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Halo] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q1747150> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Halo] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q1747150 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Halo] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1747150> and has the highest <P2664>?"
    },
    {
        "Question": "What is the last book in the Wheel of Time series by Robert Jordan and Brandon Sanderson?",
        "ID": "71e90a04",
        "Entities": "Q457608:Brandon Sanderson, Q166351:Robert Jordan, Q4470:The Wheel of Time",
        "Mintaka Answer": "Q2819819:A Memory of Light",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Brandon Sanderson] and [Robert Jordan] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q457608> and <Q166351> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_7 WHERE { ?Q7725634_7 wdt:<instance of> wd:[Literary Work] . ?Q7725634_7 p:<author> [ ps:<author> wd:[Brandon Sanderson] ] . ?Q7725634_7 p:<author> [ ps:<author> wd:[Robert Jordan] ] . ?Q7725634_7 p:<publication date> [ ps:<publication date> ?P577_43 ] . } ORDER BY DESC(?P577_43) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_7 WHERE { ?Q7725634_7 wdt:P31 wd:Q7725634 . ?Q7725634_7 p:P50 [ ps:P50 wd:Q457608 ] . ?Q7725634_7 p:P50 [ ps:P50 wd:Q166351 ] . ?Q7725634_7 p:P577 [ ps:P577 ?P577_43 ] . } ORDER BY DESC(?P577_43) LIMIT 1",
        "Squall label based": "which [Literary Work] has <author> [Brandon Sanderson] and [Robert Jordan] and has the highest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P50> <Q457608> and <Q166351> and has the highest <P577>?"
    },
    {
        "Question": "In which year did the first Lord of the Rings movie come out?",
        "ID": "0043c890",
        "Entities": "Q190214:The Lord of the Rings trilogy,1:None",
        "Mintaka Answer": "2001",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 1 [The Lord of the Rings trilogy] and that has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 1 <Q190214> and that has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_128 WHERE { ?Q11424_7 wdt:<instance of> wd:[Film] . ?Q11424_7 p:<part of the series> [ n1:<series ordinal> \"1\" ; ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . ?Q11424_7 p:<publication date> [ ps:<publication date> ?P577_43 ] . BIND (year(?P577_43) AS ?expr_128) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_128 WHERE { ?Q11424_7 wdt:P31 wd:Q11424 . ?Q11424_7 p:P179 [ n1:P1545 \"1\" ; ps:P179 wd:Q190214 ] . ?Q11424_7 p:P577 [ ps:P577 ?P577_43 ] . BIND (year(?P577_43) AS ?expr_128) } LIMIT 1",
        "Squall label based": "what is the year of a <publication date> of a [Film] that has <part of the series> at <series ordinal> \"1\" [The Lord Of The Rings Trilogy]?",
        "Squall ID based": "what is the year of a <P577> of a <Q11424> that has <P179> at <P1545> \"1\" <Q190214>?"
    },
    {
        "Question": "What year did the Second World War end?",
        "ID": "25253472",
        "Entities": "Q362:World War II",
        "Mintaka Answer": "1945",
        "Sparklis label based": "[World War II] has an <end time> and give me the year of the <end time>",
        "Sparklis ID based": "<Q362> has an <P582> and give me the year of the <P582>",
        "Sparql label based": "SELECT DISTINCT ?expr_94 WHERE { wd:[World War Ii] p:<end time> [ ps:<end time> ?P582_8 ] . BIND (year(?P582_8) AS ?expr_94) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_94 WHERE { wd:Q362 p:P582 [ ps:P582 ?P582_8 ] . BIND (year(?P582_8) AS ?expr_94) }",
        "Squall label based": "what is the year of a <end time> of [World War Ii]?",
        "Squall ID based": "what is the year of a <P582> of <Q362>?"
    },
    {
        "Question": "Which movie in 2002 was Ian McKellen nominated for Best Actor in a Supporting Role but lost?",
        "ID": "0bc0a879",
        "Entities": "Q170510:Ian McKellen, Q106291:Academy Award for Best Supporting Actor",
        "Mintaka Answer": "Q127367:The Lord of the Rings: The Fellowship of the Ring",
        "Sparklis label based": "Ian McKellen is nominated for  Academy Award for Best Supporting Actor with a for work with a point in time  and give me the year of the point in time that is 2002",
        "Sparklis ID based": "Ian McKellen is nominated for Academy Award for Best Supporting Actor with a for work with a point in time and give me the year of the point in time that is 2002",
        "Sparql label based": "SELECT DISTINCT ?P1686_7 WHERE { wd:[Ian Mckellen] p:<nominated for> [ ps:<nominated for> wd:[Academy Award For Best Supporting Actor] ; pq:<for work> ?P1686_7 ; pq:<point in time> ?P585_10 ] . BIND (year(?P585_10) AS ?expr_95) FILTER ( ?expr_95 = \"2002\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_7 WHERE { wd:Q170510 p:P1411 [ ps:P1411 wd:Q106291 ; pq:P1686 ?P1686_7 ; pq:P585 ?P585_10 ] . BIND (year(?P585_10) AS ?expr_95) FILTER ( ?expr_95 = \"2002\"^^xsd:integer ) }",
        "Squall label based": "at which <for work> [Ian Mckellen] has <nominated for> at a <point in time> whose year is 2002 [Academy Award For Best Supporting Actor]?",
        "Squall ID based": "at which <P1686> <Q170510> has <P1411> at a <P585> whose year is 2002 <Q106291>?"
    },
    {
        "Question": "What is the oldest book in the Goosebumps series by author R.L. Stine?",
        "ID": "c5dc4e4d",
        "Entities": "Q3260367:Goosebumps, Q333123:R. L. Stine",
        "Mintaka Answer": "Q2346143:Stay Out of the Basement",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Goosebumps] and that has as an <author> [R. L. Stine] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q3260367> and that has as an <P50> <Q333123> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Goosebumps] ] . ?Q7725634_1 p:<author> [ ps:<author> wd:[R. L. Stine] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q3260367 ] . ?Q7725634_1 p:P50 [ ps:P50 wd:Q333123 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Goosebumps] and has <author> [R. L. Stine] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q3260367> and has <P50> <Q333123> and has the lowest <P577>?"
    },
    {
        "Question": "Who was a U.S. president and was born on February 22, 1732?",
        "ID": "ecafb25d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q23:George Washington",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] and that has as a <date of birth> 1732-02-22T00:00:00Z",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has as a <P569> 1732-02-22T00:00:00Z",
        "Sparql label based": "SELECT DISTINCT ?Q5_14 WHERE { ?Q5_14 wdt:<instance of> wd:[Human] . ?Q5_14 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_14 p:<date of birth> [ ps:<date of birth> \"1732-02-22T00:00:00Z\"^^xsd:dateTime ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_14 WHERE { ?Q5_14 wdt:P31 wd:Q5 . ?Q5_14 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_14 p:P569 [ ps:P569 \"1732-02-22T00:00:00Z\"^^xsd:dateTime ] . }",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has <date of birth> 1732-02-22T00:00:00Z?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has <P569> 1732-02-22T00:00:00Z?"
    },
    {
        "Question": "Who ran for president in 2008 and was from the state of Arizona?",
        "ID": "1683af7d",
        "Entities": "Q11696:President of the United States,Q816:Arizona,2008:None",
        "Mintaka Answer": "Q10390:John McCain",
        "Sparklis label based": "give me every [human] that is the <candidate> of [2008 United States presidential election] and that has as an <occupation> [naval officer] and that has as a <country of citizenship> [United States of America]",
        "Sparklis ID based": "give me every <Q5> that is the <P726> of <Q45578> and that has as an <P106> <Q10669499> and that has as a <P27> <Q30>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[2008 United States Presidential Election] p:<candidate> [ ps:<candidate> ?q5_1 ] . ?q5_1 p:<occupation> [ ps:<occupation> wd:[Naval Officer] ] . ?q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[United States Of America] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q45578 p:P726 [ ps:P726 ?q5_1 ] . ?q5_1 p:P106 [ ps:P106 wd:Q10669499 ] . ?q5_1 p:P27 [ ps:P27 wd:Q30 ] . }",
        "Squall label based": "which [Human] is a <candidate> of [2008 United States Presidential Election] and has <occupation> [Naval Officer] and has <country of citizenship> [United States Of America]?",
        "Squall ID based": "which <Q5> is a <P726> of <Q45578> and has <P106> <Q10669499> and has <P27> <Q30>?"
    },
    {
        "Question": "Which Spider-Man movie had the smallest budget?",
        "ID": "e63bc905",
        "Entities": "Q484442:Spider-Man",
        "Mintaka Answer": "Q29588607:Spider-Man: Into the Spider-Verse",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Spider-Man in film] and that has the lowest-to-highest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2307877> and that has the lowest-to-highest <P2130>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_14 ?P2130_50 WHERE { ?Q11424_14 wdt:<instance of> wd:[Film] . ?Q11424_14 p:<part of the series> [ ps:<part of the series> wd:[Spider-man In Film] ] . ?Q11424_14 p:<cost> [ ps:<cost> ?P2130_50 ] . } ORDER BY ASC(?P2130_50) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_14 ?P2130_50 WHERE { ?Q11424_14 wdt:P31 wd:Q11424 . ?Q11424_14 p:P179 [ ps:P179 wd:Q2307877 ] . ?Q11424_14 p:P2130 [ ps:P2130 ?P2130_50 ] . } ORDER BY ASC(?P2130_50) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Spider-man In Film] and has the lowest <cost>?",
        "Squall ID based": "which <Q11424> has <P179> <Q2307877> and has the lowest <P2130>?"
    },
    {
        "Question": "What was the fifth book in the Wheel of Time series?",
        "ID": "486e9728",
        "Entities": "Q4470:The Wheel of Time,5:None",
        "Mintaka Answer": "Q2308541:The Fires of Heaven",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 5 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 5 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"5\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"5\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"5\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"5\" <Q4470>?"
    },
    {
        "Question": "What is the second book in Stephen King's Dark Tower series?",
        "ID": "7b0d9fe0",
        "Entities": "Q39829:Stephen King, Q280898:The Dark Tower",
        "Mintaka Answer": "Q1256948:The Dark Tower II: The Drawing of the Three",
        "Sparklis label based": "[The Dark Tower 2] has as an <author> [Stephen King] and <has part(s)> with <series ordinal> 2",
        "Sparklis ID based": "<Q280898> has as an <P50> <Q39829> and <P527> with <P1545> 2",
        "Sparql label based": "SELECT DISTINCT ?P527_4 WHERE { wd:[The Dark Tower 2] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ; n1:<series ordinal> \"2\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_4 WHERE { wd:Q280898 p:P527 [ ps:P527 ?P527_4 ; n1:P1545 \"2\" ] . }",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"2\" of [The Dark Tower 2]?",
        "Squall ID based": "what is a <P527> at <P1545> \"2\" of <Q280898>?"
    },
    {
        "Question": "Was John Steinbeck born before John Updike?",
        "ID": "d61242dd",
        "Entities": "Q105756:John Updike, Q39212:John Steinbeck",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[John Updike] has a <date of birth> and [John Steinbeck] has a <date of birth>",
        "Sparklis ID based": "<Q105756> has a <P569> and <Q39212> has a <P569>",
        "Sparql label based": "ASK { wd:[John Steinbeck] p:<date of birth> [ ps:<date of birth> ?area1 ] . wd:[John Updike] p:<date of birth> [ ps:<date of birth> ?area2 ] . FILTER (?area1 < ?area2) }",
        "Sparql ID based": "ASK { wd:Q39212 p:P569 [ ps:P569 ?area1 ] . wd:Q105756 p:P569 [ ps:P569 ?area2 ] . FILTER (?area1 < ?area2) }",
        "Squall label based": "whether [John Steinbeck] has a <date of birth> lesser than a <date of birth> of [John Updike]?",
        "Squall ID based": "whether <Q39212> has a <P569> lesser than a <P569> of <Q105756>?"
    },
    {
        "Question": "When did George W. Bush win his second term as U.S. president?",
        "ID": "44897acd",
        "Entities": "Q30:United States of America, Q207:George W. Bush",
        "Mintaka Answer": "26 June",
        "Sparklis label based": "[George W. Bush] has as a <position held> elected in [2004 United States presidential election] that has as a <country> [United States of America] and that has a <point in time> [President of the United States] and give me the year of the <point in time>",
        "Sparklis ID based": "<Q207> has as a <P39> elected in <Q464075> that has as a <P17> <Q30> and that has a <P585> <Q11696> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?P585_8 WHERE {wd:[2004 United States Presidential Election] p:<point in time> [ ps:<point in time> ?P585_8 ] . BIND (year(?P585_8) AS ?expr_94) }",
        "Sparql ID based": "SELECT DISTINCT ?P585_8 WHERE {wd:Q464075 p:P585 [ ps:P585 ?P585_8 ] . BIND (year(?P585_8) AS ?expr_94) }",
        "Squall label based": "what is a <point in time> of [2004 United States Presidential Election] and has a year?",
        "Squall ID based": "what is a <P585> of <Q464075> and has a year?"
    },
    {
        "Question": "Which Pirates of the Caribbean movie had the largest budget?",
        "ID": "6746a8ec",
        "Entities": "Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q183555:Pirates of the Caribbean: On Stranger Tides",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and that has the highest-to-lowest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and that has the highest-to-lowest <P2130>",
        "Sparql label based": "select distinct ?q11424_8 ?p2130_15 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . ?q11424_8 p:<cost> [ ps:<cost> ?p2130_15 ] . } order by desc(?p2130_15) limit 1",
        "Sparql ID based": "select distinct ?q11424_8 ?p2130_15 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P179 [ ps:P179 wd:Q194318 ] . ?q11424_8 p:P2130 [ ps:P2130 ?p2130_15 ] . } order by desc(?p2130_15) limit 1",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has the highest <cost>?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has the highest <P2130>?"
    },
    {
        "Question": "Which members of NSYNC were not born in New York?",
        "ID": "41fc7982",
        "Entities": "Q154454:NSYNC,Q1384:New York",
        "Mintaka Answer": "Q3311525:Chris Kirkpatrick,Q43432:Justin Timberlake,Q538409:JC Chasez,Q443120:Lance Bass",
        "Sparklis label based": "[NSYNC] is the <instance of> [boy band] and <has part(s)> that has a <place of birth> that not has as a <Commons category> [Brooklyn] [New York City]",
        "Sparklis ID based": "<Q154454> is the <P31> <Q216337> and <P527> that has a <P19> that not has as a <P373> <Q18419> <Q60>",
        "Sparql label based": "SELECT DISTINCT ?P463_9 WHERE { ?P463_9 p:<member of> [ ps:<member of> wd:[Nsync] ] . FILTER ( NOT EXISTS { ?P463_9 p:<place of birth> [ ps:<place of birth> ?P19_112 ] . ?P19_112 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[New York City] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_9 WHERE { ?P463_9 p:P463 [ ps:P463 wd:Q154454 ] . FILTER ( NOT EXISTS { ?P463_9 p:P19 [ ps:P19 ?P19_112 ] . ?P19_112 p:P131 [ ps:P131 wd:Q60 ] . } ) }",
        "Squall label based": "what has <member of> [Nsync] and has not a <place of birth> that has <located in the administrative territorial entity> [New York City]?",
        "Squall ID based": "what has <P463> <Q154454> and has not a <P19> that has <P131> <Q60>?"
    },
    {
        "Question": "What is the shortest movie to win an Oscar?",
        "ID": "6c8215df",
        "Entities": "Q19020:Academy Awards",
        "Mintaka Answer": "Q1729448:The Crunch Bird",
        "Sparklis label based": "give me every [short film] that <award received> something that is the <instance of> [Academy Awards] and that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me every <Q24862> that <P166> something that is the <P31> <Q19020> and that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q24862_7 WHERE { ?Q24862_7 wdt:<instance of> wd:[Short Film] . ?Q24862_7 p:<award received> [ ps:<award received> ?P31_108 ] . ?P31_108 p:<instance of> [ ps:<instance of> wd:[Academy Awards] ] . ?Q24862_7 p:<duration> [ ps:<duration> ?P2047_144 ] . } ORDER BY ASC(?P2047_144) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q24862_7 WHERE { ?Q24862_7 wdt:P31 wd:Q24862 . ?Q24862_7 p:P166 [ ps:P166 ?P31_108 ] . ?P31_108 p:P31 [ ps:P31 wd:Q19020 ] . ?Q24862_7 p:P2047 [ ps:P2047 ?P2047_144 ] . } ORDER BY ASC(?P2047_144) LIMIT 1",
        "Squall label based": "which [Short Film] has the lowest <duration> and has a <award received> that has <instance of> [Academy Awards]?",
        "Squall ID based": "which <Q24862> has the lowest <P2047> and has a <P166> that has <P31> <Q19020>?"
    },
    {
        "Question": "How did Charles Bukowski die?",
        "ID": "8bccb85f",
        "Entities": "Q76409:Charles Bukowski",
        "Mintaka Answer": "Q10737:suicide",
        "Sparklis label based": "[Charles Bukowski] has a cause of <cause of death>",
        "Sparklis ID based": "<Q76409> has a cause of <P509>",
        "Sparql label based": "SELECT DISTINCT ?P509_8 WHERE { wd:[Charles Bukowski] p:<cause of death> [ ps:<cause of death> ?P509_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P509_8 WHERE { wd:Q76409 p:P509 [ ps:P509 ?P509_8 ] . }",
        "Squall label based": "what is a <cause of death> of [Charles Bukowski]?",
        "Squall ID based": "what is a <P509> of <Q76409>?"
    },
    {
        "Question": "What is the longest underwater tunnel in Denmark?",
        "ID": "457e360f",
        "Entities": "Q35:Denmark",
        "Mintaka Answer": "Q213962:Great Belt Fixed Link",
        "Sparklis label based": "give me every [bridge tunnel] that has as a <country> [Denmark] and that has the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q5456378> that has as a <P17> <Q35> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q5456378_1 WHERE { ?Q5456378_1 wdt:<instance of> wd:[Bridge Tunnel] . ?Q5456378_1 p:<country> [ ps:<country> wd:[Denmark] ] . ?Q5456378_1 p:<length> [ ps:<length> ?P2043_8 ] . } ORDER BY DESC(?P2043_8) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5456378_1 WHERE { ?Q5456378_1 wdt:P31 wd:Q5456378 . ?Q5456378_1 p:P17 [ ps:P17 wd:Q35 ] . ?Q5456378_1 p:P2043 [ ps:P2043 ?P2043_8 ] . } ORDER BY DESC(?P2043_8) LIMIT 1",
        "Squall label based": "which [Bridge Tunnel] has <country> [Denmark] and has the highest <length>?",
        "Squall ID based": "which <Q5456378> has <P17> <Q35> and has the highest <P2043>?"
    },
    {
        "Question": "How many teams has Kristaps Porzi\u0146\u0123is played for in the NBA?",
        "ID": "539052f1",
        "Entities": "Q155223:National Basketball Association, Q14834367:Kristaps Porzi\u0146\u0123is",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Kristaps Porzi\u0146\u0123is] has a <member of sports team> that has as a <league> [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q14834367> has a <P54> that has as a <P118> <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_7) AS ?number_of_44) WHERE { wd:[Kristaps Porzi\u0146\u0123is] p:<member of sports team> [ ps:<member of sports team> ?P54_7 ] . ?P54_7 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_7) AS ?number_of_44) WHERE { wd:Q14834367 p:P54 [ ps:P54 ?P54_7 ] . ?P54_7 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Kristaps Porzi\u0146\u0123is] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q14834367> and has <P118> <Q155223>?"
    },
    {
        "Question": "Who was the first African-American woman to become a senator?",
        "ID": "1277114b",
        "Entities": "Q49085:African Americans,Q15686806:senator,1:None",
        "Mintaka Answer": "Q289396:Carol Moseley Braun",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with the lowest-to-highest <start time> and that has as a <sex or gender> [female] and that has as an <ethnic group> [African Americans]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072> and that has as an <P172> <Q49085>",
        "Sparql label based": "select distinct ?q5_1 ?p580_9 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n2:<start time> ?p580_9 ] . ?q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . ?q5_1 p:<ethnic group> [ ps:<ethnic group> wd:[African Americans] ] . } order by asc(?p580_9) limit 1",
        "Sparql ID based": "select distinct ?q5_1 ?p580_9 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n2:P580 ?p580_9 ] . ?q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . ?q5_1 p:P172 [ ps:P172 wd:Q49085 ] . } order by asc(?p580_9) limit 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [United States Senator] and has <sex or gender> [Female] and has <ethnic group> [African Americans]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4416090> and has <P21> <Q6581072> and has <P172> <Q49085>?"
    },
    {
        "Question": "Which movie was directed by George Lucas and came out in 1973?",
        "ID": "1353ac48",
        "Entities": "Q38222:George Lucas,1973:None",
        "Mintaka Answer": "Q375855:American Graffiti",
        "Sparklis label based": "give me every [film] that has as a <director> [George Lucas] and that has a <publication date> and where the year of the <publication date> = 1973",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q38222> and that has a <P577> and where the year of the <P577> = 1973",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[George Lucas] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . FILTER ( (year(?P577_38) = \"1973\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q38222 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_38 ] . FILTER ( (year(?P577_38) = \"1973\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [George Lucas] and has a <publication date> whose year is 1973?",
        "Squall ID based": "which <Q11424> has <P57> <Q38222> and has a <P577> whose year is 1973?"
    },
    {
        "Question": "What was the second Harry Potter movie chronologically?",
        "ID": "6ebcd5cc",
        "Entities": "Q216930:Harry Potter film series,2:None",
        "Mintaka Answer": "Q102244:Harry Potter and the Chamber of Secrets",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 2 [Harry Potter film series]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 2 <Q216930>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[Harry Potter Film Series] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q216930 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"2\" [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"2\" <Q216930>?"
    },
    {
        "Question": "What is the second Thor movie starring Chris Hemsworth?",
        "ID": "697b96dd",
        "Entities": "Q88306753:Thor,Q54314:Chris Hemsworth,2:None",
        "Mintaka Answer": "Q1201853:Thor: The Dark World",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Thor 2] and that has as a <cast member> [Chris Hemsworth] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q88306753> and that has as a <P161> <Q54314> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Thor 2] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Chris Hemsworth] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1 OFFSET 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q88306753 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q54314 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1 OFFSET 1",
        "Squall label based": "which [Film] has <part of the series> [Thor 2] and has <cast member> [Chris Hemsworth] and has the 2nd lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q88306753> and has <P161> <Q54314> and has the 2nd lowest <P577>?"
    },
    {
        "Question": "When was the first Jaws movie released?",
        "ID": "808b947d",
        "Entities": "Q189505:Jaws,1:None",
        "Mintaka Answer": "1975",
        "Sparklis label based": "give me every [film] that has as a part of the series [Jaws] and that has the lowest-to-highest <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a part of the series <Q6166233> and that has the lowest-to-highest <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_256 WHERE { ?Q11424_93 wdt:<instance of> wd:[Film] . ?Q11424_93 p:<part of the series> [ ps:<part of the series> wd:[Jaws] ] . ?Q11424_93 p:<publication date> [ ps:<publication date> ?P577_129 ] . BIND (year(?P577_129) AS ?expr_256) } ORDER BY ASC(?P577_129) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_256 WHERE { ?Q11424_93 wdt:P31 wd:Q11424 . ?Q11424_93 p:P179 [ ps:P179 wd:Q6166233 ] . ?Q11424_93 p:P577 [ ps:P577 ?P577_129 ] . BIND (year(?P577_129) AS ?expr_256) } ORDER BY ASC(?P577_129) LIMIT 1",
        "Squall label based": "what is the year of the lowest <publication date> of a [Film] that has <part of the series> [Jaws]?",
        "Squall ID based": "what is the year of the lowest <P577> of a <Q11424> that has <P179> <Q6166233>?"
    },
    {
        "Question": "Who was the first woman Senator?",
        "ID": "9cde1d00",
        "Entities": "Q467:woman,Q4416090:United States senator,1:None",
        "Mintaka Answer": "Q271243:Rebecca Latimer Felton",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with the lowest-to-highest <start time> and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n2:<start time> ?P580_9 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n2:P580 ?P580_9 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [United States Senator] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4416090> and has <P21> <Q6581072>?"
    },
    {
        "Question": "What is the fourth Star Wars movie titled?",
        "ID": "3d5aa71a",
        "Entities": "Q462:Star Wars,4:None",
        "Mintaka Answer": "Q17738:Star Wars: Episode IV \u2013 A New Hope",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Star Wars] with <series ordinal> 4",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q22092344> with <P1545> 4",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Star Wars] ; n1:<series ordinal> \"4\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q22092344 ; n1:P1545 \"4\" ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"4\" [Star Wars]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"4\" <Q22092344>?"
    },
    {
        "Question": "What was the first movie directed by M. Night Shyamalan?",
        "ID": "d9055918",
        "Entities": "Q51489:M. Night Shyamalan,1:None",
        "Mintaka Answer": "Q1811088:Praying with Anger",
        "Sparklis label based": "give me every [film] that has as a <director> [M. Night Shyamalan] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q51489> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[M. Night Shyamalan] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q51489 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <director> [M. Night Shyamalan] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P57> <Q51489> and has the lowest <P577>?"
    },
    {
        "Question": "Did Donald Trump become president after 2020?",
        "ID": "7b6b6a4e",
        "Entities": "Q22686:Donald Trump",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Donald Trump] has as a <position held> with a <start time> [President of the United States] and where the year of the <start time> > 2020",
        "Sparklis ID based": "<Q22686> has as a <P39> with a <P580> <Q11696> and where the year of the <P580> > 2020",
        "Sparql label based": "ASK { wd:[Donald Trump] p:<position held> [ pq:<start time> ?P580_5 ; ps:<position held> wd:[President Of The United States] ] . FILTER (year(?P580_5) > \"2020\"^^xsd:integer) }",
        "Sparql ID based": "ASK { wd:Q22686 p:P39 [ pq:P580 ?P580_5 ; ps:P39 wd:Q11696 ] . FILTER (year(?P580_5) > \"2020\"^^xsd:integer) }",
        "Squall label based": "whether [Donald Trump] has <position held> at a <start time> whose year is greater than 2020 [President Of The United States]?",
        "Squall ID based": "whether <Q22686> has <P39> at a <P580> whose year is greater than 2020 <Q11696>?"
    },
    {
        "Question": "Which Quentin Tarantino movie is the longest?",
        "ID": "5dd993e2",
        "Entities": "Q3772:Quentin Tarantino",
        "Mintaka Answer": "Q679023:Grindhouse",
        "Sparklis label based": "give me every [film] that has as a <director> [Quentin Tarantino] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q3772> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P2047_38 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Quentin Tarantino] ] . ?Q11424_1 p:<duration> [ ps:<duration> ?P2047_38 ] . } ORDER BY DESC(?P2047_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P2047_38 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q3772 ] . ?Q11424_1 p:P2047 [ ps:P2047 ?P2047_38 ] . } ORDER BY DESC(?P2047_38) LIMIT 1",
        "Squall label based": "which [Film] has <director> [Quentin Tarantino] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P57> <Q3772> and has the highest <P2047>?"
    },
    {
        "Question": "What is the first tallest mountain in the world?",
        "ID": "0eb83ec6",
        "Entities": "Q8502:mountain,1:None",
        "Mintaka Answer": "Q513:Mount Everest",
        "Sparklis label based": "give me every [mountain] that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has the highest-to-lowest <P2044>",
        "Sparql label based": "select distinct ?q8502_1 ?p2044_103 where { ?q8502_1 wdt:<instance of> wd:[Mountain] . ?q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?p2044_103 ] . } order by desc(?p2044_103) limit 1",
        "Sparql ID based": "select distinct ?q8502_1 ?p2044_103 where { ?q8502_1 wdt:P31 wd:Q8502 . ?q8502_1 p:P2044 [ ps:P2044 ?p2044_103 ] . } order by desc(?p2044_103) limit 1",
        "Squall label based": "which [Mountain] has the highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has the highest <P2044>?"
    },
    {
        "Question": "How many Mega Man games were there for the NES?",
        "ID": "3065ea92",
        "Entities": "Q172742:Nintendo Entertainment System, Q7565689:Mega Man",
        "Mintaka Answer": "6",
        "Sparklis label based": "[Mega Man] <has part(s)> and has as a <platform> [Nintendo Entertainment System] and give me the number of part(s)",
        "Sparklis ID based": "<Q7565689> <P527> and has as a <P400> <Q172742> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_44) WHERE { wd:[Mega Man] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . ?P527_7 p:<platform> [ ps:<platform> wd:[Nintendo Entertainment System] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_44) WHERE { wd:Q2667596 p:P527 [ ps:P527 ?P527_7 ] . ?P527_7 p:P400 [ ps:P400 wd:Q172742 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Mega Man] and has <platform> [Nintendo Entertainment System]?",
        "Squall ID based": "how many thing is a <P527> of <Q2667596> and has <P400> <Q172742>?"
    },
    {
        "Question": "Did Grand Theft Auto 5 come out before 2015?",
        "ID": "2dd70af6",
        "Entities": "Q17452:Grand Theft Auto V",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Grand Theft Auto V] has a <publication date> and where the year of the <publication date> < 2015",
        "Sparklis ID based": "<Q17452> has a <P577> and where the year of the <P577> < 2015",
        "Sparql label based": "SELECT DISTINCT ?P577_8 WHERE { wd:[Grand Theft Auto V] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) > \"2015\") ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P577_8 WHERE { wd:Q17452 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) > \"2015\") ) } LIMIT 1",
        "Squall label based": "what is a <publication date> of [Grand Theft Auto V] and has the year greater than \"2015\"?",
        "Squall ID based": "what is a <P577> of <Q17452> and has the year greater than \"2015\"?"
    },
    {
        "Question": "Is Venus Williams older than Serena Williams?",
        "ID": "1e975ded",
        "Entities": "Q11459:Serena Williams, Q11578:Venus Williams",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Venus Williams] has a <date of birth> and [Serena Williams] has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "<Q11578> has a <P569> and <Q11459> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Serena Williams] p:<date of birth> [ ps:<date of birth> ?area1 ] . wd:[Venus Williams] p:<date of birth> [ ps:<date of birth> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q11459 p:P569 [ ps:P569 ?area1 ] . wd:Q11578 p:P569 [ ps:P569 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Serena Williams] has a <date of birth> greater than a <date of birth> of [Venus Williams]?",
        "Squall ID based": "whether <Q11459> has a <P569> greater than a <P569> of <Q11578>?"
    },
    {
        "Question": "Which city in Pennsylvania has the biggest population?",
        "ID": "94ef784d",
        "Entities": "Q1400:Pennsylvania",
        "Mintaka Answer": "Q1345:Philadelphia",
        "Sparklis label based": "give me every [city of Pennsylvania] that has the highest-to-lowest <population> and that has as a <located in the administrative territorial entity> [Philadelphia County]",
        "Sparklis ID based": "give me every <Q21010817> that has the highest-to-lowest <P1082> and that has as a <P131> <Q496900>",
        "Sparql label based": "SELECT DISTINCT ?Q21010817_1 WHERE { ?Q21010817_1 wdt:<instance of> wd:[City Of Pennsylvania] . ?Q21010817_1 p:<population> [ ps:<population> ?P1082_38 ] . ?Q21010817_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Philadelphia County] ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q21010817_1 WHERE { ?Q21010817_1 wdt:P31 wd:Q21010817 . ?Q21010817_1 p:P1082 [ ps:P1082 ?P1082_38 ] . ?Q21010817_1 p:P131 [ ps:P131 wd:Q496900 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Squall label based": "which [City Of Pennsylvania] has the highest <population> and has <located in the administrative territorial entity> [Philadelphia County]?",
        "Squall ID based": "which <Q21010817> has the highest <P1082> and has <P131> <Q496900>?"
    },
    {
        "Question": "What Final Fantasy game sold the least copies?",
        "ID": "eda7f416",
        "Entities": "Q12391356:Final Fantasy",
        "Mintaka Answer": "Q2565421:Final Fantasy Crystal Chronicles: The Crystal Bearers",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Final Fantasy] and that has the lowest-to-highest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q99416119> and that has the lowest-to-highest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Final Fantasy] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY ASC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q99416119 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY ASC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Final Fantasy] and has the lowest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q99416119> and has the lowest <P2664>?"
    },
    {
        "Question": "What is the tallest mountain in New York?",
        "ID": "fc9a9be9",
        "Entities": "Q1384:New York",
        "Mintaka Answer": "Q1858227:Mount Marcy",
        "Sparklis label based": "give me every [mountain] that has a <located in the administrative territorial entity> that is the <instance of> [town of New York] that has as an <applies to jurisdiction> [New York] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has a <P131> that is the <P31> <Q106071004> that has as an <P1001> <Q1384> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_103 ] . ?P131_103 p:<instance of> [ ps:<instance of> wd:[Town Of New York] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_140 ] . } ORDER BY DESC(?P2044_140) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P131 [ ps:P131 ?P131_103 ] . ?P131_103 p:P31 [ ps:P31 wd:Q106071004 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_140 ] . } ORDER BY DESC(?P2044_140) LIMIT 1",
        "Squall label based": "which [Mountain] has the highest <elevation above sea level> and has a <located in the administrative territorial entity> that has <instance of> [Town Of New York]?",
        "Squall ID based": "which <Q8502> has the highest <P2044> and has a <P131> that has <P31> <Q106071004>?"
    },
    {
        "Question": "Which country has a larger population, Rwanda or Bolivia?",
        "ID": "8330f2d3",
        "Entities": "Q1037:Rwanda,Q750:Bolivia",
        "Mintaka Answer": "Q1037:Rwanda",
        "Sparklis label based": "Rwanda has a <population> with <point in time> 2017-01-01T00:00:00Z and [Bolivia] has a <population> with <point in time> 2017-01-01T00:00:00Z",
        "Sparklis ID based": "Rwanda has a <P1082> with <P585> 2017-01-01T00:00:00Z and <Q750> has a <P1082> with <P585> 2017-01-01T00:00:00Z",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Rwanda] wd:[Bolivia] } ?x p:<population> [ ps:<population> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q1037 wd:Q750 } ?x p:P1082 [ ps:P1082 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Rwanda] or [Bolivia] and has the lowest <population>?",
        "Squall ID based": "what is <Q1037> or <Q750> and has the lowest <P1082>?"
    },
    {
        "Question": "Which movie was directed by Christopher Nolan and starred John David Washington?",
        "ID": "d8aa0320",
        "Entities": "Q4120019:John David Washington,Q25191:Christopher Nolan",
        "Mintaka Answer": "Q63985561:Tenet",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that has as a <cast member> [John David Washington]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that has as a <P161> <Q4120019>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[John David Washington] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q4120019 ] . }",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has <cast member> [John David Washington]?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has <P161> <Q4120019>?"
    },
    {
        "Question": "When was Diablo released?",
        "ID": "f70082a0",
        "Entities": "Q220960:Diablo",
        "Mintaka Answer": "01/01/1997 0:00:00",
        "Sparklis label based": "[Diablo] has a <publication date>",
        "Sparklis ID based": "<Q220960> has a <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_8 WHERE { wd:[Diablo] p:<publication date> [ ps:<publication date> ?P577_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P577_8 WHERE { wd:Q220960 p:P577 [ ps:P577 ?P577_8 ] . }",
        "Squall label based": "what is a <publication date> of [Diablo]?",
        "Squall ID based": "what is a <P577> of <Q220960>?"
    },
    {
        "Question": "Which actor who starred in A Quiet Place also starred in the TV show The Office?",
        "ID": "1bd7eea9",
        "Entities": "Q39070473:A Quiet Place,Q23831:The Office",
        "Mintaka Answer": "Q313039:John Krasinski",
        "Sparklis label based": "give me every [human] that is the cast member of [A Quiet Place] and that is the cast member of [The Office]",
        "Sparklis ID based": "give me every <Q5> that is the cast member of <Q39070473> and that is the cast member of <Q23831>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[A Quiet Place] p:<cast member> [ ps:<cast member> ?q5_1 ] . wd:[The Office] p:<cast member> [ ps:<cast member> ?q5_1 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q39070473 p:P161 [ ps:P161 ?q5_1 ] . wd:Q23831 p:P161 [ ps:P161 ?q5_1 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [A Quiet Place] and [The Office]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q39070473> and <Q23831>?"
    },
    {
        "Question": "How many Jaws movies are there?",
        "ID": "73f3f54f",
        "Entities": "Q6166233:Jaws",
        "Mintaka Answer": "Q189505:Jaws,Q1199834:Jaws 2,Q1199837:Jaws 3-D,Q1199839:Jaws: The Revenge",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Jaws] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q6166233> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:<instance of> wd:[Film] . ?Q11424_84 p:<part of the series> [ ps:<part of the series> wd:[Jaws] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:P31 wd:Q11424 . ?Q11424_84 p:P179 [ ps:P179 wd:Q6166233 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Jaws]?",
        "Squall ID based": "which <Q11424> has <P179> <Q6166233>?"
    },
    {
        "Question": "What was the name of the last Harry Potter movie?",
        "ID": "1d631e1f",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q232009:Harry Potter and the Deathly Hallows \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter] with the highest-to-lowest <series ordinal>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3244512> with the highest-to-lowest <P1545>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_537 WHERE { ?Q11424_537 wdt:<instance of> wd:[Film] . ?Q11424_537 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ; n1:<series ordinal> ?P1545_544 ] . } ORDER BY DESC(xsd:integer(?P1545_544)) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_537 WHERE { ?Q11424_537 wdt:P31 wd:Q11424 . ?Q11424_537 p:P179 [ ps:P179 wd:Q216930 ; n1:P1545 ?P1545_544 ] . } ORDER BY DESC(xsd:integer(?P1545_544)) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> at a <series ordinal> whose xsd:integer is the highest thing [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has <P179> at a <P1545> whose xsd:integer is the highest thing <Q216930>?"
    },
    {
        "Question": "Which actor starred in both Billy Madison and Happy Gilmore?",
        "ID": "702903c4",
        "Entities": "Q1313063:Happy Gilmore,Q372299:Billy Madison",
        "Mintaka Answer": "Q132952:Adam Sandler",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Billy Madison] and of [Happy Gilmore]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q372299> and of <Q1313063>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[Billy Madison] p:<cast member> [ ps:<cast member> ?q5_1 ] . wd:[Happy Gilmore] p:<cast member> [ ps:<cast member> ?q5_1 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q372299 p:P161 [ ps:P161 ?q5_1 ] . wd:Q1313063 p:P161 [ ps:P161 ?q5_1 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Billy Madison] and [Happy Gilmore]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q372299> and <Q1313063>?"
    },
    {
        "Question": "Which Iron Man movies did Terrance Howard not appear in?",
        "ID": "a2355af4",
        "Entities": "Q296500:Terrence Howard,Q16642701:Iron Man",
        "Mintaka Answer": "Q205028:Iron Man 2,Q209538:Iron Man 3",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Iron Man] and that not has as a <cast member> [Terrence Howard]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q180704> and that not has as a <P161> <Q296500>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_7 WHERE { ?Q11424_7 wdt:<instance of> wd:[Film] . ?Q11424_7 p:<part of the series> [ ps:<part of the series> wd:[Iron Man 2 2] ] . FILTER ( NOT EXISTS { ?Q11424_7 p:<cast member> [ ps:<cast member> wd:[Terrence Howard] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_7 WHERE { ?Q11424_7 wdt:P31 wd:Q11424 . ?Q11424_7 p:P179 [ ps:P179 wd:Q16642701 ] . FILTER ( NOT EXISTS { ?Q11424_7 p:P161 [ ps:P161 wd:Q296500 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Iron Man 2 2] and has not <cast member> [Terrence Howard]?",
        "Squall ID based": "which <Q11424> has <P179> <Q16642701> and has not <P161> <Q296500>?"
    },
    {
        "Question": "Who was governor of Indiana and U.S. vice president?",
        "ID": "58ada6b9",
        "Entities": "Q11699:Vice President of the United States,Q1415:Indiana",
        "Mintaka Answer": "Q24313:Mike Pence",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Indiana] and that has as a <position held> [Vice President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q16147601> and that has as a <P39> <Q11699>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Indiana] ] . ?q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q16147601 ] . ?q5_1 p:P39 [ ps:P39 wd:Q11699 ] . }",
        "Squall label based": "which [Human] has <position held> [Governor Of Indiana] and [Vice President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> <Q16147601> and <Q11699>?"
    },
    {
        "Question": "Who was a senator from California and died in office in 1859?",
        "ID": "b0d7a9b4",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q359265:David Colbreth Broderick",
        "Sparklis label based": "give me every [human] that has as a <position held> with an <electoral district> that has as a <located in the administrative territorial entity>  [California]   [United States senator]  and that has  a date of death  and give me the year of the <date of death> that is 1859",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P768> that has as a <P131> <Q99> <Q4416090> and that has a date of death and give me the year of the <P570> that is 1859",
        "Sparql label based": "SELECT DISTINCT ?Q5_106 WHERE { ?Q5_106 wdt:<instance of> wd:[Human] . ?Q5_106 p:<position held> [ n1:<electoral district> ?P768_98 ; ps:<position held> wd:[United States Senator] ] . ?P768_98 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q5_106 p:<date of death> [ ps:<date of death> ?P570_4 ] . BIND (year(?P570_4) AS ?expr_90) FILTER ( ?expr_90 = \"1859\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_106 WHERE { ?Q5_106 wdt:P31 wd:Q5 . ?Q5_106 p:P39 [ n1:P768 ?P768_98 ; ps:P39 wd:Q4416090 ] . ?P768_98 p:P131 [ ps:P131 wd:Q99 ] . ?Q5_106 p:P570 [ ps:P570 ?P570_4 ] . BIND (year(?P570_4) AS ?expr_90) FILTER ( ?expr_90 = \"1859\"^^xsd:integer ) }",
        "Squall label based": "which [Human] has <position held> at a <electoral district> that has <located in the administrative territorial entity> [California] [United States Senator] and has a <date of death> whose year is 1859?",
        "Squall ID based": "which <Q5> has <P39> at a <P768> that has <P131> <Q99> <Q4416090> and has a <P570> whose year is 1859?"
    },
    {
        "Question": "What book of the Bible has the most chapters?",
        "ID": "b859b218",
        "Entities": "Q1845:Bible",
        "Mintaka Answer": "Q41064:Psalms",
        "Sparklis label based": "give me every [book of the Bible] that is the part of [Bible] and that has a part",
        "Sparklis ID based": "give me every <Q29154430> that is the part of <Q1845> and that has a part",
        "Sparql label based": "SELECT DISTINCT ?Q29154430_1 WHERE { ?Q29154430_1 wdt:<instance of> wd:[Book Of The Bible] . ?Q29154430_1 p:<part of> [ ps:<part of> wd:[Bible] ] . ?P361_5 p:<part of> [ ps:<part of> ?Q29154430_1 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q29154430_1 WHERE { ?Q29154430_1 wdt:P31 wd:Q29154430 . ?Q29154430_1 p:P361 [ ps:P361 wd:Q1845 ] . ?P361_5 p:P361 [ ps:P361 ?Q29154430_1 ] . } LIMIT 1",
        "Squall label based": "which [Book Of The Bible] has <part of> [Bible] and is a <part of> of a thing?",
        "Squall ID based": "which <Q29154430> has <P361> <Q1845> and is a <P361> of a thing?"
    },
    {
        "Question": "Which Mario Kart game did Yoshi not appear in?",
        "ID": "d71050e1",
        "Entities": "Q188196:Mario Kart, Q214174:Yoshi",
        "Mintaka Answer": "Q98844808:Mario Kart Live: Home Circuit",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mario Kart] and that not has as a <characters> [Yoshi]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q188196> and that not has as a <P674> <Q214174>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Kart] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Yoshi] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q188196 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q214174 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Kart] and has not <characters> [Yoshi]?",
        "Squall ID based": "which <Q7889> has <P179> <Q188196> and has not <P674> <Q214174>?"
    },
    {
        "Question": "Which movie was directed by the Wachowski Brothers and had Keanu Reeves in it?",
        "ID": "9259c025",
        "Entities": "Q43416:Keanu Reeves,Q195719:The Wachowskis",
        "Mintaka Answer": "Q83495:The Matrix",
        "Sparklis label based": "give me every [film] that has as a <director> [The Wachowskis] and that has as a <cast member> [Keanu Reeves]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q195719> and that has as a <P161> <Q43416>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[The Wachowskis] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Keanu Reeves] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q195719 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q43416 ] . }",
        "Squall label based": "which [Film] has <director> [The Wachowskis] and has <cast member> [Keanu Reeves]?",
        "Squall ID based": "which <Q11424> has <P57> <Q195719> and has <P161> <Q43416>?"
    },
    {
        "Question": "Which Indiana Jones movie made the most money?",
        "ID": "3f073961",
        "Entities": "Q2562640:Indiana Jones",
        "Mintaka Answer": "Q174284:Raiders of the Lost Ark",
        "Sparklis label based": "[Indiana Jones] <has part(s)> that has the highest-to-lowest <box office>",
        "Sparklis ID based": "<Q98018448> <P527> that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Indiana Jones] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<box office> [ ps:<box office> ?P2142_47 ] . } ORDER BY DESC(?P2142_47) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q98018448 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P2142 [ ps:P2142 ?P2142_47 ] . } ORDER BY DESC(?P2142_47) LIMIT 1",
        "Squall label based": "what is a <has part(s)> of [Indiana Jones] and has the highest <box office>?",
        "Squall ID based": "what is a <P527> of <Q98018448> and has the highest <P2142>?"
    },
    {
        "Question": "Who wrote the Ender's Game series?",
        "ID": "f75e34e7",
        "Entities": "Q2642928:Ender's Game hexalogy",
        "Mintaka Answer": "Q212727:Rick Riordan",
        "Sparklis label based": "[Ender's Game hexalogy] has an <author>",
        "Sparklis ID based": "<Q2642928> has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_8 WHERE { wd:[Ender's Game Hexalogy] p:<author> [ ps:<author> ?P50_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P50_8 WHERE { wd:Q2642928 p:P50 [ ps:P50 ?P50_8 ] . }",
        "Squall label based": "what is a <author> of [Ender's Game Hexalogy]?",
        "Squall ID based": "what is a <P50> of <Q2642928>?"
    },
    {
        "Question": "Which Taylor Swift album had more songs, Red or Lover?",
        "ID": "c41d923a",
        "Entities": "Q858750:Red,Q26876:Taylor Swift",
        "Mintaka Answer": "Q64596218:Lover",
        "Sparklis label based": "give me every [album] that has as a <performer>  [Taylor Swift]  and that is [Red] or that is [Lover] and that has  the highest-to-lowest <number of parts of this work>",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q26876> and that is <Q858750> or that is <Q64596218> and that has the highest-to-lowest <P2635>",
        "Sparql label based": "SELECT DISTINCT ?Q482994_1 WHERE { VALUES ?Q482994_1 { wd:[Red] wd:[Lover] } ?Q482994_1 wdt:<instance of> wd:[Album] . ?Q482994_1 p:<performer> [ ps:<performer> wd:[Taylor Swift] ] . ?Q482994_1 p:<number of parts of this work> [ ps:<number of parts of this work> ?P2635_181 ] . } ORDER BY DESC(?P2635_181) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_1 WHERE { VALUES ?Q482994_1 { wd:Q858750 wd:Q64596218 } ?Q482994_1 wdt:P31 wd:Q482994 . ?Q482994_1 p:P175 [ ps:P175 wd:Q26876 ] . ?Q482994_1 p:P2635 [ ps:P2635 ?P2635_181 ] . } ORDER BY DESC(?P2635_181) LIMIT 1",
        "Squall label based": "which [Album] is [Red] or [Lover] and has <performer> [Taylor Swift] and has the highest <number of parts of this work>?",
        "Squall ID based": "which <Q482994> is <Q858750> or <Q64596218> and has <P175> <Q26876> and has the highest <P2635>?"
    },
    {
        "Question": "How many Terminator movies has Arnold Schwarzenegger been in?",
        "ID": "7072e1d7",
        "Entities": "Q2685:Arnold Schwarzenegger,Q162255:The Terminator",
        "Mintaka Answer": "Q162255:The Terminator,Q170564:Terminator 2: Judgment Day,Q29054009:Terminator 3: Rise of the Machines,Q15140437:Terminator Genisys,Q39072454:Terminator: Dark Fate",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Terminator] and that has as a <cast member> [Arnold Schwarzenegger] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q98063049> and that has as a <P161> <Q2685> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_235 WHERE { ?Q11424_235 wdt:<instance of> wd:[Film] . ?Q11424_235 p:<part of the series> [ ps:<part of the series> wd:[Terminator] ] . ?Q11424_235 p:<cast member> [ ps:<cast member> wd:[Arnold Schwarzenegger] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_235 WHERE { ?Q11424_235 wdt:P31 wd:Q11424 . ?Q11424_235 p:P179 [ ps:P179 wd:Q98063049 ] . ?Q11424_235 p:P161 [ ps:P161 wd:Q2685 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Terminator] and has <cast member> [Arnold Schwarzenegger]?",
        "Squall ID based": "which <Q11424> has <P179> <Q98063049> and has <P161> <Q2685>?"
    },
    {
        "Question": "Who is a current senator of New York and was born in 1950?",
        "ID": "61b16812",
        "Entities": "Q4416090:United States senator, Q1384:New York",
        "Mintaka Answer": "Q380900:Chuck Schumer",
        "Sparklis label based": "give me every [human] that has as a <position held> with <electoral district> [New York Class 3 senate seat] [United States senator] and that has a <date of birth> and where the year of the <date of birth> = 1950",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P768> <Q101498984> <Q4416090> and that has a <P569> and where the year of the <P569> = 1950",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<electoral district> wd:[New York Class 3 Senate Seat] ; ps:<position held> wd:[United States Senator] ] . ?Q5_1 p:<date of birth> [ ps:<date of birth> ?P569_5 ] . FILTER ( (year(?P569_5) = 1950) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P768 wd:Q101498984 ; ps:P39 wd:Q4416090 ] . ?Q5_1 p:P569 [ ps:P569 ?P569_5 ] . FILTER ( (year(?P569_5) = 1950) ) }",
        "Squall label based": "which [Human] has <position held> at <electoral district> [New York Class 3 Senate Seat] [United States Senator] and has a <date of birth> whose year is 1950?",
        "Squall ID based": "which <Q5> has <P39> at <P768> <Q101498984> <Q4416090> and has a <P569> whose year is 1950?"
    },
    {
        "Question": "Did The Metamorphosis come out before Franz Kafka died?",
        "ID": "6f3559cc",
        "Entities": "Q184222:The Metamorphosis, Q905:Franz Kafka",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Metamorphosis] has a <publication date> and [Franz Kafka] has a <date of death> and where the <publication date> < the <date of death>",
        "Sparklis ID based": "<Q184222> has a <P577> and <Q905> has a <P570> and where the <P577> < the <P570>",
        "Sparql label based": "ASK { wd:[The Metamorphosis] p:<publication date> [ ps:<publication date> ?P577_6 ] . wd:[Franz Kafka] p:<date of death> [ ps:<date of death> ?P570_13 ] . FILTER (?P577_6 < ?P570_13) }",
        "Sparql ID based": "ASK { wd:Q184222 p:P577 [ ps:P577 ?P577_6 ] . wd:Q905 p:P570 [ ps:P570 ?P570_13 ] . FILTER (?P577_6 < ?P570_13) }",
        "Squall label based": "whether [The Metamorphosis] has a <publication date> lesser than a <date of death> of [Franz Kafka]?",
        "Squall ID based": "whether <Q184222> has a <P577> lesser than a <P570> of <Q905>?"
    },
    {
        "Question": "Which governors of Tennessee have not been Republican since 2000?",
        "ID": "b53df325",
        "Entities": "Q29468:Republican Party, Q1509:Tennessee",
        "Mintaka Answer": "Q724001:Phil Bredesen",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Tennessee] with a <start time> and that not has as a <member of political party> [Republican Party] and where the year of the <start time> > 2000",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q5589724> with a <P580> and that not has as a <P102> <Q29468> and where the year of the <P580> > 2000",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Tennessee] ; n1:<start time> ?P580_82 ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( (year(?P580_82) > 2000) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q5589724 ; n1:P580 ?P580_82 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( (year(?P580_82) > 2000) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater than 2000 [Governor Of Tennessee] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater than 2000 <Q5589724> and has not <P102> <Q29468>?"
    },
    {
        "Question": "Which Foundation series book by Issac Asimov have been released in 1990's?",
        "ID": "7c10faf6",
        "Entities": "Q34981:Isaac Asimov,Q1564644:Foundation series,1990:None",
        "Mintaka Answer": "Q938629:Forward the Foundation",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Foundation series] and that has as an <author> [Isaac Asimov] and that has a <publication date> and give me the year of the <publication date> higher or equal to 1990",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q1564644> and that has as an <P50> <Q34981> and that has a <P577> and give me the year of the <P577> higher or equal to 1990",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Foundation Series] ] . ?Q7725634_1 p:<author> [ ps:<author> wd:[Isaac Asimov] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . BIND (year(?P577_5) AS ?expr_131) FILTER ( xsd:double(str(?expr_131)) >= 1990 ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q1564644 ] . ?Q7725634_1 p:P50 [ ps:P50 wd:Q34981 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . BIND (year(?P577_5) AS ?expr_131) FILTER ( xsd:double(str(?expr_131)) >= 1990 ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Foundation Series] and has <author> [Isaac Asimov] and has a <publication date> whose year is greater or equal to 1990?",
        "Squall ID based": "which <Q7725634> has <P179> <Q1564644> and has <P50> <Q34981> and has a <P577> whose year is greater or equal to 1990?"
    },
    {
        "Question": "What is the largest city in South Korea by population?",
        "ID": "1b491ff5",
        "Entities": "Q884:South Korea",
        "Mintaka Answer": "Q8684:Seoul",
        "Sparklis label based": "give me every [city] that has as a <country> [South Korea] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has as a <P17> <Q884> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q515_1 ?P1082_38 WHERE { ?Q515_1 wdt:<instance of> wd:[City] . ?Q515_1 p:<country> [ ps:<country> wd:[South Korea] ] . ?Q515_1 p:<population> [ ps:<population> ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q515_1 ?P1082_38 WHERE { ?Q515_1 wdt:P31 wd:Q515 . ?Q515_1 p:P17 [ ps:P17 wd:Q884 ] . ?Q515_1 p:P1082 [ ps:P1082 ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Squall label based": "which [City] has <country> [South Korea] and has the highest <population>?",
        "Squall ID based": "which <Q515> has <P17> <Q884> and has the highest <P1082>?"
    },
    {
        "Question": "Is Florida bigger than Ohio?",
        "ID": "c20421b2",
        "Entities": "Q812:Florida, Q1397:Ohio",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Florida] has an <area> and [Ohio] has an <area>",
        "Sparklis ID based": "<Q812> has an <P2046> and <Q1397> has an <P2046>",
        "Sparql label based": "ASK { wd:[Florida] p:<area> [ ps:<area> ?area1 ] . wd:[Ohio] p:<area> [ ps:<area> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q812 p:P2046 [ ps:P2046 ?area1 ] . wd:Q1397 p:P2046 [ ps:P2046 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Florida] has a <area> greater than a <area> of [Ohio]?",
        "Squall ID based": "whether <Q812> has a <P2046> greater than a <P2046> of <Q1397>?"
    },
    {
        "Question": "When did James Joyce write Dubliners?",
        "ID": "155ddfb0",
        "Entities": "Q459592:Dubliners, Q6882:James Joyce",
        "Mintaka Answer": "1914",
        "Sparklis label based": "[Dubliners] has as an <author> [James Joyce] and has a <publication date> and give me the year of the <publication date>",
        "Sparklis ID based": "<Q459592> has as an <P50> <Q6882> and has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[Dubliners] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q459592 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a <publication date> of [Dubliners]?",
        "Squall ID based": "what is the year of a <P577> of <Q459592>?"
    },
    {
        "Question": "How many teams has Jalen Brunson played for in the NBA?",
        "ID": "6f93f096",
        "Entities": "Q155223:National Basketball Association, Q17305725:Jalen Brunson",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Jalen Brunson] has as a <league> [National Basketball Association] and has a <member of sports team> and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q17305725> has as a <P118> <Q155223> and has a <P54> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_107) WHERE { wd:[Jalen Brunson] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_107) WHERE { wd:Q17305725 p:P54 [ ps:P54 ?P54_4 ] . } LIMIT 1",
        "Squall label based": "how many thing is a <member of sports team> of [Jalen Brunson]?",
        "Squall ID based": "how many thing is a <P54> of <Q17305725>?"
    },
    {
        "Question": "Which Mario Kart game did Wario not appear in?",
        "ID": "15487cfe",
        "Entities": "Q536138:Wario, Q188196:Mario Kart",
        "Mintaka Answer": "Q98844808:Mario Kart Live: Home Circuit",
        "Sparklis label based": "[Mario Kart] <has part(s)> that not has as a <characters> [Wario]",
        "Sparklis ID based": "<Q188196> <P527> that not has as a <P674> <Q536138>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Mario Kart] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . FILTER ( NOT EXISTS { ?P527_8 p:<characters> [ ps:<characters> wd:[Wario] ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q188196 p:P527 [ ps:P527 ?P527_8 ] . FILTER ( NOT EXISTS { ?P527_8 p:P674 [ ps:P674 wd:Q536138 ] . } ) } LIMIT 1",
        "Squall label based": "what is a <has part(s)> of [Mario Kart] and has not <characters> [Wario]?",
        "Squall ID based": "what is a <P527> of <Q188196> and has not <P674> <Q536138>?"
    },
    {
        "Question": "Did the Marshall Mathers EP come out before 2001?",
        "ID": "f75ed03d",
        "Entities": "Q153607:The Marshall Mathers LP,2001:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Marshall Mathers LP] has a <publication date> and where the year of the <publication date> < 2001",
        "Sparklis ID based": "<Q153607> has a <P577> and where the year of the <P577> < 2001",
        "Sparql label based": "ASK { wd:[The Marshall Mathers Lp] p:<publication date> [ ps:<publication date> ?P577_7 ] . filter ((year(?P577_7) < \"2001\"^^xsd:integer)) }",
        "Sparql ID based": "ASK { wd:Q153607 p:P577 [ ps:P577 ?P577_7 ] . filter ((year(?P577_7) < \"2001\"^^xsd:integer)) }",
        "Squall label based": "whether [The Marshall Mathers Lp] has a <publication date> whose year is lesser than 2001?",
        "Squall ID based": "whether <Q153607> has a <P577> whose year is lesser than 2001?"
    },
    {
        "Question": "How many countries have a population under 5,000?",
        "ID": "8db6f969",
        "Entities": "Q6256:country",
        "Mintaka Answer": "5",
        "Sparklis label based": "give me every [country] that has a <population> and where the <population> < 5000 and give me the number of [country]",
        "Sparklis ID based": "give me every <Q6256> that has a <P1082> and where the <P1082> < 5000 and give me the number of <Q6256>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_241) WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<population> [ ps:<population> ?P1082_103 ] . FILTER ( (?P1082_103 < 5000) ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_241) WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P1082 [ ps:P1082 ?P1082_103 ] . FILTER ( (?P1082_103 < 5000) ) }",
        "Squall label based": "how many [Country] has a <population> lesser than 5000?",
        "Squall ID based": "how many <Q6256> has a <P1082> lesser than 5000?"
    },
    {
        "Question": "What is the small country inside of Italy that is not a part of Italy?",
        "ID": "4cb9e7e4",
        "Entities": "Q38:Italy",
        "Mintaka Answer": "Q237:Vatican City",
        "Sparklis label based": "[Italy] is something that something that is the <instance of> [country] and that has the lowest-to-highest <area> is <enclave within>",
        "Sparklis ID based": "<Q38> is something that something that is the <P31> <Q6256> and that has the lowest-to-highest <P2046> is <P501>",
        "Sparql label based": "SELECT DISTINCT ?P31_10 ?P2046_14 WHERE { ?P31_10 p:<enclave within> [ ps:<enclave within> wd:[Italy] ] . ?P31_10 p:<instance of> [ ps:<instance of> wd:[Country] ] . ?P31_10 p:<area> [ ps:<area> ?P2046_14 ] . } ORDER BY ASC(?P2046_14) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P31_10 ?P2046_14 WHERE { ?P31_10 p:P501 [ ps:P501 wd:Q38 ] . ?P31_10 p:P31 [ ps:P31 wd:Q6256 ] . ?P31_10 p:P2046 [ ps:P2046 ?P2046_14 ] . } ORDER BY ASC(?P2046_14) LIMIT 1",
        "Squall label based": "what has <enclave within> [Italy] and has <instance of> [Country] and has the lowest <area>?",
        "Squall ID based": "what has <P501> <Q38> and has <P31> <Q6256> and has the lowest <P2046>?"
    },
    {
        "Question": "Which EXO members were not born in South Korea?",
        "ID": "9c63932e",
        "Entities": "Q884:South Korea,Q494717:EXO",
        "Mintaka Answer": "Q12494180:Lay,Q6437313:Kris Wu,Q10788758:Lu Han,Q10769072:Huang Zitao",
        "Sparklis label based": "[EXO] has a member that has a <place of birth> that not has as a <country> [South Korea]",
        "Sparklis ID based": "<Q494717> has a member that has a <P19> that not has as a <P17> <Q884>",
        "Sparql label based": "SELECT DISTINCT ?P463_7 WHERE { ?P463_7 p:<member of> [ ps:<member of> wd:[Exo] ] . ?P463_7 p:<place of birth> [ ps:<place of birth> ?P19_44 ] . FILTER ( NOT EXISTS { ?P19_44 p:<country> [ ps:<country> wd:[South Korea] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_7 WHERE { ?P463_7 p:P463 [ ps:P463 wd:Q494717 ] . ?P463_7 p:P19 [ ps:P19 ?P19_44 ] . FILTER ( NOT EXISTS { ?P19_44 p:P17 [ ps:P17 wd:Q884 ] . } ) }",
        "Squall label based": "what has <member of> [Exo] and has a <place of birth> that has not <country> [South Korea]?",
        "Squall ID based": "what has <P463> <Q494717> and has a <P19> that has not <P17> <Q884>?"
    },
    {
        "Question": "What year was Nintendo founded?",
        "ID": "41761173",
        "Entities": "Q8093:Nintendo",
        "Mintaka Answer": "Q177:pizza",
        "Sparklis label based": "[Nintendo] has an <inception>",
        "Sparklis ID based": "<Q8093> has an <P571>",
        "Sparql label based": "select distinct ?p571_8 where { wd:[Nintendo] p:<inception> [ ps:<inception> ?p571_8 ] . }",
        "Sparql ID based": "select distinct ?p571_8 where { wd:Q8093 p:P571 [ ps:P571 ?p571_8 ] . }",
        "Squall label based": "what is a <inception> of [Nintendo]?",
        "Squall ID based": "what is a <P571> of <Q8093>?"
    },
    {
        "Question": "Who was the third president of America?",
        "ID": "a8a273d3",
        "Entities": "Q30:United States of America,3:None",
        "Mintaka Answer": "Q11812:Thomas Jefferson",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 3 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 3 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"3\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"3\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"3\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"3\" <Q11696>?"
    },
    {
        "Question": "Which Blackpink members were not from South Korea?",
        "ID": "fb15deb3",
        "Entities": "Q884:South Korea,Q25056945:Blackpink",
        "Mintaka Answer": "Q27655344:Ros\u00e9,Q26707663:Lisa",
        "Sparklis label based": "[Blackpink] has a <member of> that has a <place of birth> that not has as a <country> [South Korea]",
        "Sparklis ID based": "<Q25056945> has a <P463> that has a <P19> that not has as a <P17> <Q884>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[Blackpink] ] . ?P463_8 p:<place of birth> [ ps:<place of birth> ?P19_46 ] . FILTER ( NOT EXISTS { ?P19_46 p:<country> [ ps:<country> wd:[South Korea] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q25056945 ] . ?P463_8 p:P19 [ ps:P19 ?P19_46 ] . FILTER ( NOT EXISTS { ?P19_46 p:P17 [ ps:P17 wd:Q884 ] . } ) }",
        "Squall label based": "what has <member of> [Blackpink] and has a <place of birth> that has not <country> [South Korea]?",
        "Squall ID based": "what has <P463> <Q25056945> and has a <P19> that has not <P17> <Q884>?"
    },
    {
        "Question": "Who wrote Neuromancer?",
        "ID": "716d0b88",
        "Entities": "Q662029:Neuromancer",
        "Mintaka Answer": "Q188987:William Gibson",
        "Sparklis label based": "[Neuromancer] has an <author>",
        "Sparklis ID based": "<Q662029> has an <P50>",
        "Sparql label based": "SELECT DISTINCT ?P50_8 WHERE { wd:[Neuromancer] p:<author> [ ps:<author> ?P50_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P50_8 WHERE { wd:Q662029 p:P50 [ ps:P50 ?P50_8 ] . }",
        "Squall label based": "what is a <author> of [Neuromancer]?",
        "Squall ID based": "what is a <P50> of <Q662029>?"
    },
    {
        "Question": "Which Hangover movie was Heather Graham not in?",
        "ID": "15a81e12",
        "Entities": "Q224026:Heather Graham, Q219315:The Hangover",
        "Mintaka Answer": "Q274748:The Hangover Part II",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Heather Graham] and that has as a <part of the series> [The Hangover]",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q224026> and that has as a <P179> <Q1587838>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Hangover] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Heather Graham] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q1587838 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q224026 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [The Hangover] and has not <cast member> [Heather Graham]?",
        "Squall ID based": "which <Q11424> has <P179> <Q1587838> and has not <P161> <Q224026>?"
    },
    {
        "Question": "How many World Series championships has Los Angeles Angels won?",
        "ID": "5f82a542",
        "Entities": "Q265538:World Series,Q743309:Los Angeles Angels",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Los Angeles Angels] is the <winner> of a [sports season] that has as a <sports season of league or competition> [World Series] and give me the number of [sports season]",
        "Sparklis ID based": "<Q743309> is the <P1346> of a <Q27020041> that has as a <P3450> <Q265538> and give me the number of <Q27020041>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q27020041_8) AS ?number_of_46) WHERE { ?Q27020041_8 wdt:<instance of> wd:[Sports Season] .?Q27020041_8 p:<winner> [ ps:<winner> wd:[Los Angeles Angels] ] .?Q27020041_8 p:<sports season of league or competition> [ ps:<sports season of league or competition> wd:[World Series] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q27020041_8) AS ?number_of_46) WHERE { ?Q27020041_8 wdt:P31 wd:Q27020041 .?Q27020041_8 p:P1346 [ ps:P1346 wd:Q743309 ] .?Q27020041_8 p:P3450 [ ps:P3450 wd:Q265538 ] . }",
        "Squall label based": "how many [Sports Season] has <winner> [Los Angeles Angels] and has <sports season of league or competition> [World Series]?",
        "Squall ID based": "how many <Q27020041> has <P1346> <Q743309> and has <P3450> <Q265538>?"
    },
    {
        "Question": "How many members were in the band Nirvana?",
        "ID": "d63ce400",
        "Entities": "Q11649:Nirvana",
        "Mintaka Answer": "Q8446:Kurt Cobain,Q12006:Dave Grohl,Q428798:Krist Novoselic",
        "Sparklis label based": "give me every [human] that is the part(s) of [Nirvana]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q11649>",
        "Sparql label based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:<instance of> wd:[Human] . wd:[Nirvana] p:<has part(s)> [ ps:<has part(s)> ?Q5_39 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:P31 wd:Q5 . wd:Q11649 p:P527 [ ps:P527 ?Q5_39 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [Nirvana]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q11649>?"
    },
    {
        "Question": "How many Grammys has Janis Joplin won?",
        "ID": "2d549bff",
        "Entities": "Q41254:Grammy Award, Q1514:Janis Joplin",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Janis Joplin] <award received> something that is the <instance of> [Grammy Awards] and give me the number of instance",
        "Sparklis ID based": "<Q1514> <P166> something that is the <P31> <Q41254> and give me the number of instance",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_8) AS ?number_of_46) WHERE { wd:[Janis Joplin] p:<award received> [ ps:<award received> ?P31_8 ] . ?P31_8 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_8) AS ?number_of_46) WHERE { wd:Q1514 p:P166 [ ps:P166 ?P31_8 ] . ?P31_8 p:P31 [ ps:P31 wd:Q41254 ] . }",
        "Squall label based": "how many thing is a <award received> of [Janis Joplin] and has <instance of> [Grammy Awards]?",
        "Squall ID based": "how many thing is a <P166> of <Q1514> and has <P31> <Q41254>?"
    },
    {
        "Question": "How many wives did Woodrow Wilson have?",
        "ID": "5f97194b",
        "Entities": "Q34296:Woodrow Wilson",
        "Mintaka Answer": "Q255169:Edith Bolling Galt Wilson,Q234283:Ellen Axson Wilson",
        "Sparklis label based": "give me every human [Woodrow Wilson] has a <spouse>",
        "Sparklis ID based": "give me every human <Q34296> has a <P26>",
        "Sparql label based": "SELECT DISTINCT ?P26_8 WHERE { wd:[Woodrow Wilson] p:<spouse> [ ps:<spouse> ?P26_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P26_8 WHERE { wd:Q34296 p:P26 [ ps:P26 ?P26_8 ] . }",
        "Squall label based": "what is a <spouse> of [Woodrow Wilson]?",
        "Squall ID based": "what is a <P26> of <Q34296>?"
    },
    {
        "Question": "Which movie directed by Cate Shortland stars Scarlett Johansson?",
        "ID": "8e362b1c",
        "Entities": "Q34436:Scarlett Johansson,Q441510:Cate Shortland",
        "Mintaka Answer": "Q23894626:Black Widow",
        "Sparklis label based": "give me every [film] that has as a <director> [Cate Shortland] and that has as a <cast member> [Scarlett Johansson]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q441510> and that has as a <P161> <Q34436>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> wd:[Cate Shortland] ] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Scarlett Johansson] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 wd:Q441510 ] . ?q11424_1 p:P161 [ ps:P161 wd:Q34436 ] . }",
        "Squall label based": "which [Film] has <director> [Cate Shortland] and has <cast member> [Scarlett Johansson]?",
        "Squall ID based": "which <Q11424> has <P57> <Q441510> and has <P161> <Q34436>?"
    },
    {
        "Question": "Who was the first queen of Hawaii?",
        "ID": "6f5367e7",
        "Entities": "Q782:Hawaii",
        "Mintaka Answer": "Q107288:Lili\u02bbuokalani",
        "Sparklis label based": "give me every [human] that has as a <position held> [monarch] and that has as a <country of citizenship> [Kingdom of Hawai'i]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q116> and that has as a <P27> <Q156418>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Monarch] ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Kingdom Of Hawai'i] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q116 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q156418 ] . }",
        "Squall label based": "which [Human] has <position held> [Monarch] and has <country of citizenship> [Kingdom Of Hawai'i]?",
        "Squall ID based": "which <Q5> has <P39> <Q116> and has <P27> <Q156418>?"
    },
    {
        "Question": "What mountain chain is in France and Italy?",
        "ID": "9b586b9c",
        "Entities": "Q142:France, Q38:Italy",
        "Mintaka Answer": "Q1286:Alps",
        "Sparklis label based": "give me every [mountain range] that has as a <country> [Italy] and [France]",
        "Sparklis ID based": "give me every <Q46831> that has as a <P17> <Q38> and <Q142>",
        "Sparql label based": "SELECT DISTINCT ?Q46831_1 WHERE { ?Q46831_1 wdt:<instance of> wd:[Mountain Range] . ?Q46831_1 p:<country> [ ps:<country> wd:[Italy] ] . ?Q46831_1 p:<country> [ ps:<country> wd:[France] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q46831_1 WHERE { ?Q46831_1 wdt:P31 wd:Q46831 . ?Q46831_1 p:P17 [ ps:P17 wd:Q38 ] . ?Q46831_1 p:P17 [ ps:P17 wd:Q142 ] . } LIMIT 1",
        "Squall label based": "which [Mountain Range] has <country> [Italy] and [France]?",
        "Squall ID based": "which <Q46831> has <P17> <Q38> and <Q142>?"
    },
    {
        "Question": "Who first won the presidency in 1992 and was from the state of Arkansas?",
        "ID": "294fe4ad",
        "Entities": "Q3558349:presidency,Q1612:Arkansas,1:None,1992:None",
        "Mintaka Answer": "Q1124:Bill Clinton",
        "Sparklis label based": "give me every [human] that is the <successful candidate> of [1992 United States presidential election]",
        "Sparklis ID based": "give me every <Q5> that is the <P991> of <Q699776>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . wd:[1992 United States Presidential Election] p:<successful candidate> [ ps:<successful candidate> ?q5_1 ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . wd:Q699776 p:P991 [ ps:P991 ?q5_1 ] . }",
        "Squall label based": "which [Human] is a <successful candidate> of [1992 United States Presidential Election]?",
        "Squall ID based": "which <Q5> is a <P991> of <Q699776>?"
    },
    {
        "Question": "When did the Notebook come out?",
        "ID": "a1ae9fd3",
        "Entities": "Q223374:The Notebook",
        "Mintaka Answer": "2004",
        "Sparklis label based": "[The Notebook] has as a genre romance film and has a <publication date>",
        "Sparklis ID based": "<Q223374> has as a genre romance film and has a <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_180 WHERE {wd:[The Notebook] p:<publication date> [ ps:<publication date> ?P577_8 ] . BIND (year(?P577_8) AS ?expr_180) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_180 WHERE {wd:Q223374 p:P577 [ ps:P577 ?P577_8 ] . BIND (year(?P577_8) AS ?expr_180) }",
        "Squall label based": "what is the year of a <publication date> of [The Notebook]?",
        "Squall ID based": "what is the year of a <P577> of <Q223374>?"
    },
    {
        "Question": "What is the tallest mountain in India?",
        "ID": "00f5f850",
        "Entities": "Q668:India",
        "Mintaka Answer": "Q82019:Kanchenjunga",
        "Sparklis label based": "give me every [mountain] that has as a <country> [India] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has as a <P17> <Q668> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 ?P2044_5 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<country> [ ps:<country> wd:[India] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_5 ] . } ORDER BY DESC(?P2044_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 ?P2044_5 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P17 [ ps:P17 wd:Q668 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_5 ] . } ORDER BY DESC(?P2044_5) LIMIT 1",
        "Squall label based": "which [Mountain] has <country> [India] and has the highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has <P17> <Q668> and has the highest <P2044>?"
    },
    {
        "Question": "Which book was published in 1985 and won a Nebula Award for Best Novel?",
        "ID": "8bf9d369",
        "Entities": "Q266012:Nebula Award for Best Novel",
        "Mintaka Answer": "Q816016:Ender's Game",
        "Sparklis label based": "give me every [literary work] that has as a <publication date> 1985-01-01T00:00:00Z and that <award received> [Nebula Award for Best Novel]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P577> 1985-01-01T00:00:00Z and that <P166> <Q266012>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_10 WHERE { ?Q7725634_10 wdt:<instance of> wd:[Literary Work] . ?Q7725634_10 p:<publication date> [ ps:<publication date> \"1985-01-01T00:00:00Z\"^^xsd:dateTime ] . ?Q7725634_10 p:<award received> [ ps:<award received> wd:[Nebula Award For Best Novel] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_10 WHERE { ?Q7725634_10 wdt:P31 wd:Q7725634 . ?Q7725634_10 p:P577 [ ps:P577 \"1985-01-01T00:00:00Z\"^^xsd:dateTime ] . ?Q7725634_10 p:P166 [ ps:P166 wd:Q266012 ] . }",
        "Squall label based": "which [Literary Work] has <publication date> 1985-01-01T00:00:00Z and has <award received> [Nebula Award For Best Novel]?",
        "Squall ID based": "which <Q7725634> has <P577> 1985-01-01T00:00:00Z and has <P166> <Q266012>?"
    },
    {
        "Question": "What is the first Twilight movie?",
        "ID": "81246ab6",
        "Entities": "Q160071:Twilight,1:None",
        "Mintaka Answer": "Q160071:Twilight",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 1 [The Twilight Saga]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 1 <Q652599>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"1\" ; ps:<part of the series> wd:[The Twilight Saga] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"1\" ; ps:P179 wd:Q652599 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"1\" [The Twilight Saga]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"1\" <Q652599>?"
    },
    {
        "Question": "When did Beyonce win her first Grammy?",
        "ID": "1fd1d97e",
        "Entities": "Q36153:Beyonc\u00c3\u00a9, Q41254:Grammy Award",
        "Mintaka Answer": "2001",
        "Sparklis label based": "[Beyonce] <award received> with a <point in time> something that is the <instance of> [Grammy Award] and give me lowest-to-highest the year of the <point in time>",
        "Sparklis ID based": "<Q36153> <P166> with a <P585> something that is the <P31> <Q41254> and give me lowest-to-highest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?P585_12 WHERE { wd:[Beyonce] p:<award received> [ n1:<point in time> ?P585_12 ; ps:<award received> ?P31_8 ] . ?P31_8 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] .} ORDER BY ASC(?P585_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P585_12 WHERE { wd:Q36153 p:P166 [ n1:P585 ?P585_12 ; ps:P166 ?P31_8 ] . ?P31_8 p:P31 [ ps:P31 wd:Q41254 ] .} ORDER BY ASC(?P585_12) LIMIT 1",
        "Squall label based": "what is the lowest thing at which <point in time> [Beyonce] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the lowest thing at which <P585> <Q36153> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "In what year was the first Harry Potter movie released?",
        "ID": "cf5c3227",
        "Entities": "Q216930:Harry Potter film series,1:None",
        "Mintaka Answer": "2001",
        "Sparklis label based": "[Harry Potter film series] has a <start time> and give me the year of the <start time>",
        "Sparklis ID based": "<Q216930> has a <P580> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_93 WHERE { wd:[Harry Potter Film Series] p:<start time> [ ps:<start time> ?P580_8 ] .BIND (year(?P580_8) AS ?expr_93) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_93 WHERE { wd:Q216930 p:P580 [ ps:P580 ?P580_8 ] .BIND (year(?P580_8) AS ?expr_93) }",
        "Squall label based": "what is the year of a <start time> of [Harry Potter Film Series]?",
        "Squall ID based": "what is the year of a <P580> of <Q216930>?"
    },
    {
        "Question": "What is the best-selling Mario Kart game?",
        "ID": "8be95b66",
        "Entities": "Q188196:Mario Kart",
        "Mintaka Answer": "Q13427106:Mario Kart 8",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Mario Kart] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q188196> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Kart] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q188196 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Kart] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q188196> and has the highest <P2664>?"
    },
    {
        "Question": "Did True Romance come out before 1995?",
        "ID": "100e5d98",
        "Entities": "Q1127709:True Romance,1995:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[True Romance] has a <publication date> and where the year of the <publication date> < 1995",
        "Sparklis ID based": "<Q1127709> has a <P577> and where the year of the <P577> < 1995",
        "Sparql label based": "ASK { wd:[True Romance] p:<publication date> [ ps:<publication date> ?P577_7 ] . filter ((year(?P577_7) <= \"1995\"^^xsd:integer)) }",
        "Sparql ID based": "ASK { wd:Q1127709 p:P577 [ ps:P577 ?P577_7 ] . filter ((year(?P577_7) <= \"1995\"^^xsd:integer)) }",
        "Squall label based": "whether [True Romance] has a <publication date> whose year is lesser or equal to 1995?",
        "Squall ID based": "whether <Q1127709> has a <P577> whose year is lesser or equal to 1995?"
    },
    {
        "Question": "Which is the biggest desert in Africa?",
        "ID": "f7f8ea0b",
        "Entities": "Q15:Africa",
        "Mintaka Answer": "Q6583:Sahara",
        "Sparklis label based": "give me every [desert] that has as a <continent> [Africa] and that has the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q8514> that has as a <P30> <Q15> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q8514_1 ?P2043_5 WHERE { ?Q8514_1 wdt:<instance of> wd:[Desert] . ?Q8514_1 p:<continent> [ ps:<continent> wd:[Africa] ] . ?Q8514_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8514_1 ?P2043_5 WHERE { ?Q8514_1 wdt:P31 wd:Q8514 . ?Q8514_1 p:P30 [ ps:P30 wd:Q15 ] . ?Q8514_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [Desert] has <continent> [Africa] and has the highest <length>?",
        "Squall ID based": "which <Q8514> has <P30> <Q15> and has the highest <P2043>?"
    },
    {
        "Question": "Who was the first Republican Party female to become a senator?",
        "ID": "f3484873",
        "Entities": "Q29468:Republican Party,Q15686806:senator,1:None",
        "Mintaka Answer": "Q434128:Gladys Pyle",
        "Sparklis label based": "give me every [human] that has as a <position held> with <parliamentary group> [Republican Party] [United States senator] with the lowest-to-highest <start time> and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P4100> <Q29468> <Q4416090> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<parliamentary group> wd:[Republican Party] ; ps:<position held> wd:[United States Senator] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P4100 wd:Q29468 ; ps:P39 wd:Q4416090 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at <parliamentary group> [Republican Party] at the lowest <start time> [United States Senator] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> at <P4100> <Q29468> at the lowest <P580> <Q4416090> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Who is a member of Blackpink who was born in Thailand?",
        "ID": "eb5b9c72",
        "Entities": "Q25056945:Blackpink, Q869:Thailand",
        "Mintaka Answer": "Q26707663:Lisa",
        "Sparklis label based": "[Blackpink] <has part(s)> that has as a <country of citizenship> [Thailand]",
        "Sparklis ID based": "<Q25056945> <P527> that has as a <P27> <Q869>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Blackpink] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<country of citizenship> [ ps:<country of citizenship> wd:[Thailand] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q25056945 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P27 [ ps:P27 wd:Q869 ] . }",
        "Squall label based": "what is a <has part(s)> of [Blackpink] and has <country of citizenship> [Thailand]?",
        "Squall ID based": "what is a <P527> of <Q25056945> and has <P27> <Q869>?"
    },
    {
        "Question": "In how many movies has Laurence Fishburne played the character Morpheus?",
        "ID": "35d96b82",
        "Entities": "Q193048:Laurence Fishburne,Q194012:Morpheus",
        "Mintaka Answer": "Q83495:The Matrix,Q189600:The Matrix Reloaded,Q207536:The Matrix Revolutions",
        "Sparklis label based": "give me every [film] that has as a <cast member> with <character role> [Morpheus] [Laurence Fishburne] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> with <P453> <Q2707815> <Q193048> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:<instance of> wd:[Film] . ?Q11424_159 p:<cast member> [ n1:<character role> wd:[Morpheus 4] ; ps:<cast member> wd:[Laurence Fishburne] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:P31 wd:Q11424 . ?Q11424_159 p:P161 [ n1:P453 wd:Q1750842 ; ps:P161 wd:Q193048 ] . }",
        "Squall label based": "which [Film] has <cast member> at <character role> [Morpheus 4] [Laurence Fishburne]?",
        "Squall ID based": "which <Q11424> has <P161> at <P453> <Q1750842> <Q193048>?"
    },
    {
        "Question": "In what year did the first X-Men movie release?",
        "ID": "fe6bb068",
        "Entities": "Q2006869:X-Men,1:None",
        "Mintaka Answer": "2000",
        "Sparklis label based": "[X-Men 3] <has part(s)> that has the lowest-to-highest <publication date> and give me the year of the <publication date> and give me the minimal value of the year of the <publication date>",
        "Sparklis ID based": "<Q2006869> <P527> that has the lowest-to-highest <P577> and give me the year of the <P577> and give me the minimal value of the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_112 WHERE { wd:[X-men 3] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_112 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P577_112 WHERE { wd:Q2006869 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_112 ] . } LIMIT 1",
        "Squall label based": "what is a <publication date> of a <has part(s)> of [X-men 3]?",
        "Squall ID based": "what is a <P577> of a <P527> of <Q2006869>?"
    },
    {
        "Question": "How many current members are in N.E.R.D?",
        "ID": "c2c3d3b7",
        "Entities": "Q941293:N.E.R.D",
        "Mintaka Answer": "Q14313:Pharrell Williams,Q706641:Chad Hugo,Q2584176:Shay Haley",
        "Sparklis label based": "give me every [human] that is the part(s) of [N.E.R.D]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q941293>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . wd:[N.e.r.d] p:<has part(s)> [ ps:<has part(s)> ?Q5_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . wd:Q941293 p:P527 [ ps:P527 ?Q5_8 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [N.e.r.d]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q941293>?"
    },
    {
        "Question": "What racing game did Mario not appear in?",
        "ID": "454c457e",
        "Entities": "Q12379:Mario",
        "Mintaka Answer": "Q545072:Diddy Kong Racing",
        "Sparklis label based": "give me every [video game] that has as a <genre> [racing video game] and that not has as a <characters> [Mario]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P136> <Q860750> and that not has as a <P674> <Q12379>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<genre> [ ps:<genre> wd:[Racing Video Game] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Mario] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P136 [ ps:P136 wd:Q860750 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q12379 ] . } ) }",
        "Squall label based": "which [Video Game] has <genre> [Racing Video Game] and has not <characters> [Mario]?",
        "Squall ID based": "which <Q7889> has <P136> <Q860750> and has not <P674> <Q12379>?"
    },
    {
        "Question": "In how many movies did Keanu Reeves portray the character John Wick?",
        "ID": "cd8b0c06",
        "Entities": "Q64417139:John Wick,Q43416:Keanu Reeves",
        "Mintaka Answer": "Q15732802:John Wick,Q21451640:John Wick: Chapter 2,Q52951815:John Wick: Chapter 3 \u2013 Parabellum",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [John Wick] and that has as a <cast member> [Keanu Reeves] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q106544377> and that has as a <P161> <Q43416> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:<instance of> wd:[Film] . ?Q11424_84 p:<part of the series> [ ps:<part of the series> wd:[John Wick] ] . ?Q11424_84 p:<cast member> [ ps:<cast member> wd:[Keanu Reeves] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:P31 wd:Q11424 . ?Q11424_84 p:P179 [ ps:P179 wd:Q106544377 ] . ?Q11424_84 p:P161 [ ps:P161 wd:Q43416 ] . }",
        "Squall label based": "which [Film] has <part of the series> [John Wick] and has <cast member> [Keanu Reeves]?",
        "Squall ID based": "which <Q11424> has <P179> <Q106544377> and has <P161> <Q43416>?"
    },
    {
        "Question": "Which book in the Game of Thrones series was released in 2000?",
        "ID": "e4234367",
        "Entities": "Q45875:A Song of Ice and Fire,2000:None",
        "Mintaka Answer": "Q431927:A Storm of Swords",
        "Sparklis label based": "give me every literary work that has  a part of the series that has as a derivative work  Game of Thrones   and that has  a publication date  and give me the year of the publication date that is 2000",
        "Sparklis ID based": "give me every literary work that has a part of the series that has as a derivative work Game of Thrones and that has a publication date and give me the year of the publication date that is 2000",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> ?P179_102 ] . ?P179_102 p:<derivative work> [ ps:<derivative work> wd:[Game Of Thrones] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_107 ] . BIND (year(?P577_107) AS ?expr_233) FILTER ( ?expr_233 = \"2000\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 ?P179_102 ] . ?P179_102 p:P4969 [ ps:P4969 wd:Q23572 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_107 ] . BIND (year(?P577_107) AS ?expr_233) FILTER ( ?expr_233 = \"2000\"^^xsd:integer ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [A Song Of Ice And Fire] and has a <publication date> whose year is 2000?",
        "Squall ID based": "which <Q7725634> has <P179> <Q45875> and has a <P577> whose year is 2000?"
    },
    {
        "Question": "What was the first Indiana Jones movie chronologically?",
        "ID": "84c9cff2",
        "Entities": "Q2562640:Indiana Jones,1:None",
        "Mintaka Answer": "Q174284:Raiders of the Lost Ark",
        "Sparklis label based": "give me every [film] that has as a <characters> [Indiana Jones 2] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P674> <Q148659> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<characters> [ ps:<characters> wd:[Indiana Jones 2] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P674 [ ps:P674 wd:Q148659 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <characters> [Indiana Jones 2] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P674> <Q148659> and has the lowest <P577>?"
    },
    {
        "Question": "Did The Thing come out before Halloween?",
        "ID": "ff816222",
        "Entities": "Q210756:The Thing,Q221103:Halloween",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[The Thing] has a <publication date> and [Halloween 2] has a <publication date> and give me the year of the 1st <publication date> and give me the year of the 2nd <publication date>",
        "Sparklis ID based": "<Q210756> has a <P577> and <Q221103> has a <P577> and give me the year of the 1st <P577> and give me the year of the 2nd <P577>",
        "Sparql label based": "ASK { wd:[The Thing] p:<publication date> [ ps:<publication date> ?area1 ] . wd:[Halloween 2] p:<publication date> [ ps:<publication date> ?area2 ] . FILTER (?area1 < ?area2) }",
        "Sparql ID based": "ASK { wd:Q210756 p:P577 [ ps:P577 ?area1 ] . wd:Q221103 p:P577 [ ps:P577 ?area2 ] . FILTER (?area1 < ?area2) }",
        "Squall label based": "whether [The Thing] has a <publication date> lesser than a <publication date> of [Halloween 2]?",
        "Squall ID based": "whether <Q210756> has a <P577> lesser than a <P577> of <Q221103>?"
    },
    {
        "Question": "When did Leonardo DiCaprio win an Oscar?",
        "ID": "2e02f486",
        "Entities": "Q19020:Academy Awards,Q38111:Leonardo DiCaprio",
        "Mintaka Answer": "2016",
        "Sparklis label based": "[Leonardo DiCaprio] <award received> with a <point in time> [Academy Award for Best Actor] and give me the year of the <point in time>",
        "Sparklis ID based": "<Q38111> <P166> with a <P585> <Q103916> and give me the year of the <P585>",
        "Sparql label based": "select distinct ?expr_130 where { wd:[Leonardo Dicaprio] p:<award received> [ n1:<point in time> ?p585_4 ; ps:<award received> wd:[Academy Award For Best Actor] ] . bind (year(?p585_4) as ?expr_130) }",
        "Sparql ID based": "select distinct ?expr_130 where { wd:Q38111 p:P166 [ n1:P585 ?p585_4 ; ps:P166 wd:Q103916 ] . bind (year(?p585_4) as ?expr_130) }",
        "Squall label based": "what is the year of a thing at which <point in time> [Leonardo Dicaprio] has <award received> [Academy Award For Best Actor]?",
        "Squall ID based": "what is the year of a thing at which <P585> <Q38111> has <P166> <Q103916>?"
    },
    {
        "Question": "Which original member of Earth, Wind and Fire is not alive?",
        "ID": "6d15b1ed",
        "Entities": "Q28974:Earth, Wind & Fire",
        "Mintaka Answer": "Q1295870:Maurice White",
        "Sparklis label based": "[Earth, Wind & Fire] <has part(s)> that has a <date of death>",
        "Sparklis ID based": "<Q28974> <P527> that has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Earth, Wind & Fire] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<date of death> [ ps:<date of death> ?P570_46 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q28974 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P570 [ ps:P570 ?P570_46 ] . }",
        "Squall label based": "what is a <has part(s)> of [Earth, Wind & Fire] and has a <date of death>?",
        "Squall ID based": "what is a <P527> of <Q28974> and has a <P570>?"
    },
    {
        "Question": "How many countries surround the Black Sea?",
        "ID": "c55e8ecc",
        "Entities": "Q166:Black Sea",
        "Mintaka Answer": "6",
        "Sparklis label based": "[Black Sea] has a <basin country> and give me the number of <basin country>",
        "Sparklis ID based": "<Q166> has a <P205> and give me the number of <P205>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P205_8) AS ?number_of_46) WHERE { wd:[Black Sea] p:<basin country> [ ps:<basin country> ?P205_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P205_8) AS ?number_of_46) WHERE { wd:Q166 p:P205 [ ps:P205 ?P205_8 ] . }",
        "Squall label based": "how many thing is a <basin country> of [Black Sea]?",
        "Squall ID based": "how many thing is a <P205> of <Q166>?"
    },
    {
        "Question": "Who is Nero Wolfe's confidential assistant?",
        "ID": "4556bda4",
        "Entities": "Q371774:Nero Wolfe",
        "Mintaka Answer": "Q4844948:Della Street",
        "Sparklis label based": "[Nero Wolfe] has a <present in work> that is the <present in work> of something that has as an <occupation> [private investigator]",
        "Sparklis ID based": "<Q371774> has a <P1441> that is the <P1441> of something that has as an <P106> <Q1058617>",
        "Sparql label based": "select distinct ?thing_407 where { wd:[Nero Wolfe] p:<present in work> [ ps:<present in work> ?p1441_304 ] . ?thing_407 p:<present in work> [ ps:<present in work> ?p1441_304 ] . ?thing_407 p:<occupation> [ ps:<occupation> wd:[Private Investigator] ] . filter (?thing_407 != wd:[Nero Wolfe]) }",
        "Sparql ID based": "select distinct ?thing_407 where { wd:Q371774 p:P1441 [ ps:P1441 ?p1441_304 ] . ?thing_407 p:P1441 [ ps:P1441 ?p1441_304 ] . ?thing_407 p:P106 [ ps:P106 wd:Q1058617 ] . filter (?thing_407 != wd:Q371774) }",
        "Squall label based": "what has <present in work> a <present in work> of [Nero Wolfe] and has <occupation> [Private Investigator] and is not [Nero Wolfe]?",
        "Squall ID based": "what has <P1441> a <P1441> of <Q371774> and has <P106> <Q1058617> and is not <Q371774>?"
    },
    {
        "Question": "Which actor was the star of Titanic and was born in Los Angeles, California?",
        "ID": "2723bb1b",
        "Entities": "Q44578:Titanic, Q65:Los Angeles",
        "Mintaka Answer": "Q38111:Leonardo DiCaprio",
        "Sparklis label based": "[Titanic 2] has a <cast member> that has as a <place of birth> [Los Angeles]",
        "Sparklis ID based": "<Q44578> has a <P161> that has as a <P19> <Q65>",
        "Sparql label based": "SELECT DISTINCT ?P161_8 WHERE { wd:[Titanic 2] p:<cast member> [ ps:<cast member> ?P161_8 ] . ?P161_8 p:<place of birth> [ ps:<place of birth> wd:[Los Angeles] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P161_8 WHERE { wd:Q44578 p:P161 [ ps:P161 ?P161_8 ] . ?P161_8 p:P19 [ ps:P19 wd:Q65 ] . }",
        "Squall label based": "what is a <cast member> of [Titanic 2] and has <place of birth> [Los Angeles]?",
        "Squall ID based": "what is a <P161> of <Q44578> and has <P19> <Q65>?"
    },
    {
        "Question": "Which Xbox console sold the most?",
        "ID": "c9c759ba",
        "Entities": "Q132020:Xbox",
        "Mintaka Answer": "Q48263:Xbox 360",
        "Sparklis label based": "give me every [video game console model] that has as a <follows> [Xbox] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q56682555> that has as a <P155> <Q132020> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q56682555_1 ?P2664_5 WHERE { ?Q56682555_1 wdt:<instance of> wd:[Video Game Console Model] . ?Q56682555_1 p:<follows> [ ps:<follows> wd:[Xbox] ] . ?Q56682555_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q56682555_1 ?P2664_5 WHERE { ?Q56682555_1 wdt:P31 wd:Q56682555 . ?Q56682555_1 p:P155 [ ps:P155 wd:Q132020 ] . ?Q56682555_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game Console Model] has <follows> [Xbox] and has the highest <units sold>?",
        "Squall ID based": "which <Q56682555> has <P155> <Q132020> and has the highest <P2664>?"
    },
    {
        "Question": "Which Lord of the Rings movie is the shortest?",
        "ID": "46a96e0b",
        "Entities": "Q190214:The Lord of the Rings trilogy",
        "Mintaka Answer": "Q127367:The Lord of the Rings: The Fellowship of the Ring",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Lord of the Rings trilogy] and that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q190214> and that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY ASC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q190214 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY ASC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Lord Of The Rings Trilogy] and has the lowest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q190214> and has the lowest <P2047>?"
    },
    {
        "Question": "What is the name of the ninth Fast & Furious movie?",
        "ID": "75085dd5",
        "Entities": "Q1576873:Fast & Furious,9:None",
        "Mintaka Answer": "Q29466808:F9",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 9 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 9 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"9\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"9\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"9\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"9\" <Q1576873>?"
    },
    {
        "Question": "Who was the third president of the USA?",
        "ID": "f8a60be8",
        "Entities": "Q30:United States of America,3:None",
        "Mintaka Answer": "Q11812:Thomas Jefferson",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 3 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 3 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"3\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"3\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"3\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"3\" <Q11696>?"
    },
    {
        "Question": "Which 2005 Christopher Nolan movie does not star Hugh Jackman?",
        "ID": "1a3f9385",
        "Entities": "Q25191:Christopher Nolan, Q129591:Hugh Jackman",
        "Mintaka Answer": "Q166262:Batman Begins",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that not has as a <cast member> [Hugh Jackman] and that has a <publication date> and where the year of the <publication date> = 2005",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that not has as a <P161> <Q129591> and that has a <P577> and where the year of the <P577> = 2005",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Hugh Jackman] ] . } ) ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . FILTER ( (year(?P577_5) = 2005) ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q25191 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q129591 ] . } ) ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . FILTER ( (year(?P577_5) = 2005) ) } LIMIT 1",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has not <cast member> [Hugh Jackman] and has a <publication date> whose year is 2005?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has not <P161> <Q129591> and has a <P577> whose year is 2005?"
    },
    {
        "Question": "Which Harry Potter film is the shortest?",
        "ID": "81d3826f",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q232009:Harry Potter and the Deathly Hallows \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the lowest-to-highest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the lowest-to-highest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P2047_12 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_8 p:<duration> [ ps:<duration> ?P2047_12 ] . } ORDER BY ASC(?P2047_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P2047_12 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_8 p:P2047 [ ps:P2047 ?P2047_12 ] . } ORDER BY ASC(?P2047_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the lowest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the lowest <P2047>?"
    },
    {
        "Question": "What country contains the Pyrenees and also speaks French?",
        "ID": "2b795cbb",
        "Entities": "Q150:French, Q12431:Pyrenees",
        "Mintaka Answer": "Q142:France",
        "Sparklis label based": "[Pyrenees] has a <country> that has as an <official language> [French]",
        "Sparklis ID based": "<Q12431> has a <P17> that has as an <P37> <Q150>",
        "Sparql label based": "SELECT DISTINCT ?P17_8 WHERE { wd:[Pyrenees] p:<country> [ ps:<country> ?P17_8 ] . ?P17_8 p:<official language> [ ps:<official language> wd:[French] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P17_8 WHERE { wd:Q12431 p:P17 [ ps:P17 ?P17_8 ] . ?P17_8 p:P37 [ ps:P37 wd:Q150 ] . }",
        "Squall label based": "what is a <country> of [Pyrenees] and has <official language> [French]?",
        "Squall ID based": "what is a <P17> of <Q12431> and has <P37> <Q150>?"
    },
    {
        "Question": "Is Mount Everest taller than Denali?",
        "ID": "a9063f9a",
        "Entities": "Q130018:Denali, Q513:Mount Everest",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Denali] has an <elevation above sea level> and [Mount Everest] has an <elevation above sea level>",
        "Sparklis ID based": "<Q130018> has an <P2044> and <Q513> has an <P2044>",
        "Sparql label based": "ASK { wd:[Mount Everest] p:<elevation above sea level> [ ps:<elevation above sea level> ?area1 ] . wd:[Denali] p:<elevation above sea level> [ ps:<elevation above sea level> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q513 p:P2044 [ ps:P2044 ?area1 ] . wd:Q130018 p:P2044 [ ps:P2044 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Mount Everest] has a <elevation above sea level> greater than a <elevation above sea level> of [Denali]?",
        "Squall ID based": "whether <Q513> has a <P2044> greater than a <P2044> of <Q130018>?"
    },
    {
        "Question": "How many movies has James Cameron directed?",
        "ID": "4d1f86d2",
        "Entities": "Q42574:James Cameron",
        "Mintaka Answer": "Q519406:Xenogenesis,Q1576981:Piranha II: The Spawning,Q162255:The Terminator,Q104814:Aliens,Q336517:The Abyss",
        "Sparklis label based": "give me every [film] that has as a <director> [James Cameron]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q42574>",
        "Sparql label based": "select distinct (count(distinct ?q11424_84) as ?number_of_121) where { ?q11424_84 wdt:<instance of> wd:[Film] . ?q11424_84 p:<director> [ ps:<director> wd:[James Cameron] ] . }",
        "Sparql ID based": "select distinct (count(distinct ?q11424_84) as ?number_of_121) where { ?q11424_84 wdt:P31 wd:Q11424 . ?q11424_84 p:P57 [ ps:P57 wd:Q42574 ] . }",
        "Squall label based": "how many [Film] has <director> [James Cameron]?",
        "Squall ID based": "how many <Q11424> has <P57> <Q42574>?"
    },
    {
        "Question": "What was the third Thor movie to be released?",
        "ID": "8fab578a",
        "Entities": "Q88306753:Thor,3:None",
        "Mintaka Answer": "Q22665878:Thor: Ragnarok",
        "Sparklis label based": "give me every [film] that has a <part of the series> that is [Thor 2] with <series ordinal> 3",
        "Sparklis ID based": "give me every <Q11424> that has a <P179> that is <Q88306753> with <P1545> 3",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> ?P179_7 ; n1:<series ordinal> \"3\" ] . FILTER ( ?P179_7 = wd:[Thor 2] ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 ?P179_7 ; n1:P1545 \"3\" ] . FILTER ( ?P179_7 = wd:Q88306753 ) }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" a thing that is [Thor 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" a thing that is <Q88306753>?"
    },
    {
        "Question": "How many Ace Ventura movies are there?",
        "ID": "2ecec640",
        "Entities": "Q2712598:Ace Ventura",
        "Mintaka Answer": "Q340138:Ace Ventura: Pet Detective,Q340127:Ace Ventura: When Nature Calls,Q340071:Ace Ventura Jr.: Pet Detective",
        "Sparklis label based": "give me every [film] that <matches> [ace ventura] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that <matches> <Q340044> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . VALUES ?Q11424_1 { wd:[Ace Ventura: When Nature Calls] wd:[Ace Ventura: Pet Detective 2] wd:[Ace Ventura 3] wd:[Ace Ventura Jr.: Pet Detective] wd:[Ace Ventura: Pet Detective] wd:[Ace Ventura 2] wd:[Ace Ventura: The Cd-rom Game] wd:[Ace Ventura Pet Detective: The Case Of The Serial Shaver] wd:[Ace Ventura] wd:[List Of Ace Ventura: Pet Detective Episodes] wd:[Template:ace Ventura] wd:[2] wd:[Category:ace Ventura] wd:[Bonaventura Peeters The Elder] wd:[Antihypertensive Effect Of Carica Papaya Via A Reduction In Ace Activity And Improved Baroreflex] wd:[Cardiovascular Outcomes And Angiotensin Converting Enzyme Inhibitors: Beyond Blood Pressure Control. Editorial To: \"secondary Prevention Of Coronary Disease With Ace Inhibition--does Blood Pressure Reduction With Perindopril Explain The Benefits In] wd:[] wd:[Decreased Muscle Ace Activity Enhances Functional Response To Endurance Training In Rats, Without Change In Muscle Oxidative Capacity Or Contractile Phenotype.] wd:[Does Ace Inhibition Enhance Endurance Performance And Muscle Energy Metabolism In Rats?] wd:[Difficult Cases In Heart Failure: Raison D'\u00eatre Behind Ace Inhibitors And At1 Receptor Combinations In Chronic Heart Failure: Chemical Nuances Or Clinical Significance?] wd:[Ace Inhibition Prevents Myocardial Infarction-induced Skeletal Muscle Mitochondrial Dysfunction] wd:[Magnetic-reversal Stratigraphy Of Pliocene-pleistocene Producing Section Of Saticoy Oil Field, Ventura Basin, California] wd:[Multiculturalism In Post-war Architecture: Aldo Van Eyck And The Otterlo Circles] wd:[Alcohol And Bone Turnover Markers Among People Living With Hiv And Substance Use Disorder] wd:[[atorvastatin Induced Increase In Homologous Angiotensin I Converting Enzyme (ace2) Mrna Is Associated To Decreased Fibrosis And Decreased Left Ventricular Hypertrophy In A Rat Model Of Diabetic Cardiomyopathy]] wd:[Alcohol Consumption And Bone Mineral Density In People With Hiv And Substance Use Disorder: A Prospective Cohort Study] wd:[A Diabetic Milieu Increases Ace2 Expression And Cellular Susceptibility To Sars-cov-2 Infections In Human Kidney Organoids And Patient Cells]} }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . VALUES ?Q11424_1 { wd:Q340127 wd:Q340138 wd:Q2712598 wd:Q340071 wd:Q82986 wd:Q2822935 wd:Q2822938 wd:Q63171358 wd:Q340044 wd:Q17084420 wd:Q6667860 wd:Q20121219 wd:Q8220063 wd:Q605860 wd:Q58794608 wd:Q82589786 wd:Q9745113 wd:Q46029706 wd:Q44569117 wd:Q77595938 wd:Q83154369 wd:Q64877953 wd:Q113496343 wd:Q89987817 wd:Q84773748 wd:Q64124348 wd:Q112700795} }",
        "Squall label based": "how many [Film] is [Ace Ventura: When Nature Calls] or [Ace Ventura: Pet Detective 2] or [Ace Ventura 3] or [Ace Ventura Jr.: Pet Detective] or [Ace Ventura: Pet Detective] or [Ace Ventura 2] or [Ace Ventura: The Cd-rom Game] or [Ace Ventura Pet Detective: The Case Of The Serial Shaver] or [Ace Ventura] or [List Of Ace Ventura: Pet Detective Episodes] or [Template:ace Ventura] or [2] or [Category:ace Ventura] or [Bonaventura Peeters The Elder] or [Antihypertensive Effect Of Carica Papaya Via A Reduction In Ace Activity And Improved Baroreflex] or [Cardiovascular Outcomes And Angiotensin Converting Enzyme Inhibitors: Beyond Blood Pressure Control. Editorial To: \"secondary Prevention Of Coronary Disease With Ace Inhibition--does Blood Pressure Reduction With Perindopril Explain The Benefits In] or [] or [Decreased Muscle Ace Activity Enhances Functional Response To Endurance Training In Rats, Without Change In Muscle Oxidative Capacity Or Contractile Phenotype.] or [Does Ace Inhibition Enhance Endurance Performance And Muscle Energy Metabolism In Rats?] or [Difficult Cases In Heart Failure: Raison D'\u00eatre Behind Ace Inhibitors And At1 Receptor Combinations In Chronic Heart Failure: Chemical Nuances Or Clinical Significance?] or [Ace Inhibition Prevents Myocardial Infarction-induced Skeletal Muscle Mitochondrial Dysfunction] or [Magnetic-reversal Stratigraphy Of Pliocene-pleistocene Producing Section Of Saticoy Oil Field, Ventura Basin, California] or [Multiculturalism In Post-war Architecture: Aldo Van Eyck And The Otterlo Circles] or [Alcohol And Bone Turnover Markers Among People Living With Hiv And Substance Use Disorder] or [[atorvastatin Induced Increase In Homologous Angiotensin I Converting Enzyme (ace2) Mrna Is Associated To Decreased Fibrosis And Decreased Left Ventricular Hypertrophy In A Rat Model Of Diabetic Cardiomyopathy]] or [Alcohol Consumption And Bone Mineral Density In People With Hiv And Substance Use Disorder: A Prospective Cohort Study] or [A Diabetic Milieu Increases Ace2 Expression And Cellular Susceptibility To Sars-cov-2 Infections In Human Kidney Organoids And Patient Cells]?",
        "Squall ID based": "how many <Q11424> is <Q340127> or <Q340138> or <Q2712598> or <Q340071> or <Q82986> or <Q2822935> or <Q2822938> or <Q63171358> or <Q340044> or <Q17084420> or <Q6667860> or <Q20121219> or <Q8220063> or <Q605860> or <Q58794608> or <Q82589786> or <Q9745113> or <Q46029706> or <Q44569117> or <Q77595938> or <Q83154369> or <Q64877953> or <Q113496343> or <Q89987817> or <Q84773748> or <Q64124348> or <Q112700795>?"
    },
    {
        "Question": "When did Jennifer Lawrence win her first Oscar?",
        "ID": "ae20cc58",
        "Entities": "Q19020:Academy Awards,Q189490:Jennifer Lawrence,1:None",
        "Mintaka Answer": "2012",
        "Sparklis label based": "[Jennifer Lawrence] <award received> an [Academy Awards] with a <point in time> and give me the year of the <point in time>",
        "Sparklis ID based": "<Q189490> <P166> an <Q19020> with a <P585> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_129 WHERE { ?Q19020_7 wdt:<instance of> wd:[Academy Awards] . wd:[Jennifer Lawrence] p:<award received> [ ps:<award received> ?Q19020_7 ; n1:<point in time> ?P585_44 ] . BIND (year(?P585_44) AS ?expr_129) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_129 WHERE { ?Q19020_7 wdt:P31 wd:Q19020 . wd:Q189490 p:P166 [ ps:P166 ?Q19020_7 ; n1:P585 ?P585_44 ] . BIND (year(?P585_44) AS ?expr_129) }",
        "Squall label based": "what is the year of a thing at which <point in time> [Jennifer Lawrence] has <award received> a [Academy Awards]?",
        "Squall ID based": "what is the year of a thing at which <P585> <Q189490> has <P166> a <Q19020>?"
    },
    {
        "Question": "Which president was Donald Trump?",
        "ID": "ae9a1e2d",
        "Entities": "Q22686:Donald Trump",
        "Mintaka Answer": "45",
        "Sparklis label based": "[Donald Trump] has as a <position held> with a <series ordinal> [President of the United States]",
        "Sparklis ID based": "<Q22686> has as a <P39> with a <P1545> <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?P1545_4 WHERE { wd:[Donald Trump] p:<position held> [ n1:<series ordinal> ?P1545_4 ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1545_4 WHERE { wd:Q22686 p:P39 [ n1:P1545 ?P1545_4 ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "at which <series ordinal> [Donald Trump] has <position held> [President Of The United States]?",
        "Squall ID based": "at which <P1545> <Q22686> has <P39> <Q11696>?"
    },
    {
        "Question": "How many Republican governors has New Hampshire had since 2010?",
        "ID": "d4e61012",
        "Entities": "Q29468:Republican Party, Q759:New Hampshire",
        "Mintaka Answer": "1",
        "Sparklis label based": "give me every [human] that has as a <member of political party> [Republican Party] and that has as a <position held> [Governor of New Hampshire] that has as an <applies to jurisdiction New Hampshire> with a <start time> and where the year of the <start time> \u2265 2010 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P102> <Q29468> and that has as a <P39> <Q5589687> that has as an <applies_to_jurisdiction_New_Hampshire> with a <P580> and where the year of the <P580> \u2265 2010 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of New Hampshire] ; n1:<start time> ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2010\") ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_131) WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q5589687 ; n1:P580 ?P580_9 ] . FILTER ( (str(?P580_9) >= \"2010\") ) }",
        "Squall label based": "how many [Human] has <member of political party> [Republican Party] and has <position held> at a <start time> greater or equal to 2010 [Governor Of New Hampshire]?",
        "Squall ID based": "how many <Q5> has <P102> <Q29468> and has <P39> at a <P580> greater or equal to 2010 <Q5589687>?"
    },
    {
        "Question": "What book written by Hunter Thompson was released in 1971?",
        "ID": "059f7b68",
        "Entities": "Q219780:Hunter S. Thompson",
        "Mintaka Answer": "Q772435:Fear and Loathing in Las Vegas",
        "Sparklis label based": "give me every [written work] that has as an <author> [Hunter S. Thompson] and that has as a <publication date> and where the year of the <publication date> = 1971",
        "Sparklis ID based": "give me every <Q47461344> that has as an <P50> <Q219780> and that has as a <P577> and where the year of the <P577> = 1971",
        "Sparql label based": "SELECT DISTINCT ?Q47461344_132 WHERE { ?Q47461344_132 wdt:<instance of> wd:[Written Work] . ?Q47461344_132 p:<author> [ ps:<author> wd:[Hunter S. Thompson] ] . ?Q47461344_132 p:<publication date> [ ps:<publication date> ?P577_137 ] . FILTER ( (year(?P577_137) = \"1971\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q47461344_132 WHERE { ?Q47461344_132 wdt:P31 wd:Q47461344 . ?Q47461344_132 p:P50 [ ps:P50 wd:Q219780 ] . ?Q47461344_132 p:P577 [ ps:P577 ?P577_137 ] . FILTER ( (year(?P577_137) = \"1971\"^^xsd:integer) ) }",
        "Squall label based": "which [Written Work] has <author> [Hunter S. Thompson] and has a <publication date> whose year is 1971?",
        "Squall ID based": "which <Q47461344> has <P50> <Q219780> and has a <P577> whose year is 1971?"
    },
    {
        "Question": "Which countries in Europe do not have a sea border?",
        "ID": "495ce6b0",
        "Entities": "Q46:Europe",
        "Mintaka Answer": "Q228:Andorra, Q238:San Marino, Q403:Serbia, Q214:Slovakia, Q40:Austria, Q184:Belarus, Q213:Czech Republic, Q28:Hungary, Q347:Liechtenstein, Q32:Luxembourg, Q221:North Macedonia, Q217:Moldova",
        "Sparklis label based": "give me every [sovereign state] that has as a <continent> [Europe] and that not has as a <located in or next to body of water> a [sea]",
        "Sparklis ID based": "give me every <Q3624078> that has as a <P30> <Q46> and that not has as a <P206> a <Q165>",
        "Sparql label based": "SELECT DISTINCT ?Q3624078_1 WHERE { ?Q3624078_1 wdt:<instance of> wd:[Sovereign State] . ?Q3624078_1 p:<continent> [ ps:<continent> wd:[Europe] ] . FILTER ( NOT EXISTS { ?P206_6 wdt:<instance of> wd:[Sea] . ?Q3624078_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> ?P206_6 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q3624078_1 WHERE { ?Q3624078_1 wdt:P31 wd:Q3624078 . ?Q3624078_1 p:P30 [ ps:P30 wd:Q46 ] . FILTER ( NOT EXISTS { ?P206_6 wdt:P31 wd:Q165 . ?Q3624078_1 p:P206 [ ps:P206 ?P206_6 ] . } ) }",
        "Squall label based": "which [Sovereign State] has <continent> [Europe] and has not <located in or next to body of water> a [Sea]?",
        "Squall ID based": "which <Q3624078> has <P30> <Q46> and has not <P206> a <Q165>?"
    },
    {
        "Question": "How many states are there in America?",
        "ID": "c69431d1",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q99:California,Q1221:Idaho,Q816:Arizona,Q1439:Texas,Q1227:Nevada",
        "Sparklis label based": "give me every [U.S. state] and give me the number of [U.S. state]",
        "Sparklis ID based": "give me every <Q35657> and give me the number of <Q35657>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . }",
        "Squall label based": "how many [U.s. State] is there?",
        "Squall ID based": "how many <Q35657> is there?"
    },
    {
        "Question": "How many James Bond movies are there with Daniel Craig?",
        "ID": "5b378a8f",
        "Entities": "Q4547:Daniel Craig,Q844:James Bond",
        "Mintaka Answer": "Q151904:Casino Royale,Q181540:Quantum of Solace,Q4941:Skyfall,Q18602670:Spectre,Q21534241:No Time to Die",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [James Bond] and that has as a <cast member> [Daniel Craig]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2484680> and that has as a <P161> <Q4547>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_169 WHERE { ?Q11424_169 wdt:<instance of> wd:[Film] . ?Q11424_169 p:<part of the series> [ ps:<part of the series> wd:[James Bond] ] . ?Q11424_169 p:<cast member> [ ps:<cast member> wd:[Daniel Craig] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_169 WHERE { ?Q11424_169 wdt:P31 wd:Q11424 . ?Q11424_169 p:P179 [ ps:P179 wd:Q2484680 ] . ?Q11424_169 p:P161 [ ps:P161 wd:Q4547 ] . }",
        "Squall label based": "which [Film] has <part of the series> [James Bond] and has <cast member> [Daniel Craig]?",
        "Squall ID based": "which <Q11424> has <P179> <Q2484680> and has <P161> <Q4547>?"
    },
    {
        "Question": "Which movie in 1998 was Ian McKellen nominated for Best Actor in a Leading Role but lost?",
        "ID": "8c373f71",
        "Entities": "Q170510:Ian McKellen, Q103916:Academy Award for Best Actor",
        "Mintaka Answer": "Q686533:Gods and Monsters",
        "Sparklis label based": "Ian McKellen is nominated for  an award for best leading actor with a for work with a point in time  and give me the year of the point in time that is 1998",
        "Sparklis ID based": "Ian McKellen is nominated for an award for best leading actor with a for work with a point in time and give me the year of the point in time that is 1998",
        "Sparql label based": "SELECT DISTINCT ?P1686_7 WHERE { ?Q96474691_106 wdt:<instance of> wd:[Award For Best Leading Actor] . wd:[Ian Mckellen] p:<nominated for> [ ps:<nominated for> ?Q96474691_106 ; n1:<for work> ?P1686_7 ; n1:<point in time> ?P585_10 ] . BIND (year(?P585_10) AS ?expr_95) FILTER ( ?expr_95 = \"1998\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_7 WHERE { ?Q96474691_106 wdt:P31 wd:Q96474691 . wd:Q170510 p:P1411 [ ps:P1411 ?Q96474691_106 ; n1:P1686 ?P1686_7 ; n1:P585 ?P585_10 ] . BIND (year(?P585_10) AS ?expr_95) FILTER ( ?expr_95 = \"1998\"^^xsd:integer ) }",
        "Squall label based": "at which <for work> [Ian Mckellen] has <nominated for> at a <point in time> whose year is 1998 a [Award For Best Leading Actor]?",
        "Squall ID based": "at which <P1686> <Q170510> has <P1411> at a <P585> whose year is 1998 a <Q96474691>?"
    },
    {
        "Question": "How many Captain America movies has Chris Evans starred in?",
        "ID": "9410e0f9",
        "Entities": "Q178348:Chris Evans,Q190679:Captain America",
        "Mintaka Answer": "Q275120:Captain America: The First Avenger,Q18407657:Captain America: Civil War,Q1765358:Captain America: The Winter Soldier",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Captain America] and that has as a <cast member> [Chris Evans] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q17385223> and that has as a <P161> <Q178348> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:<instance of> wd:[Film] . ?Q11424_159 p:<part of the series> [ ps:<part of the series> wd:[Captain America] ] . ?Q11424_159 p:<cast member> [ ps:<cast member> wd:[Chris Evans] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:P31 wd:Q11424 . ?Q11424_159 p:P179 [ ps:P179 wd:Q17385223 ] . ?Q11424_159 p:P161 [ ps:P161 wd:Q178348 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Captain America] and has <cast member> [Chris Evans]?",
        "Squall ID based": "which <Q11424> has <P179> <Q17385223> and has <P161> <Q178348>?"
    },
    {
        "Question": "Who developed Gran Turismo?",
        "ID": "84f38763",
        "Entities": "Q652928:Gran Turismo",
        "Mintaka Answer": "Q15070334:Fireproof Studios",
        "Sparklis label based": "[Gran Turismo] has a <developer>",
        "Sparklis ID based": "<Q652928> has a <P178>",
        "Sparql label based": "select distinct ?p178_8 where { wd:[Gran Turismo] p:<developer> [ ps:<developer> ?p178_8 ] . }",
        "Sparql ID based": "select distinct ?p178_8 where { wd:Q652928 p:P178 [ ps:P178 ?p178_8 ] . }",
        "Squall label based": "what is a <developer> of [Gran Turismo]?",
        "Squall ID based": "what is a <P178> of <Q652928>?"
    },
    {
        "Question": "How many Formula 1 teams has Mick Schumacher driven for?",
        "ID": "c5aa28d9",
        "Entities": "Q10497835:Formula One team, Q18119599:Mick Schumacher",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Mick Schumacher] has a <member of sports team> that is the <instance of> [Formula One team] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q18119599> has a <P54> that is the <P31> <Q10497835> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Mick Schumacher] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<instance of> [ ps:<instance of> wd:[Formula One Team] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q18119599 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P31 [ ps:P31 wd:Q10497835 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Mick Schumacher] and has <instance of> [Formula One Team]?",
        "Squall ID based": "how many thing is a <P54> of <Q18119599> and has <P31> <Q10497835>?"
    },
    {
        "Question": "Which country has a higher population, Greenland or Iceland?",
        "ID": "c769b5a7",
        "Entities": "Q189:Iceland,Q223:Greenland",
        "Mintaka Answer": "Q189:Iceland",
        "Sparklis label based": "Iceland has a <population> with <point in time> 2019-12-31T00:00:00Z and [Greenland] has a <population> with <point in time> 2019-01-01T00:00:00Z",
        "Sparklis ID based": "Iceland has a <P1082> with <P585> 2019-12-31T00:00:00Z and <Q223> has a <P1082> with <P585> 2019-01-01T00:00:00Z",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Iceland] wd:[Greenland] } ?x p:<population> [ ps:<population> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q189 wd:Q223 } ?x p:P1082 [ ps:P1082 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [Iceland] or [Greenland] and has the highest <population>?",
        "Squall ID based": "what is <Q189> or <Q223> and has the highest <P1082>?"
    },
    {
        "Question": "Which Hobbit movie is the longest?",
        "ID": "9bee6261",
        "Entities": "Q74331:The Hobbit trilogy",
        "Mintaka Answer": "Q80379:The Hobbit: An Unexpected Journey",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Hobbit trilogy] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q74331> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Hobbit Trilogy] ] . ?Q11424_349 p:<duration> [ ps:<duration> ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2047_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q74331 ] . ?Q11424_349 p:P2047 [ ps:P2047 ?P2047_353 ] . } ORDER BY DESC(?P2047_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Hobbit Trilogy] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q74331> and has the highest <P2047>?"
    },
    {
        "Question": "What artist wrote and played the song Blue Monk?",
        "ID": "5519a22e",
        "Entities": "Q2905615:Blue Monk",
        "Mintaka Answer": "Q109612:Thelonious Monk",
        "Sparklis label based": "[Blue Monk] has a <composer>",
        "Sparklis ID based": "<Q2905615> has a <P86>",
        "Sparql label based": "SELECT DISTINCT ?P86_8 WHERE { wd:[Blue Monk] p:<composer> [ ps:<composer> ?P86_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P86_8 WHERE { wd:Q2905615 p:P86 [ ps:P86 ?P86_8 ] . }",
        "Squall label based": "what is a <composer> of [Blue Monk]?",
        "Squall ID based": "what is a <P86> of <Q2905615>?"
    },
    {
        "Question": "Which of the Jurassic Park movies is the longest?",
        "ID": "a2f2b67c",
        "Entities": "Q2336369:Jurassic Park",
        "Mintaka Answer": "Q200873:The Lost World: Jurassic Park",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Jurassic Park] and that has the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q17862144> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_136 WHERE { ?Q11424_136 wdt:<instance of> wd:[Film] . ?Q11424_136 p:<part of the series> [ ps:<part of the series> wd:[Jurassic Park] ] . ?Q11424_136 p:<duration> [ ps:<duration> ?P2047_172 ] . } ORDER BY DESC(?P2047_172) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_136 WHERE { ?Q11424_136 wdt:P31 wd:Q11424 . ?Q11424_136 p:P179 [ ps:P179 wd:Q17862144 ] . ?Q11424_136 p:P2047 [ ps:P2047 ?P2047_172 ] . } ORDER BY DESC(?P2047_172) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Jurassic Park] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q17862144> and has the highest <P2047>?"
    },
    {
        "Question": "Which book in the Game of Thrones series was released in 2011?",
        "ID": "bf6e9d06",
        "Entities": "Q45875:A Song of Ice and Fire,2011:None",
        "Mintaka Answer": "Q28306:A Dance with Dragons",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [A Song of Ice and Fire] that has as a <derivative work> [Game of Thrones] and that has a <publication date> and where the year of the <publication date> = 2011",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q45875> that has as a <P4969> <Q23572> and that has a <P577> and where the year of the <P577> = 2011",
        "Sparql label based": "select distinct ?q7725634_8 ?p577_45 where { ?q7725634_8 wdt:<instance of> wd:[Literary Work] . ?q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[A Song Of Ice And Fire] ] . ?q7725634_8 p:<publication date> [ ps:<publication date> ?p577_45 ] . filter ( (year(?p577_45) = \"2011\"^^xsd:integer) ) }",
        "Sparql ID based": "select distinct ?q7725634_8 ?p577_45 where { ?q7725634_8 wdt:P31 wd:Q7725634 . ?q7725634_8 p:P179 [ ps:P179 wd:Q45875 ] . ?q7725634_8 p:P577 [ ps:P577 ?p577_45 ] . filter ( (year(?p577_45) = \"2011\"^^xsd:integer) ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [A Song Of Ice And Fire] and has a <publication date> whose year is 2011?",
        "Squall ID based": "which <Q7725634> has <P179> <Q45875> and has a <P577> whose year is 2011?"
    },
    {
        "Question": "Is Sunisa Lee younger than Jordan Chiles?",
        "ID": "10cbc1af",
        "Entities": "Q59484397:Sunisa Lee, Q17486476:Jordan Chiles",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "Sunisa Lee has a <date of birth> and [Jordan Chiles] has a <date of birth> and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "Sunisa Lee has a <P569> and <Q17486476> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Sunisa Lee] p:<date of birth> [ ps:<date of birth> ?area1 ] . wd:[Jordan Chiles] p:<date of birth> [ ps:<date of birth> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q59484397 p:P569 [ ps:P569 ?area1 ] . wd:Q17486476 p:P569 [ ps:P569 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Sunisa Lee] has a <date of birth> greater than a <date of birth> of [Jordan Chiles]?",
        "Squall ID based": "whether <Q59484397> has a <P569> greater than a <P569> of <Q17486476>?"
    },
    {
        "Question": "What is the name of the second Fast & Furious movie?",
        "ID": "b9b4b441",
        "Entities": "Q1576873:Fast & Furious,2:None",
        "Mintaka Answer": "Q222867:2 Fast 2 Furious",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 2 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 2 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"2\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"2\" <Q1576873>?"
    },
    {
        "Question": "How many movies has Quentin Tarantino directed?",
        "ID": "10a307c7",
        "Entities": "Q3772:Quentin Tarantino",
        "Mintaka Answer": "Q72962:Reservoir Dogs,Q47300912:Once Upon a Time in Hollywood,Q104123:Pulp Fiction,Q431252:Jackie Brown,Q165325:Kill Bill Volume 1,Q928019:Kill Bill Volume 2,Q1137310:Death Proof,Q153723:Inglourious Basterds,Q571032:Django Unchained,Q18225084:The Hateful Eight",
        "Sparklis label based": "give me every [film] that has as a <director> [Quentin Tarantino]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q3772>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_103 WHERE { ?Q11424_103 wdt:<instance of> wd:[Film] . ?Q11424_103 p:<director> [ ps:<director> wd:[Quentin Tarantino] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_103 WHERE { ?Q11424_103 wdt:P31 wd:Q11424 . ?Q11424_103 p:P57 [ ps:P57 wd:Q3772 ] . }",
        "Squall label based": "which [Film] has <director> [Quentin Tarantino]?",
        "Squall ID based": "which <Q11424> has <P57> <Q3772>?"
    },
    {
        "Question": "How many James Bond movies has Daniel Craig done?",
        "ID": "32be475d",
        "Entities": "Q4547:Daniel Craig,Q844:James Bond",
        "Mintaka Answer": "Q21534241:No Time to Die,Q18602670:Spectre,Q4941:Skyfall,Q181540:Quantum of Solace,Q151904:Casino Royale",
        "Sparklis label based": "[Daniel Craig] is the <cast member> of something that has as a <part of the series> [James Bond]",
        "Sparklis ID based": "<Q4547> is the <P161> of something that has as a <P179> <Q2484680>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:<cast member> [ ps:<cast member> wd:[Daniel Craig] ] . ?thing_8 p:<part of the series> [ ps:<part of the series> wd:[James Bond] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:P161 [ ps:P161 wd:Q4547 ] . ?thing_8 p:P179 [ ps:P179 wd:Q2484680 ] . }",
        "Squall label based": "what has <cast member> [Daniel Craig] and has <part of the series> [James Bond]?",
        "Squall ID based": "what has <P161> <Q4547> and has <P179> <Q2484680>?"
    },
    {
        "Question": "What year did The Beatles have their last Grammy?",
        "ID": "0b63401b",
        "Entities": "Q1299:The Beatles, Q41254:Grammy Award",
        "Mintaka Answer": "1997",
        "Sparklis label based": "[The Beatles] <award received> with the highest-to-lowest <point in time> something that is the <instance of> [Grammy Awards] and give me the year of the <point in time>",
        "Sparklis ID based": "<Q3295515> <P166> with the highest-to-lowest <P585> something that is the <P31> <Q41254> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_100 WHERE { wd:[The Beatles 2] p:<award received> [ n1:<point in time> ?P585_12 ; ps:<award received> ?P31_7 ] . ?P31_7 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . BIND (year(?P585_12) AS ?expr_100) } ORDER BY DESC(?P585_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_100 WHERE { wd:Q1299 p:P166 [ n1:P585 ?P585_12 ; ps:P166 ?P31_7 ] . ?P31_7 p:P31 [ ps:P31 wd:Q41254 ] . BIND (year(?P585_12) AS ?expr_100) } ORDER BY DESC(?P585_12) LIMIT 1",
        "Squall label based": "what is the year of the highest thing at which <point in time> [The Beatles 2] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the year of the highest thing at which <P585> <Q1299> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "Which member of NSYNC appeared in the movie The Social Network?",
        "ID": "ae2c4983",
        "Entities": "Q185888:The Social Network,Q154454:NSYNC",
        "Mintaka Answer": "Q43432:Justin Timberlake",
        "Sparklis label based": "give me every [human] that is the <cast member> of [The Social Network] and that <award received> [Primetime Emmy Award]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q185888> and that <P166> <Q1044427>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[The Social Network] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<award received> [ ps:<award received> wd:[Primetime Emmy Award] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q185888 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P166 [ ps:P166 wd:Q1044427 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [The Social Network] and has <award received> [Primetime Emmy Award]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q185888> and has <P166> <Q1044427>?"
    },
    {
        "Question": "When did Al Pacino get his first Oscar?",
        "ID": "3b31a060",
        "Entities": "Q19020:Academy Awards,Q41163:Al Pacino,1:None",
        "Mintaka Answer": "1993",
        "Sparklis label based": "[Al Pacino] is the <winner> with the lowest-to-highest <point in time> of [Academy Award for Best Actor] and give me the year of the <point in time>",
        "Sparklis ID based": "<Q41163> is the <P1346> with the lowest-to-highest <P585> of <Q103916> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[Academy Award For Best Actor] p:<winner> [ ps:<winner> wd:[Al Pacino] ; n1:<point in time> ?P585_5 ] . BIND (year(?P585_5) AS ?expr_90) } ORDER BY ASC(?P585_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q103916 p:P1346 [ ps:P1346 wd:Q41163 ; n1:P585 ?P585_5 ] . BIND (year(?P585_5) AS ?expr_90) } ORDER BY ASC(?P585_5) LIMIT 1",
        "Squall label based": "what is the year of the lowest thing at which <point in time> [Academy Award For Best Actor] has <winner> [Al Pacino]?",
        "Squall ID based": "what is the year of the lowest thing at which <P585> <Q103916> has <P1346> <Q41163>?"
    },
    {
        "Question": "When was the Maya civilization founded?",
        "ID": "7ff7c4c6",
        "Entities": "Q935522:Maya",
        "Mintaka Answer": "2600 BC",
        "Sparklis label based": "[Maya civilization] has an <inception> and give me the year of the <inception>",
        "Sparklis ID based": "<Q28567> has an <P571> and give me the year of the <P571>",
        "Sparql label based": "SELECT DISTINCT ?expr_92 WHERE { wd:[Maya Civilization] p:<inception> [ ps:<inception> ?P571_7 ] . BIND (year(?P571_7) AS ?expr_92) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_92 WHERE { wd:Q28567 p:P571 [ ps:P571 ?P571_7 ] . BIND (year(?P571_7) AS ?expr_92) }",
        "Squall label based": "what is the year of a <inception> of [Maya Civilization]?",
        "Squall ID based": "what is the year of a <P571> of <Q28567>?"
    },
    {
        "Question": "How many children did Oedipus have with Jacosta?",
        "ID": "644abf9c",
        "Entities": "Q131445:Jocasta, Q130890:Oedipus",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Oedipus] has a <child> with <mother> [Jocasta] and give me the number of <child>",
        "Sparklis ID based": "<Q130890> has a <P40> with <P25> <Q131445> and give me the number of <P40>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P40_8) AS ?number_of_46) WHERE { wd:[Oedipus] p:<child> [ ps:<child> ?P40_8 ; n2:<mother> wd:[Jocasta] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P40_8) AS ?number_of_46) WHERE { wd:Q130890 p:P40 [ ps:P40 ?P40_8 ; n2:P25 wd:Q131445 ] . }",
        "Squall label based": "how many thing is a <child> at <mother> [Jocasta] of [Oedipus]?",
        "Squall ID based": "how many thing is a <P40> at <P25> <Q131445> of <Q130890>?"
    },
    {
        "Question": "At what age did Nero the Roman emperor pass away?",
        "ID": "c7b5fa6a",
        "Entities": "Q1413:Nero",
        "Mintaka Answer": "68",
        "Sparklis label based": "[Nero] has a <date of death> and give me the year of the <date of death>",
        "Sparklis ID based": "<Q1413> has a <P570> and give me the year of the <P570>",
        "Sparql label based": "SELECT DISTINCT ?expr_94 WHERE { wd:[Nero] p:<date of death> [ ps:<date of death> ?P570_8 ] . BIND (year(?P570_8) AS ?expr_94) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_94 WHERE { wd:Q1413 p:P570 [ ps:P570 ?P570_8 ] . BIND (year(?P570_8) AS ?expr_94) }",
        "Squall label based": "what is the year of a <date of death> of [Nero]?",
        "Squall ID based": "what is the year of a <P570> of <Q1413>?"
    },
    {
        "Question": "Which movie was directed by Taylor Hackford and starred Damian Chapa?",
        "ID": "483c2228",
        "Entities": "Q927017:Damian Chapa,Q545573:Taylor Hackford",
        "Mintaka Answer": "Q282199:Blood In Blood Out",
        "Sparklis label based": "give me every [film] that has as a <director> [Taylor Hackford] and that has as a <cast member> [Damian Chapa]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q545573> and that has as a <P161> <Q927017>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Taylor Hackford] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Damian Chapa] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q545573 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q927017 ] . }",
        "Squall label based": "which [Film] has <director> [Taylor Hackford] and has <cast member> [Damian Chapa]?",
        "Squall ID based": "which <Q11424> has <P57> <Q545573> and has <P161> <Q927017>?"
    },
    {
        "Question": "When was Pac-Man first released?",
        "ID": "4a129de0",
        "Entities": "Q173626:Pac-Man",
        "Mintaka Answer": "Q25589881:electric",
        "Sparklis label based": "[Pac-Man 2] has a <publication date>",
        "Sparklis ID based": "<Q173626> has a <P577>",
        "Sparql label based": "select distinct ?p577_8 where { wd:[Pac-man 2] p:<publication date> [ ps:<publication date> ?p577_8 ] . }",
        "Sparql ID based": "select distinct ?p577_8 where { wd:Q173626 p:P577 [ ps:P577 ?p577_8 ] . }",
        "Squall label based": "what is a <publication date> of [Pac-man 2]?",
        "Squall ID based": "what is a <P577> of <Q173626>?"
    },
    {
        "Question": "What is the deepest canyon in Europe?",
        "ID": "f2314125",
        "Entities": "Q46:Europe",
        "Mintaka Answer": "Q2574575:Tara River Canyon",
        "Sparklis label based": "give me every [canyon] that has the highest-to-lowest <vertical depth> and that has a <country> that has as a <continent> [Europe]",
        "Sparklis ID based": "give me every <Q150784> that has the highest-to-lowest <P4511> and that has a <P17> that has as a <P30> <Q46>",
        "Sparql label based": "SELECT DISTINCT ?Q150784_94 WHERE { ?Q150784_94 wdt:<instance of> wd:[Canyon] . ?Q150784_94 p:<vertical depth> [ ps:<vertical depth> ?P4511_203 ] . ?Q150784_94 p:<country> [ ps:<country> ?P17_239 ] . ?P17_239 p:<continent> [ ps:<continent> wd:[Europe] ] . } ORDER BY DESC(?P4511_203) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q150784_94 WHERE { ?Q150784_94 wdt:P31 wd:Q150784 . ?Q150784_94 p:P4511 [ ps:P4511 ?P4511_203 ] . ?Q150784_94 p:P17 [ ps:P17 ?P17_239 ] . ?P17_239 p:P30 [ ps:P30 wd:Q46 ] . } ORDER BY DESC(?P4511_203) LIMIT 1",
        "Squall label based": "which [Canyon] has the highest <vertical depth> and has a <country> that has <continent> [Europe]?",
        "Squall ID based": "which <Q150784> has the highest <P4511> and has a <P17> that has <P30> <Q46>?"
    },
    {
        "Question": "What is the highest-grossing movie of all time in America?",
        "ID": "be293282",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has the highest-to-lowest <box office> with <valid in place> [United States of America]",
        "Sparklis ID based": "give me every <Q11424> that has the highest-to-lowest <P2142> with <P3005> <Q30>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<box office> [ ps:<box office> ?P2142_353 ; n1:<valid in place> wd:[United States Of America] ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P2142 [ ps:P2142 ?P2142_353 ; n1:P3005 wd:Q30 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Squall label based": "which [Film] has <box office> at <valid in place> [United States Of America] the highest thing?",
        "Squall ID based": "which <Q11424> has <P2142> at <P3005> <Q30> the highest thing?"
    },
    {
        "Question": "What was the fourth Twilight movie chronologically?",
        "ID": "bc601b46",
        "Entities": "Q160071:Twilight,4:None",
        "Mintaka Answer": "Q60506:The Twilight Saga: Breaking Dawn \u2013 Part 1",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 4 [The Twilight Saga]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 4 <Q652599>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P1545_6 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> ?P1545_6 ; ps:<part of the series> wd:[The Twilight Saga] ] . } ORDER BY ASC(xsd:integer(?P1545_6)) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P1545_6 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 ?P1545_6 ; ps:P179 wd:Q652599 ] . } ORDER BY ASC(xsd:integer(?P1545_6)) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> at a <series ordinal> whose xsd:integer is the lowest thing [The Twilight Saga]?",
        "Squall ID based": "which <Q11424> has <P179> at a <P1545> whose xsd:integer is the lowest thing <Q652599>?"
    },
    {
        "Question": "How many books are in the Harry Potter franchise?",
        "ID": "1ef72367",
        "Entities": "Q8337:Harry Potter,Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone,Q47209:Harry Potter and the Chamber of Secrets,Q47598:Harry Potter and the Prisoner of Azkaban,Q46751:Harry Potter and the Goblet of Fire,Q80817:Harry Potter and the Order of the Phoenix,Q46887:Harry Potter and the Half-Blood Prince,Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "[Harry Potter 2] <has part(s)> a [literary work] and give me the number of part(s)",
        "Sparklis ID based": "<Q8337> <P527> a <Q7725634> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { ?P527_8 wdt:<instance of> wd:[Literary Work] . wd:[Harry Potter 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { ?P527_8 wdt:P31 wd:Q7725634 . wd:Q8337 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "which [Literary Work] is a <has part(s)> of [Harry Potter 2]?",
        "Squall ID based": "which <Q7725634> is a <P527> of <Q8337>?"
    },
    {
        "Question": "Which book in the Discworld series was released in 2015?",
        "ID": "6b21ef2c",
        "Entities": "Q3257270:Discworld",
        "Mintaka Answer": "Q19897982:The Shepherd's Crown",
        "Sparklis label based": "[Discworld] <has part(s)> that has a <publication date> and where the year of the <publication date> = 2015",
        "Sparklis ID based": "<Q253295> <P527> that has a <P577> and where the year of the <P577> = 2015",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:<part of the series> [ ps:<part of the series> wd:[Discworld Books] ] . ?thing_8 p:<publication date> [ ps:<publication date> \"2015-08-27T00:00:00Z\" ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:P179 [ ps:P179 wd:Q3257270 ] . ?thing_8 p:P577 [ ps:P577 \"2015-08-27T00:00:00Z\" ] . } LIMIT 1",
        "Squall label based": "what has <part of the series> [Discworld Books] and has <publication date> \"2015-08-27T00:00:00Z\"?",
        "Squall ID based": "what has <P179> <Q3257270> and has <P577> \"2015-08-27T00:00:00Z\"?"
    },
    {
        "Question": "When did the second book, The Sea of Monsters, from the Percy Jackson series come out?",
        "ID": "1b1ea00c",
        "Entities": "Q3899725:Percy Jackson, Q901384:The Sea of Monsters",
        "Mintaka Answer": "1 April",
        "Sparklis label based": "[The Sea of Monsters] has as a <characters> [Percy Jackson] and has a <publication date>",
        "Sparklis ID based": "<Q901384> has as a <P674> <Q3899725> and has a <P577>",
        "Sparql label based": "SELECT DISTINCT ?P577_8 WHERE {wd:[The Sea Of Monsters] p:<publication date> [ ps:<publication date> ?P577_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P577_8 WHERE {wd:Q901384 p:P577 [ ps:P577 ?P577_8 ] . }",
        "Squall label based": "what is a <publication date> of [The Sea Of Monsters]?",
        "Squall ID based": "what is a <P577> of <Q901384>?"
    },
    {
        "Question": "What governors of Texas have not been Republican?",
        "ID": "79579241",
        "Entities": "Q1439:Texas, Q29468:Republican Party",
        "Mintaka Answer": "Q237918:Ann Richards",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Texas] and that not has as a <member of political party> [Republican Party]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q5589725> and that not has as a <P102> <Q29468>",
        "Sparql label based": "SELECT DISTINCT ?Q5_94 WHERE { ?Q5_94 wdt:<instance of> wd:[Human] . ?Q5_94 p:<position held> [ ps:<position held> wd:[Governor Of Texas] ] . FILTER ( NOT EXISTS { ?Q5_94 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_94 WHERE { ?Q5_94 wdt:P31 wd:Q5 . ?Q5_94 p:P39 [ ps:P39 wd:Q5589725 ] . FILTER ( NOT EXISTS { ?Q5_94 p:P102 [ ps:P102 wd:Q29468 ] . } ) }",
        "Squall label based": "which [Human] has <position held> [Governor Of Texas] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> <Q5589725> and has not <P102> <Q29468>?"
    },
    {
        "Question": "Which team plays in Miami that used to have Paul Warfield?",
        "ID": "1bc769eb",
        "Entities": "Q8652:Miami, Q275129:Paul Warfield",
        "Mintaka Answer": "Q223243:Miami Dolphins",
        "Sparklis label based": "give me every [American football team] that has as a <headquarters location> [Miami_2] and that is the <member of sports team> of [Paul Warfield]",
        "Sparklis ID based": "give me every <Q17156793> that has as a <P159> <Q8652> and that is the <P54> of <Q275129>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:<instance of> wd:[American Football Team] . ?Q17156793_8 p:<headquarters location> [ ps:<headquarters location> wd:[Miami 2] ] . wd:[Paul Warfield] p:<member of sports team> [ ps:<member of sports team> ?Q17156793_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:P31 wd:Q17156793 . ?Q17156793_8 p:P159 [ ps:P159 wd:Q8652 ] . wd:Q275129 p:P54 [ ps:P54 ?Q17156793_8 ] . }",
        "Squall label based": "which [American Football Team] has <headquarters location> [Miami 2] and is a <member of sports team> of [Paul Warfield]?",
        "Squall ID based": "which <Q17156793> has <P159> <Q8652> and is a <P54> of <Q275129>?"
    },
    {
        "Question": "What James Bond movie was released in 1997?",
        "ID": "0c04aae5",
        "Entities": "Q844:James Bond,1997:None",
        "Mintaka Answer": "Q207916:Tomorrow Never Dies",
        "Sparklis label based": "give me every [film] that has a <publication date> and that is <based on> [James Bond] and where the year of the <publication date> = 1997",
        "Sparklis ID based": "give me every <Q11424> that has a <P577> and that is <P144> <Q2484680> and where the year of the <P577> = 1997",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] .?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_45 ] .?Q11424_8 p:<based on> [ ps:<based on> wd:[James Bond 3] ] .FILTER ( (year(?P577_45) = \"1997\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 .?Q11424_8 p:P577 [ ps:P577 ?P577_45 ] .?Q11424_8 p:P144 [ ps:P144 wd:Q844 ] .FILTER ( (year(?P577_45) = \"1997\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <based on> [James Bond 3] and has a <publication date> whose year is 1997?",
        "Squall ID based": "which <Q11424> has <P144> <Q844> and has a <P577> whose year is 1997?"
    },
    {
        "Question": "Did Pulp Fiction come out before 1992?",
        "ID": "fef562a9",
        "Entities": "Q104123:Pulp Fiction,1992:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Pulp Fiction] has a <publication date> and where the year of the <publication date> < 1992",
        "Sparklis ID based": "<Q104123> has a <P577> and where the year of the <P577> < 1992",
        "Sparql label based": "ASK { wd:[Pulp Fiction] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) < \"1992\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q104123 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) < \"1992\"^^xsd:integer) ) }",
        "Squall label based": "whether [Pulp Fiction] has a <publication date> whose year is lesser than 1992?",
        "Squall ID based": "whether <Q104123> has a <P577> whose year is lesser than 1992?"
    },
    {
        "Question": "Which Spider-Man movie had the smallest budget?",
        "ID": "e63bc905",
        "Entities": "Q484442:Spider-Man",
        "Mintaka Answer": "Q29588607:Spider-Man: Into the Spider-Verse",
        "Sparklis label based": "[Spider-Verse] is the <part of the series> of something that has the lowest-to-highest <cost>",
        "Sparklis ID based": "<Q99601314> is the <P179> of something that has the lowest-to-highest <P2130>",
        "Sparql label based": "SELECT DISTINCT ?thing_8 ?P2130_83 WHERE { ?thing_8 p:<part of the series> [ ps:<part of the series> wd:[Spider-verse] ] . ?thing_8 p:<cost> [ ps:<cost> ?P2130_83 ] . } ORDER BY ASC(?P2130_83) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 ?P2130_83 WHERE { ?thing_8 p:P179 [ ps:P179 wd:Q99601314 ] . ?thing_8 p:P2130 [ ps:P2130 ?P2130_83 ] . } ORDER BY ASC(?P2130_83) LIMIT 1",
        "Squall label based": "what has <part of the series> [Spider-verse] and has the lowest <cost>?",
        "Squall ID based": "what has <P179> <Q99601314> and has the lowest <P2130>?"
    },
    {
        "Question": "Which Chronicles of Narnia book was the longest?",
        "ID": "7caae763",
        "Entities": "Q483412:The Chronicles of Narnia",
        "Mintaka Answer": "Q331656:The Voyage of the Dawn Treader",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Chronicles of Narnia] and that has the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q483412> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Chronicles Of Narnia] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q483412 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Chronicles Of Narnia] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q483412> and has the highest <P1104>?"
    },
    {
        "Question": "Which Metal Gear Solid game was Hideo Kojima not involved in?",
        "ID": "a557a46b",
        "Entities": "Q315577:Hideo Kojima, Q6582527:Metal Gear Solid",
        "Mintaka Answer": "Q27534668:Metal Gear Survive",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Metal Gear] and that not has as a <developer> [Kojima Productions]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q6552947> and that not has as a <P178> <Q2531521>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_179 WHERE { ?Q7889_179 wdt:<instance of> wd:[Video Game] . ?Q7889_179 p:<part of the series> [ ps:<part of the series> wd:[Metal Gear 2] ] . FILTER ( NOT EXISTS { ?Q7889_179 p:<developer> [ ps:<developer> wd:[Kojima Productions] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_179 WHERE { ?Q7889_179 wdt:P31 wd:Q7889 . ?Q7889_179 p:P179 [ ps:P179 wd:Q216655 ] . FILTER ( NOT EXISTS { ?Q7889_179 p:P178 [ ps:P178 wd:Q2531521 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Metal Gear 2] and has not <developer> [Kojima Productions]?",
        "Squall ID based": "which <Q7889> has <P179> <Q216655> and has not <P178> <Q2531521>?"
    },
    {
        "Question": "Who won Super Bowl 15?",
        "ID": "248a280d",
        "Entities": "Q766921:Super Bowl XV",
        "Mintaka Answer": "Q324523:Las Vegas Raiders",
        "Sparklis label based": "give me every [American football team] that is the <winner> of somethingthat is the <instance of> [Super Bowl] and that is [Super Bowl XV]",
        "Sparklis ID based": "give me every <Q17156793> that is the <P1346> of somethingthat is the <P31> <Q32096> and that is <Q766921>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:<instance of> wd:[American Football Team] .?P31_45 p:<winner> [ ps:<winner> ?Q17156793_8 ] .?P31_45 p:<instance of> [ ps:<instance of> wd:[Super Bowl] ] .FILTER ( ?P31_45 = wd:[Super Bowl Xv] ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:P31 wd:Q17156793 .?P31_45 p:P1346 [ ps:P1346 ?Q17156793_8 ] .?P31_45 p:P31 [ ps:P31 wd:Q32096 ] .FILTER ( ?P31_45 = wd:Q766921 ) }",
        "Squall label based": "which [American Football Team] is a <winner> of a thing that has <instance of> [Super Bowl] and is [Super Bowl Xv]?",
        "Squall ID based": "which <Q17156793> is a <P1346> of a thing that has <P31> <Q32096> and is <Q766921>?"
    },
    {
        "Question": "What is the tallest mountain in Europe?",
        "ID": "07f77d0b",
        "Entities": "Q46:Europe",
        "Mintaka Answer": "Q43105:Mount Elbrus",
        "Sparklis label based": "give me every [mountain] that has as a <continent> [Europe] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has as a <P30> <Q46> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 ?P2044_38 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<continent> [ ps:<continent> wd:[Europe] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_38 ] . } ORDER BY DESC(?P2044_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 ?P2044_38 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P30 [ ps:P30 wd:Q46 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_38 ] . } ORDER BY DESC(?P2044_38) LIMIT 1",
        "Squall label based": "which [Mountain] has <continent> [Europe] and has the highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has <P30> <Q46> and has the highest <P2044>?"
    },
    {
        "Question": "Which movie was directed by the Coen brothers and starred Javier Bardem?",
        "ID": "d51b7dab",
        "Entities": "Q134895:Javier Bardem,Q56095:Coen brothers",
        "Mintaka Answer": "Q183081:No Country for Old Men",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Javier Bardem] and that has as a <director> [Ethan Coen] and [Joel Coen]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q134895> and that has as a <P57> <Q13595531> and <Q13595311>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Javier Bardem] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Ethan Coen] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Joel Coen] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q134895 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q13595531 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q13595311 ] . }",
        "Squall label based": "which [Film] has <cast member> [Javier Bardem] and has <director> [Ethan Coen] and [Joel Coen]?",
        "Squall ID based": "which <Q11424> has <P161> <Q134895> and has <P57> <Q13595531> and <Q13595311>?"
    },
    {
        "Question": "Which Harry Potter movie made the most money worldwide?",
        "ID": "28ed61fb",
        "Entities": "Q216930:Harry Potter film series",
        "Mintaka Answer": "Q232009:Harry Potter and the Deathly Hallows \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P2142_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_1 p:<box office> [ ps:<box office> ?P2142_5 ] . } ORDER BY DESC(?P2142_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P2142_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_1 p:P2142 [ ps:P2142 ?P2142_5 ] . } ORDER BY DESC(?P2142_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2142>?"
    },
    {
        "Question": "What is the second NHL team that Wayne Gretzky played for?",
        "ID": "078e8c7e",
        "Entities": "Q209518:Wayne Gretzky, Q1215892:National Hockey League",
        "Mintaka Answer": "Q203008:Los Angeles Kings",
        "Sparklis label based": "[Wayne Gretzky] has as a <league> [National Hockey League] and has a <member of sports team> with the lowest-to-highest <start time>",
        "Sparklis ID based": "<Q209518> has as a <P118> <Q1215892> and has a <P54> with the lowest-to-highest <P580>",
        "Sparql label based": "SELECT DISTINCT ?P54_4 WHERE {wd:[Wayne Gretzky] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ; n1:<start time> ?P580_42 ] . } ORDER BY ASC(?P580_42) offset 1 LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_4 WHERE {wd:Q209518 p:P54 [ ps:P54 ?P54_4 ; n1:P580 ?P580_42 ] . } ORDER BY ASC(?P580_42) offset 1 LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the 2nd lowest <start time> of [Wayne Gretzky]?",
        "Squall ID based": "what is a <P54> at the 2nd lowest <P580> of <Q209518>?"
    },
    {
        "Question": "How many Republican governors has Michigan had since 2003?",
        "ID": "e4f117cb",
        "Entities": "Q1166:Michigan, Q29468:Republican Party",
        "Mintaka Answer": "1",
        "Sparklis label based": "give me every [human] that has as a <position held> with a <start time> [Governor of Michigan] and that has as a <member of political party> [Republican Party] and where the year of the <start time> > 2003 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with a <P580> <Q5589680> and that has as a <P102> <Q29468> and where the year of the <P580> > 2003 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_8) AS ?number_of_174) WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ n1:<start time> ?P580_12 ; ps:<position held> wd:[Governor Of Michigan] ] . ?Q5_8 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . FILTER ( (year(?P580_12) > \"2003\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_8) AS ?number_of_174) WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ n1:P580 ?P580_12 ; ps:P39 wd:Q5589680 ] . ?Q5_8 p:P102 [ ps:P102 wd:Q29468 ] . FILTER ( (year(?P580_12) > \"2003\"^^xsd:integer) ) }",
        "Squall label based": "how many [Human] has <position held> at a <start time> whose year is greater than 2003 [Governor Of Michigan] and has <member of political party> [Republican Party]?",
        "Squall ID based": "how many <Q5> has <P39> at a <P580> whose year is greater than 2003 <Q5589680> and has <P102> <Q29468>?"
    },
    {
        "Question": "Who was Bradley Cooper married to?",
        "ID": "70e83c29",
        "Entities": "Q205707:Bradley Cooper",
        "Mintaka Answer": "Q233922:Jennifer Esposito",
        "Sparklis label based": "give me every [human] that is the <spouse> of [Bradley Cooper]",
        "Sparklis ID based": "give me every <Q5> that is the <P26> of <Q205707>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . wd:[Bradley Cooper] p:<spouse> [ ps:<spouse> ?Q5_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . wd:Q205707 p:P26 [ ps:P26 ?Q5_8 ] . }",
        "Squall label based": "which [Human] is a <spouse> of [Bradley Cooper]?",
        "Squall ID based": "which <Q5> is a <P26> of <Q205707>?"
    },
    {
        "Question": "How many Marvel movies can Thanos be seen in?",
        "ID": "5f386a18",
        "Entities": "Q642878:Marvel Cinematic Universe,Q2276627:Thanos",
        "Mintaka Answer": "Q5887360:Guardians of the Galaxy,Q14171368:Avengers: Age of Ultron,Q23780914:Avengers: Infinity War,Q23781155:Avengers: Endgame",
        "Sparklis label based": "give me every [film] that has as a <characters> [Thanos]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P674> <Q64825451>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_117 WHERE { ?Q11424_117 wdt:<instance of> wd:[Film] . ?Q11424_117 p:<characters> [ ps:<characters> wd:[Thanos] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_117 WHERE { ?Q11424_117 wdt:P31 wd:Q11424 . ?Q11424_117 p:P674 [ ps:P674 wd:Q64825451 ] . }",
        "Squall label based": "which [Film] has <characters> [Thanos]?",
        "Squall ID based": "which <Q11424> has <P674> <Q64825451>?"
    },
    {
        "Question": "What is the largest city in New York by population?",
        "ID": "0a25329f",
        "Entities": "Q1384:New York",
        "Mintaka Answer": "Q60:New York City",
        "Sparklis label based": "give me every [city in the state of New York] that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q15063611> that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q15063611_117 ?P1082_154 WHERE { ?Q15063611_117 wdt:<instance of> wd:[City In The State Of New York] . ?Q15063611_117 p:<population> [ ps:<population> ?P1082_154 ] . } ORDER BY DESC(?P1082_154) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q15063611_117 ?P1082_154 WHERE { ?Q15063611_117 wdt:P31 wd:Q15063611 . ?Q15063611_117 p:P1082 [ ps:P1082 ?P1082_154 ] . } ORDER BY DESC(?P1082_154) LIMIT 1",
        "Squall label based": "which [City In The State Of New York] has the highest <population>?",
        "Squall ID based": "which <Q15063611> has the highest <P1082>?"
    },
    {
        "Question": "What is the largest forest in the world?",
        "ID": "0fe0a8d5",
        "Entities": "Q4421:forest",
        "Mintaka Answer": "Q177567:Amazon rainforest",
        "Sparklis label based": "give me every [tropical forest] that has the highest-to-lowest <area>",
        "Sparklis ID based": "give me every <Q199403> that has the highest-to-lowest <P2046>",
        "Sparql label based": "SELECT DISTINCT ?Q199403_1 ?P2046_38 WHERE { ?Q199403_1 wdt:<instance of> wd:[Tropical Forest] . ?Q199403_1 p:<area> [ ps:<area> ?P2046_38 ] . } ORDER BY DESC(?P2046_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q199403_1 ?P2046_38 WHERE { ?Q199403_1 wdt:P31 wd:Q199403 . ?Q199403_1 p:P2046 [ ps:P2046 ?P2046_38 ] . } ORDER BY DESC(?P2046_38) LIMIT 1",
        "Squall label based": "which [Tropical Forest] has the highest <area>?",
        "Squall ID based": "which <Q199403> has the highest <P2046>?"
    },
    {
        "Question": "How many Die Hard movies are there?",
        "ID": "733e2870",
        "Entities": "Q2716420:Die Hard",
        "Mintaka Answer": "Q105598:Die Hard,Q105993:Die Hard 2,Q106871:Die Hard with a Vengeance,Q50861:Live Free or Die Hard,Q72276:A Good Day to Die Hard",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Die Hard] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2716420> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_197 WHERE { ?Q11424_197 wdt:<instance of> wd:[Film] . ?Q11424_197 p:<part of the series> [ ps:<part of the series> wd:[Die Hard] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_197 WHERE { ?Q11424_197 wdt:P31 wd:Q11424 . ?Q11424_197 p:P179 [ ps:P179 wd:Q2716420 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Die Hard]?",
        "Squall ID based": "which <Q11424> has <P179> <Q2716420>?"
    },
    {
        "Question": "How many Academy Awards has Clint Eastwood won for directing?",
        "ID": "5d4ef6d0",
        "Entities": "Q19020:Academy Awards,Q43203:Clint Eastwood",
        "Mintaka Answer": "Q104137:Unforgiven,Q221586:Mystic River,Q184255:Million Dollar Baby,Q275187:Letters from Iwo Jima",
        "Sparklis label based": "[Clint Eastwood] <award received> with a <for work> [Academy Award for Best Director]",
        "Sparklis ID based": "<Q43203> <P166> with a <P1686> <Q103360>",
        "Sparql label based": "SELECT DISTINCT ?P1686_6 WHERE { wd:[Clint Eastwood] p:<award received> [ n2:<for work> ?P1686_6 ; ps:<award received> wd:[Academy Award For Best Director] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_6 WHERE { wd:Q43203 p:P166 [ n2:P1686 ?P1686_6 ; ps:P166 wd:Q103360 ] . }",
        "Squall label based": "what is a <for work> of a thing that is a <award received> of [Clint Eastwood] and has <award received> [Academy Award For Best Director]?",
        "Squall ID based": "what is a <P1686> of a thing that is a <P166> of <Q43203> and has <P166> <Q103360>?"
    },
    {
        "Question": "Which Iron Man movie is Don Cheadle not in?",
        "ID": "44bbf7b3",
        "Entities": "Q16642701:Iron Man, Q272019:Don Cheadle",
        "Mintaka Answer": "Q192724:Iron Man",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Don Cheadle] and that has as a <part of the series> [Iron Man 2 2]",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q272019> and that has as a <P179> <Q16642701>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Iron Man 2 2] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Don Cheadle] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q16642701 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q272019 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Iron Man 2 2] and has not <cast member> [Don Cheadle]?",
        "Squall ID based": "which <Q11424> has <P179> <Q16642701> and has not <P161> <Q272019>?"
    },
    {
        "Question": "Which Chronicles of Narnia book does not have Susan Pevensie in it?",
        "ID": "da4b8a08",
        "Entities": "Q483412:The Chronicles of Narnia, Q1639626:Susan Pevensie",
        "Mintaka Answer": "Q331669:The Silver Chair, Q477831:The Magician's Nephew, Q289130:The Last Battle, Q331656:The Voyage of the Dawn Treader",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [The Chronicles of Narnia] and that not has as a <characters> [Susan Pevensie]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q483412> and that not has as a <P674> <Q1639626>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[The Chronicles Of Narnia] ] . FILTER ( NOT EXISTS { ?Q7725634_8 p:<characters> [ ps:<characters> wd:[Susan Pevensie] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q483412 ] . FILTER ( NOT EXISTS { ?Q7725634_8 p:P674 [ ps:P674 wd:Q1639626 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [The Chronicles Of Narnia] and has not <characters> [Susan Pevensie]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q483412> and has not <P674> <Q1639626>?"
    },
    {
        "Question": "Which Assassin's Creed games do not appear on Xbox devices?",
        "ID": "6ac6441f",
        "Entities": "Q420292:Assassin's Creed, Q132020:Xbox",
        "Mintaka Answer": "Q1992159:Assassin's Creed: Alta\u00efr's Chronicles, Q739580:Assassin's Creed: Bloodlines, Q2075360:Assassin's Creed II: Discovery, Q16382628:Assassin's Creed: Pirates, Q18711530:Assassin's Creed Identity, Q61098860:Assassin's Creed: Rebellion",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Assassin's Creed 2] and that not has as a <platform> [Xbox]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q420292> and that not has as a <P400> <Q132020>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Assassin's Creed 2] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<platform> [ ps:<platform> wd:[Xbox] ] . } ) } LIMIT 28",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q420292 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P400 [ ps:P400 wd:Q132020 ] . } ) } LIMIT 28",
        "Squall label based": "which [Video Game] has <part of the series> [Assassin's Creed 2] and has not <platform> [Xbox]?",
        "Squall ID based": "which <Q7889> has <P179> <Q420292> and has not <P400> <Q132020>?"
    },
    {
        "Question": "Which American president never lived in the White House?",
        "ID": "1155ccae",
        "Entities": "Q30:United States of America, Q35525:White House",
        "Mintaka Answer": "Q23:George Washington",
        "Sparklis label based": "give me every [human] that has as a <position held> [President-elect of the United States] and that not has as a <residence> [White House]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q1467287> and that not has as a <P551> <Q35525>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ ps:<position held> wd:[President-elect Of The United States] ] . FILTER ( NOT EXISTS { ?Q5_8 p:<residence> [ ps:<residence> wd:[White House] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ ps:P39 wd:Q1467287 ] . FILTER ( NOT EXISTS { ?Q5_8 p:P551 [ ps:P551 wd:Q35525 ] . } ) }",
        "Squall label based": "which [Human] has <position held> [President-elect Of The United States] and has not <residence> [White House]?",
        "Squall ID based": "which <Q5> has <P39> <Q1467287> and has not <P551> <Q35525>?"
    },
    {
        "Question": "How many NFL teams did Terry Bradshaw play for?",
        "ID": "e5a3dfc9",
        "Entities": "Q633263:Terry Bradshaw, Q1215884:National Football League",
        "Mintaka Answer": "1",
        "Sparklis label based": "[Terry Bradshaw] has a <member of sports team> that has as a <league> [National Football League] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q633263> has a <P54> that has as a <P118> <Q1215884> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Terry Bradshaw] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<league> [ ps:<league> wd:[National Football League] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q633263 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P118 [ ps:P118 wd:Q1215884 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Terry Bradshaw] and has <league> [National Football League]?",
        "Squall ID based": "how many thing is a <P54> of <Q633263> and has <P118> <Q1215884>?"
    },
    {
        "Question": "What American political building was build in 1792 and was rebuild in 1814 because of a fire?",
        "ID": "aa5dab25",
        "Entities": "Q30:United States of America,1792:None,1814:None",
        "Mintaka Answer": "Q35525:White House",
        "Sparklis label based": "give me every [civic building] that has as a <country> [United States of America] and that has an <inception> and give me the string of the <inception> that matches 1792",
        "Sparklis ID based": "give me every <Q52177058> that has as a <P17> <Q30> and that has an <P571> and give me the string of the <P571> that matches 1792",
        "Sparql label based": "select distinct ?q52177058_12 ?p571_4 ?expr_139 where { ?q52177058_12 wdt:<instance of> wd:[Civic Building] . ?q52177058_12 p:<country> [ ps:<country> wd:[United States Of America] ] . ?q52177058_12 p:<inception> [ ps:<inception> ?p571_4 ] . bind (str(?p571_4) as ?expr_139) filter ( regex(str(?expr_139), \"1792\", 'i') ) }",
        "Sparql ID based": "select distinct ?q52177058_12 ?p571_4 ?expr_139 where { ?q52177058_12 wdt:P31 wd:Q52177058 . ?q52177058_12 p:P17 [ ps:P17 wd:Q30 ] . ?q52177058_12 p:P571 [ ps:P571 ?p571_4 ] . bind (str(?p571_4) as ?expr_139) filter ( regex(str(?expr_139), \"1792\", 'i') ) }",
        "Squall label based": "which [Civic Building] has <country> [United States Of America] and has a <inception> whose string has the string that matches \"1792\"?",
        "Squall ID based": "which <Q52177058> has <P17> <Q30> and has a <P571> whose string has the string that matches \"1792\"?"
    },
    {
        "Question": "How many countries span the Sahara desert?",
        "ID": "5ecba195",
        "Entities": "Q6583:Sahara",
        "Mintaka Answer": "11",
        "Sparklis label based": "[Sahara] has a <country> and give me the number of <country>",
        "Sparklis ID based": "<Q6583> has a <P17> and give me the number of <P17>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:[Sahara] p:<country> [ ps:<country> ?P17_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P17_8) AS ?number_of_47) WHERE { wd:Q6583 p:P17 [ ps:P17 ?P17_8 ] . }",
        "Squall label based": "how many thing is a <country> of [Sahara]?",
        "Squall ID based": "how many thing is a <P17> of <Q6583>?"
    },
    {
        "Question": "Who was the 25th president of the United States?",
        "ID": "ca356cf8",
        "Entities": "Q30:United States of America,25:None",
        "Mintaka Answer": "Q35041:William McKinley",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 25 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 25 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"25\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"25\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"25\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"25\" <Q11696>?"
    },
    {
        "Question": "Which country has a smaller population, France or Germany?",
        "ID": "4cee6a0d",
        "Entities": "Q183:Germany, Q142:France",
        "Mintaka Answer": "Q183:Germany",
        "Sparklis label based": "Germany has a <population> with <point in time> 2017-01-01T00:00:00Z and [France] has a <population> with <point in time> 2017-01-01T00:00:00Z",
        "Sparklis ID based": "Germany has a <P1082> with <P585> 2017-01-01T00:00:00Z and <Q142> has a <P1082> with <P585> 2017-01-01T00:00:00Z",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[France] wd:[Germany] } ?x p:<population> [ ps:<population> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q142 wd:Q183 } ?x p:P1082 [ ps:P1082 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [France] or [Germany] and has the lowest <population>?",
        "Squall ID based": "what is <Q142> or <Q183> and has the lowest <P1082>?"
    },
    {
        "Question": "Which actor starred in Vanilla Sky and was married to Katie Holmes?",
        "ID": "88349c89",
        "Entities": "Q174346: Katie Holmes, Q110278: Vanilla Sky",
        "Mintaka Answer": "Q37079: Tom Cruise",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Vanilla Sky] and that is the <spouse> of [Katie Holmes]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q110278> and that is the <P26> of <Q174346>",
        "Sparql label based": "SELECT DISTINCT ?Q5_744 WHERE { ?Q5_744 wdt:<instance of> wd:[Human] . wd:[Vanilla Sky] p:<cast member> [ ps:<cast member> ?Q5_744 ] . wd:[Katie Holmes] p:<spouse> [ ps:<spouse> ?Q5_744 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_744 WHERE { ?Q5_744 wdt:P31 wd:Q5 . wd:Q110278 p:P161 [ ps:P161 ?Q5_744 ] . wd:Q174346 p:P26 [ ps:P26 ?Q5_744 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Vanilla Sky] and is a <spouse> of [Katie Holmes]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q110278> and is a <P26> of <Q174346>?"
    },
    {
        "Question": "Who is the singer of Easy On Me and was born in Tottenham, London?",
        "ID": "85c6e878",
        "Entities": "Q108805763:Easy on Me, Q503375:Tottenham",
        "Mintaka Answer": "Q23215:Adele",
        "Sparklis label based": "[Easy on Me] has a <performer> that has as a <place of birth> [Tottenham]",
        "Sparklis ID based": "<Q108805763> has a <P175> that has as a <P19> <Q503375>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[Easy On Me] p:<performer> [ ps:<performer> ?P175_8 ] . ?P175_8 p:<place of birth> [ ps:<place of birth> wd:[Tottenham] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q108805763 p:P175 [ ps:P175 ?P175_8 ] . ?P175_8 p:P19 [ ps:P19 wd:Q503375 ] . }",
        "Squall label based": "what is a <performer> of [Easy On Me] and has <place of birth> [Tottenham]?",
        "Squall ID based": "what is a <P175> of <Q108805763> and has <P19> <Q503375>?"
    },
    {
        "Question": "Did Angela Merkel become prime minister before 2000?",
        "ID": "868db7f9",
        "Entities": "Q567:Angela Merkel,2000:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Angela Merkel] has as a <position held> with a <start time> [Federal Chancellor of Germany] and where the year of the <start time> < 2000",
        "Sparklis ID based": "<Q567> has as a <P39> with a <P580> <Q4970706> and where the year of the <P580> < 2000",
        "Sparql label based": "ASK { wd:[Angela Merkel] p:<position held> [ n1:<start time> ?P580_4 ; ps:<position held> wd:[Federal Chancellor Of Germany] ] . FILTER ( (year(?P580_4) < \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q567 p:P39 [ n1:P580 ?P580_4 ; ps:P39 wd:Q4970706 ] . FILTER ( (year(?P580_4) < \"2000\"^^xsd:integer) ) }",
        "Squall label based": "whether [Angela Merkel] has <position held> at a <start time> whose year is lesser than 2000 [Federal Chancellor Of Germany]?",
        "Squall ID based": "whether <Q567> has <P39> at a <P580> whose year is lesser than 2000 <Q4970706>?"
    },
    {
        "Question": "How many continents of the world?",
        "ID": "a5ed52aa",
        "Entities": "Q5107:continent",
        "Mintaka Answer": "Q48:Asia,Q15:Africa,Q49:North America,Q18:South America,Q51:Antarctica,Q46:Europe,Q3960:Australia",
        "Sparklis label based": "give me every [continent] and give me the number of [continent]",
        "Sparklis ID based": "give me every <Q5107> and give me the number of <Q5107>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5107_10) AS ?number_of_46) WHERE { ?Q5107_10 wdt:<instance of> wd:[Continent] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5107_10) AS ?number_of_46) WHERE { ?Q5107_10 wdt:P31 wd:Q5107 . }",
        "Squall label based": "how many [Continent] is there?",
        "Squall ID based": "how many <Q5107> is there?"
    },
    {
        "Question": "Which city has the most songs written about it?",
        "ID": "e3648883",
        "Entities": "Q515:city,Q7366:song",
        "Mintaka Answer": "Q60:New York",
        "Sparklis label based": "give me every [song] that has as a <main subject> a [city] and for each <main subject> give me the highest-to-lowest number of [song]",
        "Sparklis ID based": "give me every <Q7366> that has as a <P921> a <Q515> and for each <P921> give me the highest-to-lowest number of <Q7366>",
        "Sparql label based": "select distinct ?p921_105 (count(distinct ?q7366_1) as ?number_of_142) where { ?q7366_1 wdt:<instance of> wd:[Song] . ?p921_105 wdt:<instance of> wd:[City] . ?q7366_1 p:<main subject> [ ps:<main subject> ?p921_105 ] . } group by ?p921_105 order by desc(?number_of_142) limit 1",
        "Sparql ID based": "select distinct ?p921_105 (count(distinct ?q7366_1) as ?number_of_142) where { ?q7366_1 wdt:P31 wd:Q7366 . ?p921_105 wdt:P31 wd:Q515 . ?q7366_1 p:P921 [ ps:P921 ?p921_105 ] . } group by ?p921_105 order by desc(?number_of_142) limit 1",
        "Squall label based": "which [City] is a <main subject> of the most [Song]?",
        "Squall ID based": "which <Q515> is a <P921> of the most <Q7366>?"
    },
    {
        "Question": "Did Avatar came out before 2010?",
        "ID": "dbb32565",
        "Entities": "Q24871:Avatar,2010:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Avatar] has a <publication date> and where the year of the <publication date> < 2010",
        "Sparklis ID based": "<Q24871> has a <P577> and where the year of the <P577> < 2010",
        "Sparql label based": "ASK { wd:[Avatar] p:<publication date> [ ps:<publication date> ?P577_8 ] . filter ((year(?P577_8) < \"2010\"^^xsd:integer)) }",
        "Sparql ID based": "ASK { wd:Q24871 p:P577 [ ps:P577 ?P577_8 ] . filter ((year(?P577_8) < \"2010\"^^xsd:integer)) }",
        "Squall label based": "whether [Avatar] has a <publication date> whose year is lesser than 2010?",
        "Squall ID based": "whether <Q24871> has a <P577> whose year is lesser than 2010?"
    },
    {
        "Question": "How many NBA teams did Kawhi Leonard play for?",
        "ID": "1245cbd8",
        "Entities": "Q155223:National Basketball Association, Q926248:Kawhi Leonard",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Kawhi Leonard] has a <member of sports team> that has as a <league> [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q926248> has a <P54> that has as a <P118> <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Kawhi Leonard] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q926248 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Kawhi Leonard] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q926248> and has <P118> <Q155223>?"
    },
    {
        "Question": "How many Grammys did Taylor Swift win in 2016?",
        "ID": "58d53668",
        "Entities": "Q41254:Grammy Award, Q26876:Taylor Swift",
        "Mintaka Answer": "2",
        "Sparklis label based": "Taylor Swift <award received> a [Grammy Awards] with point in time 2016-01-01T00:00:00Z and give me the number of [Grammy Awards]",
        "Sparklis ID based": "Taylor Swift <P166> a <Q41254> with point in time 2016-01-01T00:00:00Z and give me the number of <Q41254>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_47) WHERE { ?Q41254_8 wdt:<instance of> wd:[Grammy Awards] . wd:[Taylor Swift] p:<award received> [ ps:<award received> ?Q41254_8 ; n2:<point in time> \"2016-01-01T00:00:00Z\"^^xsd:dateTime ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_47) WHERE { ?Q41254_8 wdt:P31 wd:Q41254 . wd:Q26876 p:P166 [ ps:P166 ?Q41254_8 ; n2:P585 \"2016-01-01T00:00:00Z\"^^xsd:dateTime ] . }",
        "Squall label based": "how many [Grammy Awards] is a <award received> at <point in time> 2016-01-01T00:00:00Z of [Taylor Swift]?",
        "Squall ID based": "how many <Q41254> is a <P166> at <P585> 2016-01-01T00:00:00Z of <Q26876>?"
    },
    {
        "Question": "Who was the fourth emperor of Rome?",
        "ID": "0ab42878",
        "Entities": "Q220:Rome,4:None",
        "Mintaka Answer": "Q1411:Claudius",
        "Sparklis label based": "give me every [human] that has as a <position held> with the lowest-to-highest <start time> [Roman emperor]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q842606>",
        "Sparql label based": "select distinct ?q5_8 where { ?q5_8 wdt:<instance of> wd:[Human] . ?q5_8 p:<position held> [ n1:<start time> ?p580_12 ; ps:<position held> wd:[Roman Emperor] ] . } order by asc(?p580_12) limit 1 offset 3",
        "Sparql ID based": "select distinct ?q5_8 where { ?q5_8 wdt:P31 wd:Q5 . ?q5_8 p:P39 [ n1:P580 ?p580_12 ; ps:P39 wd:Q842606 ] . } order by asc(?p580_12) limit 1 offset 3",
        "Squall label based": "which [Human] has <position held> at the 4th lowest <start time> [Roman Emperor]?",
        "Squall ID based": "which <Q5> has <P39> at the 4th lowest <P580> <Q842606>?"
    },
    {
        "Question": "How many Crash Bandicoot games can be played on the Game Boy Advance?",
        "ID": "da2c2303",
        "Entities": "Q719176:Crash Bandicoot, Q188642:Game Boy Advance",
        "Mintaka Answer": "5",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Crash Bandicoot] and that has as a <platform> [Game Boy Advance] and give me the number of [video game]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q719176> and that has as a <P400> <Q188642> and give me the number of <Q7889>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7889_8) AS ?number_of_45) WHERE { ?Q7889_8 wdt:<instance of> wd:[Video Game] . ?Q7889_8 p:<part of the series> [ ps:<part of the series> wd:[Crash Bandicoot 2] ] . ?Q7889_8 p:<platform> [ ps:<platform> wd:[Game Boy Advance] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7889_8) AS ?number_of_45) WHERE { ?Q7889_8 wdt:P31 wd:Q7889 . ?Q7889_8 p:P179 [ ps:P179 wd:Q507898 ] . ?Q7889_8 p:P400 [ ps:P400 wd:Q188642 ] . }",
        "Squall label based": "how many [Video Game] has <part of the series> [Crash Bandicoot 2] and has <platform> [Game Boy Advance]?",
        "Squall ID based": "how many <Q7889> has <P179> <Q507898> and has <P400> <Q188642>?"
    },
    {
        "Question": "How many teams has Matthew Stafford played for?",
        "ID": "73d2a271",
        "Entities": "Q889130: Matthew Stafford",
        "Mintaka Answer": "Q271880: Detroit Lions, Q337377: Los Angeles Rams",
        "Sparklis label based": "[Matthew Stafford] has a <member of sports team> and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q889130> has a <P54> and give me the number of <P54>",
        "Sparql label based": "select distinct (count(distinct ?p54_9) as ?number_of_47) where { wd:[Matthew Stafford] p:<member of sports team> [ ps:<member of sports team> ?p54_9 ] . }",
        "Sparql ID based": "select distinct (count(distinct ?p54_9) as ?number_of_47) where { wd:Q889130 p:P54 [ ps:P54 ?p54_9 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Matthew Stafford]?",
        "Squall ID based": "how many thing is a <P54> of <Q889130>?"
    },
    {
        "Question": "Who starred as Aquaman?",
        "ID": "45e7218b",
        "Entities": "Q623059:Aquaman",
        "Mintaka Answer": "Q315271:Jason Momoa",
        "Sparklis label based": "give me every [human] that is the <cast member> with <character role> [Aquaman] of [Aquaman]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> with <P453> <Q22998395> of <Q22998395>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] .wd:[Aquaman] p:<cast member> [ ps:<cast member> ?Q5_1 ; n1:<character role> wd:[Aquaman 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 .wd:Q22998395 p:P161 [ ps:P161 ?Q5_1 ; n1:P453 wd:Q56244641 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <character role> [Aquaman 2] of [Aquaman]?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q56244641> of <Q22998395>?"
    },
    {
        "Question": "Which governors from Nevada have not been Republican since 1990?",
        "ID": "9364ac26",
        "Entities": "Q1227:Nevada, Q29468:Republican Party",
        "Mintaka Answer": "Q733724:Bob Miller, Q16185594:Steve Sisolak",
        "Sparklis label based": "give me every [human] that not has as a <member of political party> [Republican Party] and that has as a <position held> with a <start time> [Governor of Nevada] and where the year of the <start time> >= 1990",
        "Sparklis ID based": "give me every <Q5> that not has as a <P102> <Q29468> and that has as a <P39> with a <P580> <Q20801651> and where the year of the <P580> >= 1990",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_5 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<start time> ?P580_5 ; ps:<position held> wd:[Governor Of Nevada] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( (year(?P580_5) >= 1990) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_5 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P580 ?P580_5 ; ps:P39 wd:Q20801651 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( (year(?P580_5) >= 1990) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater or equal to 1990 [Governor Of Nevada] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater or equal to 1990 <Q20801651> and has not <P102> <Q29468>?"
    },
    {
        "Question": "Who was a senator from California and died in office in 1886?",
        "ID": "d252cce9",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q1304433:John Franklin Miller",
        "Sparklis label based": "give me every [human] that has as a <position held> with an <electoral district> that has as a <located in the administrative territorial entity> [California] [United States senator] and that has a <date of death> and where the year of the <date of death> = 1886",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P768> that has as a <P131> <Q99> <Q4416090> and that has a <P570> and where the year of the <P570> = 1886",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<electoral district> ?P768_5 ; ps:<position held> wd:[United States Senator] ] . ?P768_5 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q5_1 p:<date of death> [ ps:<date of death> ?P570_13 ] . FILTER ( (year(?P570_13) = 1886) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P768 ?P768_5 ; ps:P39 wd:Q4416090 ] . ?P768_5 p:P131 [ ps:P131 wd:Q99 ] . ?Q5_1 p:P570 [ ps:P570 ?P570_13 ] . FILTER ( (year(?P570_13) = 1886) ) }",
        "Squall label based": "which [Human] has <position held> at a <electoral district> that has <located in the administrative territorial entity> [California] [United States Senator] and has a <date of death> whose year is 1886?",
        "Squall ID based": "which <Q5> has <P39> at a <P768> that has <P131> <Q99> <Q4416090> and has a <P570> whose year is 1886?"
    },
    {
        "Question": "What year did Notorious Big die?",
        "ID": "fac43bd2",
        "Entities": "Q179157:The Notorious B.I.G.",
        "Mintaka Answer": "1997",
        "Sparklis label based": "[The Notorious B.I.G.] has a <date of death> and give me the year of the <date of death>",
        "Sparklis ID based": "<Q179157> has a <P570> and give me the year of the <P570>",
        "Sparql label based": "SELECT DISTINCT ?expr_135 WHERE { wd:[The Notorious B.i.g.] p:<date of death> [ ps:<date of death> ?P570_8 ] . BIND (year(?P570_8) AS ?expr_135) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_135 WHERE { wd:Q179157 p:P570 [ ps:P570 ?P570_8 ] . BIND (year(?P570_8) AS ?expr_135) }",
        "Squall label based": "what is the year of a <date of death> of [The Notorious B.i.g.]?",
        "Squall ID based": "what is the year of a <P570> of <Q179157>?"
    },
    {
        "Question": "Who was the 11th president of the United States?",
        "ID": "76cbdfb4",
        "Entities": "Q30:United States of America,11:None",
        "Mintaka Answer": "Q11891:James K. Polk",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 11 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 11 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"11\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"11\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"11\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"11\" <Q11696>?"
    },
    {
        "Question": "How many books are in CS Lewis' Cosmic Trilogy?",
        "ID": "4de871bc",
        "Entities": "Q9204:C. S. Lewis, Q2070438:The Space Trilogy",
        "Mintaka Answer": "3",
        "Sparklis label based": "[The Space Trilogy] has as an <author> [C. S. Lewis] and <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q2070438> has as an <P50> <Q9204> and <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:[The Space Trilogy] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:Q2070438 p:P527 [ ps:P527 ?P527_4 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [The Space Trilogy]?",
        "Squall ID based": "how many thing is a <P527> of <Q2070438>?"
    },
    {
        "Question": "Was Parasite released after 2015?",
        "ID": "9c87f70e",
        "Entities": "Q61448040:Parasite,2015:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Parasite] has a <publication date> and where the year of the <publication date> > 2015",
        "Sparklis ID based": "<Q61448040> has a <P577> and where the year of the <P577> > 2015",
        "Sparql label based": "ASK { wd:[Parasite] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( (year(?P577_8) > \"2015\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q61448040 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( (year(?P577_8) > \"2015\"^^xsd:integer) ) }",
        "Squall label based": "whether [Parasite] has a <publication date> whose year is greater than 2015?",
        "Squall ID based": "whether <Q61448040> has a <P577> whose year is greater than 2015?"
    },
    {
        "Question": "How many Donkey Kong Country games are there for Super Nintendo?",
        "ID": "3eff2bc3",
        "Entities": "Q183259:Super Nintendo Entertainment System, Q518987:Donkey Kong Country",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Donkey Kong Country 2] <has part(s)> that has as a <platform> [Super Nintendo Entertainment System] and give me the number of part(s)",
        "Sparklis ID based": "<Q16201230> <P527> that has as a <P400> <Q183259> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Donkey Kong Country 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<platform> [ ps:<platform> wd:[Super Nintendo Entertainment System] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q16201230 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P400 [ ps:P400 wd:Q183259 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Donkey Kong Country 2] and has <platform> [Super Nintendo Entertainment System]?",
        "Squall ID based": "how many thing is a <P527> of <Q16201230> and has <P400> <Q183259>?"
    },
    {
        "Question": "Who was a member of the 2004 U.S. Olympic men's swim team and born in Baltimore, Maryland?",
        "ID": "33ed28dd",
        "Entities": "Q5092: Baltimore, Q212434: Olympic sport, Q8441: man, Q31920: swimming, Q30: United States of America",
        "Mintaka Answer": "Q39562: Michael Phelps",
        "Sparklis label based": "give me every [human] that is <participant in> something that is the part(s) of [swimming at the 2004 Summer Olympics] and that has as a <country of citizenship> [United States of America] and that has as a <place of birth> [Baltimore]",
        "Sparklis ID based": "give me every <Q5> that is <P1344> something that is the part(s) of <Q220886> and that has as a <P27> <Q30> and that has as a <P19> <Q5092>",
        "Sparql label based": "SELECT DISTINCT ?Q5_12 WHERE { ?Q5_12 wdt:<instance of> wd:[Human] . ?Q5_12 p:<participant in> [ ps:<participant in> ?P527_5 ] . wd:[Swimming At The 2004 Summer Olympics] p:<has part(s)> [ ps:<has part(s)> ?P527_5 ] . ?Q5_12 p:<country of citizenship> [ ps:<country of citizenship> wd:[United States Of America] ] . ?Q5_12 p:<place of birth> [ ps:<place of birth> wd:[Baltimore] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_12 WHERE { ?Q5_12 wdt:P31 wd:Q5 . ?Q5_12 p:P1344 [ ps:P1344 ?P527_5 ] . wd:Q220886 p:P527 [ ps:P527 ?P527_5 ] . ?Q5_12 p:P27 [ ps:P27 wd:Q30 ] . ?Q5_12 p:P19 [ ps:P19 wd:Q5092 ] . }",
        "Squall label based": "which [Human] has <participant in> a <has part(s)> of [Swimming At The 2004 Summer Olympics] and has <country of citizenship> [United States Of America] and has <place of birth> [Baltimore]?",
        "Squall ID based": "which <Q5> has <P1344> a <P527> of <Q220886> and has <P27> <Q30> and has <P19> <Q5092>?"
    },
    {
        "Question": "Who was the sixth president of the United States?",
        "ID": "7a5eef52",
        "Entities": "Q30:United States of America,6:None",
        "Mintaka Answer": "Q11816:John Quincy Adams",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 6 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 6 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"6\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"6\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"6\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"6\" <Q11696>?"
    },
    {
        "Question": "What was the first book Orson Scott Card wrote?",
        "ID": "479a8ec1",
        "Entities": "Q217110:Orson Scott Card,1:None",
        "Mintaka Answer": "Q16386712:Listen, Mom and Dad",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Orson Scott Card] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q217110> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<author> [ ps:<author> wd:[Orson Scott Card] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P50 [ ps:P50 wd:Q217110 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <author> [Orson Scott Card] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P50> <Q217110> and has the lowest <P577>?"
    },
    {
        "Question": "How many Republican governors has Washington had since 1950?",
        "ID": "3faceaf5",
        "Entities": "Q29468:Republican Party, Q1223:Washington",
        "Mintaka Answer": "3",
        "Sparklis label based": "give me every [human] that has as a <position held> with a start time [Governor of Washington] and that has as a <member of political party> [Republican Party] and where the year of the <start time> > 1950 and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with a start time <Q19647220> and that has as a <P102> <Q29468> and where the year of the <P580> > 1950 and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_93) AS ?number_of_219) WHERE { ?Q5_93 wdt:<instance of> wd:[Human] . ?Q5_93 p:<position held> [ n1:<start time> ?P580_98 ; ps:<position held> wd:[Governor Of Washington] ] . ?Q5_93 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . FILTER ( (year(?P580_98) > \"1950\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_93) AS ?number_of_219) WHERE { ?Q5_93 wdt:P31 wd:Q5 . ?Q5_93 p:P39 [ n1:P580 ?P580_98 ; ps:P39 wd:Q19647220 ] . ?Q5_93 p:P102 [ ps:P102 wd:Q29468 ] . FILTER ( (year(?P580_98) > \"1950\"^^xsd:integer) ) }",
        "Squall label based": "how many [Human] has <position held> at a <start time> whose year is greater than 1950 [Governor Of Washington] and has <member of political party> [Republican Party]?",
        "Squall ID based": "how many <Q5> has <P39> at a <P580> whose year is greater than 1950 <Q19647220> and has <P102> <Q29468>?"
    },
    {
        "Question": "Who provided the voice for Rango's character?",
        "ID": "ba517f19",
        "Entities": "Q55456443:Rango",
        "Mintaka Answer": "Q37175:Johnny Depp",
        "Sparklis label based": "give me every [human] that is the <voice actor> of something with <character role> [Rango]",
        "Sparklis ID based": "give me every <Q5> that is the <P725> of something with <P453> <Q55456443>",
        "Sparql label based": "select distinct ?q5_46 where { ?q5_46 wdt:<instance of> wd:[Human] . ?thing_149 p:<voice actor> [ ps:<voice actor> ?q5_46 ; n1:<character role> wd:[Rango] ] . }",
        "Sparql ID based": "select distinct ?q5_46 where { ?q5_46 wdt:P31 wd:Q5 . ?thing_149 p:P725 [ ps:P725 ?q5_46 ; n1:P453 wd:Q55456443 ] . }",
        "Squall label based": "which [Human] is a <voice actor> at <character role> [Rango] of a thing?",
        "Squall ID based": "which <Q5> is a <P725> at <P453> <Q55456443> of a thing?"
    },
    {
        "Question": "What is the most expensive movie made by Christopher Nolan?",
        "ID": "9fa8a79b",
        "Entities": "Q25191:Christopher Nolan",
        "Mintaka Answer": "Q189330:The Dark Knight Rises",
        "Sparklis label based": "give me every [film] that has as a <director> [Christopher Nolan] and that has the highest-to-lowest <cost>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q25191> and that has the highest-to-lowest <P2130>",
        "Sparql label based": "select distinct ?q11424_349 ?p2130_353 where { ?q11424_349 wdt:<instance of> wd:[Film] . ?q11424_349 p:<director> [ ps:<director> wd:[Christopher Nolan] ] . ?q11424_349 p:<cost> [ ps:<cost> ?p2130_353 ] . } order by desc(?p2130_353) limit 1",
        "Sparql ID based": "select distinct ?q11424_349 ?p2130_353 where { ?q11424_349 wdt:P31 wd:Q11424 . ?q11424_349 p:P57 [ ps:P57 wd:Q25191 ] . ?q11424_349 p:P2130 [ ps:P2130 ?p2130_353 ] . } order by desc(?p2130_353) limit 1",
        "Squall label based": "which [Film] has <director> [Christopher Nolan] and has the highest <cost>?",
        "Squall ID based": "which <Q11424> has <P57> <Q25191> and has the highest <P2130>?"
    },
    {
        "Question": "How many professional teams has Lionel Messi played for in his career?",
        "ID": "6ff511b1",
        "Entities": "Q615:Lionel Messi",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Lionel Messi] has a <member of sports team> that is the <instance of> [professional sports team] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q615> has a <P54> that is the <P31> <Q20639856> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Lionel Messi] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<instance of> [ ps:<instance of> wd:[Professional Sports Team] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q615 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P31 [ ps:P31 wd:Q20639856 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Lionel Messi] and has <instance of> [Professional Sports Team]?",
        "Squall ID based": "how many thing is a <P54> of <Q615> and has <P31> <Q20639856>?"
    },
    {
        "Question": "Who was dubbed The King of Pop and is the brother to Janet Jackson?",
        "ID": "2d15b5e7",
        "Entities": "Q131324:Janet Jackson, Q2831:Michael Jackson",
        "Mintaka Answer": "Q2831:Michael Jackson",
        "Sparklis label based": "[Janet Jackson] has a <sibling> that has as a <nickname> The King of Pop",
        "Sparklis ID based": "<Q131324> has a <P3373> that has as a <P1449> The King of Pop",
        "Sparql label based": "SELECT DISTINCT ?P3373_8 WHERE { wd:[Janet Jackson] p:<sibling> [ ps:<sibling> ?P3373_8 ] . ?P3373_8 p:<nickname> [ ps:<nickname> \"The King of Pop\"@en ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P3373_8 WHERE { wd:Q131324 p:P3373 [ ps:P3373 ?P3373_8 ] . ?P3373_8 p:P1449 [ ps:P1449 \"The King of Pop\"@en ] . }",
        "Squall label based": "what is a <sibling> of [Janet Jackson] and has <nickname> \"The King of Pop\"@en?",
        "Squall ID based": "what is a <P3373> of <Q131324> and has <P1449> \"The King of Pop\"@en?"
    },
    {
        "Question": "What was the first Elder Scrolls game that was not developed by Bethesda Game Studios?",
        "ID": "06c98ddc",
        "Entities": "Q466530:The Elder Scrolls, Q3300783:Bethesda Game Studios",
        "Mintaka Answer": "Q106608696:The Elder Scrolls Travels: Stormhold",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [The Elder Scrolls] and that not has as a <developer> [Bethesda Game Studios]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q466530> and that not has as a <P178> <Q3300783>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_238 ?P577_242 WHERE { ?Q7889_238 wdt:<instance of> wd:[Video Game] . ?Q7889_238 p:<media franchise> [ ps:<media franchise> wd:[The Elder Scrolls] ] . FILTER ( NOT EXISTS { ?Q7889_238 p:<developer> [ ps:<developer> wd:[Bethesda Game Studios] ] . } ) ?Q7889_238 p:<publication date> [ ps:<publication date> ?P577_242 ] . } ORDER BY ASC(?P577_242)",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_238 ?P577_242 WHERE { ?Q7889_238 wdt:P31 wd:Q7889 . ?Q7889_238 p:P8345 [ ps:P8345 wd:Q106608779 ] . FILTER ( NOT EXISTS { ?Q7889_238 p:P178 [ ps:P178 wd:Q3300783 ] . } ) ?Q7889_238 p:P577 [ ps:P577 ?P577_242 ] . } ORDER BY ASC(?P577_242)",
        "Squall label based": "which [Video Game] has <media franchise> [The Elder Scrolls] and has not <developer> [Bethesda Game Studios] and has the ascending <publication date>?",
        "Squall ID based": "which <Q7889> has <P8345> <Q106608779> and has not <P178> <Q3300783> and has the ascending <P577>?"
    },
    {
        "Question": "Which NHL team is based in California and used to have Wayne Gretzky?",
        "ID": "24b5ae72",
        "Entities": "Q209518:Wayne Gretzky, Q1215892:National Hockey League, Q99:California",
        "Mintaka Answer": "Q203008:Los Angeles Kings",
        "Sparklis label based": "give me every [ice hockey team] that has as a league [National Hockey League] and that is the <member of sports team> of [Wayne Gretzky]",
        "Sparklis ID based": "give me every <Q4498974> that has as a league <Q1215892> and that is the <P54> of <Q209518>",
        "Sparql label based": "SELECT DISTINCT ?Q4498974_1 WHERE { ?Q4498974_1 wdt:<instance of> wd:[Ice Hockey Team] . ?Q4498974_1 p:<league> [ ps:<league> wd:[National Hockey League] ] . wd:[Wayne Gretzky] p:<member of sports team> [ ps:<member of sports team> ?Q4498974_1 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4498974_1 WHERE { ?Q4498974_1 wdt:P31 wd:Q4498974 . ?Q4498974_1 p:P118 [ ps:P118 wd:Q1215892 ] . wd:Q209518 p:P54 [ ps:P54 ?Q4498974_1 ] . } LIMIT 1",
        "Squall label based": "which [Ice Hockey Team] has <league> [National Hockey League] and is a <member of sports team> of [Wayne Gretzky]?",
        "Squall ID based": "which <Q4498974> has <P118> <Q1215892> and is a <P54> of <Q209518>?"
    },
    {
        "Question": "Is Emma Watson taller than Rupert Grint?",
        "ID": "34cd2794",
        "Entities": "Q39476:Emma Watson,Q19190:Rupert Grint",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "Emma Watson has a <height> and [Rupert Grint] has a <height>",
        "Sparklis ID based": "Emma Watson has a <P2048> and <Q19190> has a <P2048>",
        "Sparql label based": "ASK { wd:[Emma Watson] p:<width> [ ps:<width> ?area1 ] . wd:[Rupert Grint] p:<width> [ ps:<width> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q39476 p:P2049 [ ps:P2049 ?area1 ] . wd:Q19190 p:P2049 [ ps:P2049 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Emma Watson] has a <width> greater than a <width> of [Rupert Grint]?",
        "Squall ID based": "whether <Q39476> has a <P2049> greater than a <P2049> of <Q19190>?"
    },
    {
        "Question": "What team plays at Lumen Field and used to have Kam Chancellor?",
        "ID": "3cd60143",
        "Entities": "Q612736:Lumen Field, Q3812651:Kam Chancellor",
        "Mintaka Answer": "Q221878:Seattle Seahawks",
        "Sparklis label based": "give me every [American football team] that is the <member of sports team> of [Kam Chancellor] and that has as a <home venue> [Lumen Field]",
        "Sparklis ID based": "give me every <Q17156793> that is the <P54> of <Q3812651> and that has as a <P115> <Q612736>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:<instance of> wd:[American Football Team] . wd:[Kam Chancellor] p:<member of sports team> [ ps:<member of sports team> ?Q17156793_8 ] . ?Q17156793_8 p:<home venue> [ ps:<home venue> wd:[Lumen Field] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:P31 wd:Q17156793 . wd:Q3812651 p:P54 [ ps:P54 ?Q17156793_8 ] . ?Q17156793_8 p:P115 [ ps:P115 wd:Q612736 ] . }",
        "Squall label based": "which [American Football Team] is a <member of sports team> of [Kam Chancellor] and has <home venue> [Lumen Field]?",
        "Squall ID based": "which <Q17156793> is a <P54> of <Q3812651> and has <P115> <Q612736>?"
    },
    {
        "Question": "Which country borders the Mediterranean Sea and the Black Sea?",
        "ID": "234a6bb9",
        "Entities": "Q166:Black Sea, Q4918:Mediterranean Sea",
        "Mintaka Answer": "Q43:Turkey",
        "Sparklis label based": "give me every [country] that has as a <located next to body of water> [Mediterranean Sea] and [Black Sea]",
        "Sparklis ID based": "give me every <Q6256> that has as a <P206> <Q4918> and <Q166>",
        "Sparql label based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> wd:[Mediterranean Sea] ] . ?Q6256_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> wd:[Black Sea] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P206 [ ps:P206 wd:Q4918 ] . ?Q6256_1 p:P206 [ ps:P206 wd:Q166 ] . }",
        "Squall label based": "which [Country] has <located in or next to body of water> [Mediterranean Sea] and [Black Sea]?",
        "Squall ID based": "which <Q6256> has <P206> <Q4918> and <Q166>?"
    },
    {
        "Question": "What is the fifth Percy Jackson book called?",
        "ID": "a56f977a",
        "Entities": "Q3899725:Percy Jackson,5:None",
        "Mintaka Answer": "Q2077641:The Last Olympian",
        "Sparklis label based": "give me every [literary work] that has as a part of the series with <series ordinal> 5 [Percy Jackson & the Olympians]",
        "Sparklis ID based": "give me every <Q7725634> that has as a part of the series with <P1545> 5 <Q213167>",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ n1:<series ordinal> \"5\" ; ps:<part of the series> wd:[Percy Jackson & The Olympians] ] . }",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ n1:P1545 \"5\" ; ps:P179 wd:Q213167 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"5\" [Percy Jackson & The Olympians]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"5\" <Q213167>?"
    },
    {
        "Question": "How many NBA teams has James Harden played for?",
        "ID": "a6ae2599",
        "Entities": "Q136678:James Harden, Q155223:National Basketball Association",
        "Mintaka Answer": "3",
        "Sparklis label based": "[James Harden] has as a league [National Basketball Association] and has a <member of sports team> that has as a league [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q136678> has as a league <Q155223> and has a <P54> that has as a league <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:[James Harden] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ] . ?P54_4 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:Q136678 p:P54 [ ps:P54 ?P54_4 ] . ?P54_4 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [James Harden] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q136678> and has <P118> <Q155223>?"
    },
    {
        "Question": "Which book in the Discworld series was released in 1983?",
        "ID": "e51ff36f",
        "Entities": "Q3257270:Discworld",
        "Mintaka Answer": "Q32136:The Colour of Magic",
        "Sparklis label based": "[Discworld] <has part(s)> that has a <publication date> and where the year of the publication date = 1983",
        "Sparklis ID based": "<Q253295> <P527> that has a <P577> and where the year of the publication date = 1983",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Discworld Books] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_47 ] . FILTER ( (year(?P577_47) = \"1983\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q3257270 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_47 ] . FILTER ( (year(?P577_47) = \"1983\"^^xsd:integer) ) }",
        "Squall label based": "what is a <has part(s)> of [Discworld Books] and has a <publication date> whose year is 1983?",
        "Squall ID based": "what is a <P527> of <Q3257270> and has a <P577> whose year is 1983?"
    },
    {
        "Question": "What is the largest city in Canada by population?",
        "ID": "eb370592",
        "Entities": "Q16:Canada",
        "Mintaka Answer": "Q172:Toronto",
        "Sparklis label based": "give me every [city] that has as a <country> [Canada] and that has the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has as a <P17> <Q16> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q515_10 ?P1082_14 WHERE { ?Q515_10 wdt:<instance of> wd:[City] . ?Q515_10 p:<country> [ ps:<country> wd:[Canada] ] . ?Q515_10 p:<population> [ ps:<population> ?P1082_14 ] . } ORDER BY DESC(?P1082_14) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q515_10 ?P1082_14 WHERE { ?Q515_10 wdt:P31 wd:Q515 . ?Q515_10 p:P17 [ ps:P17 wd:Q16 ] . ?Q515_10 p:P1082 [ ps:P1082 ?P1082_14 ] . } ORDER BY DESC(?P1082_14) LIMIT 1",
        "Squall label based": "which [City] has <country> [Canada] and has the highest <population>?",
        "Squall ID based": "which <Q515> has <P17> <Q16> and has the highest <P1082>?"
    },
    {
        "Question": "How many NBA teams did Chris Paul play for?",
        "ID": "20233cda",
        "Entities": "Q155223:National Basketball Association, Q46040:Chris Paul",
        "Mintaka Answer": "4",
        "Sparklis label based": "[Chris Paul] has a <member of sports team> that has as a league [National Basketball Association] and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q46040> has a <P54> that has as a league <Q155223> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:[Chris Paul] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ] . ?P54_4 p:<league> [ ps:<league> wd:[National Basketball Association] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_4) AS ?number_of_42) WHERE { wd:Q46040 p:P54 [ ps:P54 ?P54_4 ] . ?P54_4 p:P118 [ ps:P118 wd:Q155223 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Chris Paul] and has <league> [National Basketball Association]?",
        "Squall ID based": "how many thing is a <P54> of <Q46040> and has <P118> <Q155223>?"
    },
    {
        "Question": "What was the fourth book in the Wheel of Time series?",
        "ID": "3ce92b7c",
        "Entities": "Q4470:The Wheel of Time,4:None",
        "Mintaka Answer": "Q1057726:The Shadow Rising",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 4 [The Wheel of Time]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 4 <Q4470>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n2:<series ordinal> \"4\" ; ps:<part of the series> wd:[The Wheel Of Time] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n2:P1545 \"4\" ; ps:P179 wd:Q4470 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"4\" [The Wheel Of Time]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"4\" <Q4470>?"
    },
    {
        "Question": "Which country has a larger population, Russia or Mexico?",
        "ID": "a0bc72b0",
        "Entities": "Q96:Mexico, Q159:Russia",
        "Mintaka Answer": "Q159:Russia",
        "Sparklis label based": "give me every [country] that has the highest-to-lowest <population> and that is [Mexico] or that is [Russia]",
        "Sparklis ID based": "give me every <Q6256> that has the highest-to-lowest <P1082> and that is <Q96> or that is <Q159>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Mexico] wd:[Russia] } ?x p:<population> [ ps:<population> ?population] . } ORDER BY DESC(?population) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q96 wd:Q159 } ?x p:P1082 [ ps:P1082 ?population] . } ORDER BY DESC(?population) LIMIT 1",
        "Squall label based": "what is [Mexico] or [Russia] and has the highest <population>?",
        "Squall ID based": "what is <Q96> or <Q159> and has the highest <P1082>?"
    },
    {
        "Question": "How many movies are there in the Twilight movie series?",
        "ID": "6c075b0b",
        "Entities": "Q652599:The Twilight Saga",
        "Mintaka Answer": "Q160071:Twilight,Q116928:The Twilight Saga: New Moon,Q217010:The Twilight Saga: Eclipse,Q60506:The Twilight Saga: Breaking Dawn \u2013 Part 1,Q60487:The Twilight Saga: Breaking Dawn \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Twilight Saga] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q652599> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:<instance of> wd:[Film] . ?Q11424_84 p:<part of the series> [ ps:<part of the series> wd:[The Twilight Saga] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_84 WHERE { ?Q11424_84 wdt:P31 wd:Q11424 . ?Q11424_84 p:P179 [ ps:P179 wd:Q652599 ] . }",
        "Squall label based": "which [Film] has <part of the series> [The Twilight Saga]?",
        "Squall ID based": "which <Q11424> has <P179> <Q652599>?"
    },
    {
        "Question": "What city has the nickname of Sin City?",
        "ID": "6.81E+61",
        "Entities": "Q192115:Sin City",
        "Mintaka Answer": "Q23768:Las Vegas",
        "Sparklis label based": "give me every [city in the United States] that has as a <nickname> Sin City",
        "Sparklis ID based": "give me every <Q1093829> that has as a <P1449> Sin City",
        "Sparql label based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:<instance of> wd:[City In The United States] . ?Q1093829_1 p:<nickname> [ ps:<nickname> \"Sin City\"@en ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:P31 wd:Q1093829 . ?Q1093829_1 p:P1449 [ ps:P1449 \"Sin City\"@en ] . }",
        "Squall label based": "which [City In The United States] has <nickname> \"Sin City\"@en?",
        "Squall ID based": "which <Q1093829> has <P1449> \"Sin City\"@en?"
    },
    {
        "Question": "How many oceans are there?",
        "ID": "e651217a",
        "Entities": "Q9430:ocean",
        "Mintaka Answer": "4",
        "Sparklis label based": "[ocean] has a <quantity>",
        "Sparklis ID based": "<Q9430> has a <P1114>",
        "Sparql label based": "SELECT DISTINCT ?P1114_8 WHERE { wd:[Ocean] p:<quantity> [ ps:<quantity> ?P1114_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1114_8 WHERE { wd:Q9430 p:P1114 [ ps:P1114 ?P1114_8 ] . }",
        "Squall label based": "what is a <quantity> of [Ocean]?",
        "Squall ID based": "what is a <P1114> of <Q9430>?"
    },
    {
        "Question": "Which Chronicles of Narnia book does not take place in the 1940s?",
        "ID": "96d91166",
        "Entities": "Q483412:The Chronicles of Narnia",
        "Mintaka Answer": "Q477831:The Magician's Nephew",
        "Sparklis label based": "[The Chronicles of Narnia] has a part(s) that has a <publication date> and where the year of the <publication date> >= 1940",
        "Sparklis ID based": "<Q483412> has a part(s) that has a <P577> and where the year of the <P577> >= 1940",
        "Sparql label based": "SELECT DISTINCT ?P527_8 ?P577_46 WHERE { wd:[The Chronicles Of Narnia] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_46 ] . FILTER ( (year(?P577_46) >= 1940) ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 ?P577_46 WHERE { wd:Q483412 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_46 ] . FILTER ( (year(?P577_46) >= 1940) ) }",
        "Squall label based": "what is a <has part(s)> of [The Chronicles Of Narnia] and has a <publication date> whose year is greater or equal to 1940?",
        "Squall ID based": "what is a <P527> of <Q483412> and has a <P577> whose year is greater or equal to 1940?"
    },
    {
        "Question": "Who was the 26th president of the United States?",
        "ID": "3df3b457",
        "Entities": "Q30:United States of America,26:None",
        "Mintaka Answer": "Q33866:Theodore Roosevelt",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 26 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 26 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"26\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"26\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"26\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"26\" <Q11696>?"
    },
    {
        "Question": "Peter Quill in Guardians of the Galaxy was born in which U.S. state?",
        "ID": "b8575891",
        "Entities": "Q5887360:Guardians of the Galaxy,Q30:United States of America,Q24050065:Peter Quill",
        "Mintaka Answer": "Q1581:Missouri",
        "Sparklis label based": "give me every [human] that is the <cast member> with name of the <character role> Peter Quill of [Guardians of the Galaxy] and that has a <place of birth>",
        "Sparklis ID based": "give me every <Q5> that is the <P161> with name of the <P453> Peter Quill of <Q5887360> and that has a <P19>",
        "Sparql label based": "SELECT DISTINCT ?Q5_46 ?P19_50 WHERE { ?Q5_46 wdt:<instance of> wd:[Human] . wd:[Guardians Of The Galaxy] p:<cast member> [ ps:<cast member> ?Q5_46 ; n1:<name of the character role> \"Peter Quill\" ] . ?Q5_46 p:<place of birth> [ ps:<place of birth> ?P19_50 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_46 ?P19_50 WHERE { ?Q5_46 wdt:P31 wd:Q5 . wd:Q5887360 p:P161 [ ps:P161 ?Q5_46 ; n1:P4633 \"Peter Quill\" ] . ?Q5_46 p:P19 [ ps:P19 ?P19_50 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <name of the character role> \"Peter Quill\" of [Guardians Of The Galaxy] and has a <place of birth>?",
        "Squall ID based": "which <Q5> is a <P161> at <P4633> \"Peter Quill\" of <Q5887360> and has a <P19>?"
    },
    {
        "Question": "Which Linda Ronstadt albums are not in English?",
        "ID": "61c45307",
        "Entities": "Q1860:English, Q229375:Linda Ronstadt",
        "Mintaka Answer": "Q5031512:Canciones de mi padre, Q6782222:Mas Canciones, Q5502773:Frenes\u00ed",
        "Sparklis label based": "give me every [album] that has as a <performer> [Linda Ronstadt] and that has as a language of work or name [Spanish] and give me the number of [album]",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q229375> and that has as a language of work or name <Q1321> and give me the number of <Q482994>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q482994_1) AS ?number_of_38) WHERE { ?Q482994_1 wdt:<instance of> wd:[Album] . ?Q482994_1 p:<performer> [ ps:<performer> wd:[Linda Ronstadt] ] . ?Q482994_1 p:<language of work (or name)> [ ps:<language of work (or name)> wd:[Spanish] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q482994_1) AS ?number_of_38) WHERE { ?Q482994_1 wdt:P31 wd:Q482994 . ?Q482994_1 p:P175 [ ps:P175 wd:Q229375 ] . ?Q482994_1 p:P407 [ ps:P407 wd:Q1321 ] . } LIMIT 1",
        "Squall label based": "how many [Album] has <performer> [Linda Ronstadt] and has <language of work (or name)> [Spanish]?",
        "Squall ID based": "how many <Q482994> has <P175> <Q229375> and has <P407> <Q1321>?"
    },
    {
        "Question": "How many Deadpool movies are there?",
        "ID": "dc6325e8",
        "Entities": "Q29559108:Deadpool",
        "Mintaka Answer": "Q19347291:Deadpool,Q25431158:Deadpool 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Deadpool_2] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q29559108> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:<instance of> wd:[Film] . ?Q11424_311 p:<part of the series> [ ps:<part of the series> wd:[Deadpool 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:P31 wd:Q11424 . ?Q11424_311 p:P179 [ ps:P179 wd:Q29559108 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Deadpool 2]?",
        "Squall ID based": "which <Q11424> has <P179> <Q29559108>?"
    },
    {
        "Question": "How many mainline Pok\u00e9mon games have come out on Switch?",
        "ID": "244b5121",
        "Entities": "Q19610114:Nintendo Switch",
        "Mintaka Answer": "Q61951031:Pok\u00e9mon Sword,Q61951086:Pok\u00e9mon Shield",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Pokemon core series] and that has as a platform [Nintendo Switch] and give me the number of [video game]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q24558579> and that has as a platform <Q19610114> and give me the number of <Q7889>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Pokemon Core Series] ] . ?Q7889_1 p:<platform> [ ps:<platform> wd:[Nintendo Switch] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q24558579 ] . ?Q7889_1 p:P400 [ ps:P400 wd:Q19610114 ] . }",
        "Squall label based": "which [Video Game] has <part of the series> [Pokemon Core Series] and has <platform> [Nintendo Switch]?",
        "Squall ID based": "which <Q7889> has <P179> <Q24558579> and has <P400> <Q19610114>?"
    },
    {
        "Question": "In what game can you play as a character named Teemo\"?\"",
        "ID": "b3d55e90",
        "Entities": "Q100255087:Teemo",
        "Mintaka Answer": "Q223341:League of Legends",
        "Sparklis label based": "give me every [video game] that has as a <characters> [Teemo]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P674> <Q100255087>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<characters> [ ps:<characters> wd:[Teemo] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P674 [ ps:P674 wd:Q100255087 ] . }",
        "Squall label based": "which [Video Game] has <characters> [Teemo]?",
        "Squall ID based": "which <Q7889> has <P674> <Q100255087>?"
    },
    {
        "Question": "What US president did not have a First Lady?",
        "ID": "What US president did not have a First Lady?",
        "Entities": "Q203184:First Lady, Q30:United States of America",
        "Mintaka Answer": "Q12325:James Buchanan",
        "Sparklis label based": "give me every [human] that not has a <spouse> and that has as a <position held> [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that not has a <P26> and that has as a <P39> <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<spouse> [ ps:<spouse> ?P26_123 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P26 [ ps:P26 ?P26_123 ] . } ) }",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has not a <spouse>?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has not a <P26>?"
    },
    {
        "Question": "What is the most recent book in the original Goosebumps series by author R.L. Stine?",
        "ID": "10636e0e",
        "Entities": "Q333123:R. L. Stine, Q3260367:Goosebumps",
        "Mintaka Answer": "Q48838179:Monster Blood IV",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Goosebumps] with the highest-to-lowest <series ordinal> and that has as an <author> [R. L. Stine]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q3260367> with the highest-to-lowest <P1545> and that has as an <P50> <Q333123>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Goosebumps] ; n1:<series ordinal> ?P1545_16 ] . ?Q7725634_8 p:<author> [ ps:<author> wd:[R. L. Stine] ] . } ORDER BY DESC(xsd:integer(?P1545_16)) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q15532572 ; n1:P1545 ?P1545_16 ] . ?Q7725634_8 p:P50 [ ps:P50 wd:Q333123 ] . } ORDER BY DESC(xsd:integer(?P1545_16)) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> at a <series ordinal> whose xsd:integer is the highest thing [Goosebumps] and has <author> [R. L. Stine]?",
        "Squall ID based": "which <Q7725634> has <P179> at a <P1545> whose xsd:integer is the highest thing <Q15532572> and has <P50> <Q333123>?"
    },
    {
        "Question": "Who played the character Rocky Balboa in the Rocky movies?",
        "ID": "f2cdb7d1",
        "Entities": "Q188652:Rocky, Q2289535:Rocky Balboa",
        "Mintaka Answer": "Q40026:Sylvester Stallone",
        "Sparklis label based": "[Rocky 2] has a <cast member> with <character role> [Rocky Balboa]",
        "Sparklis ID based": "<Q188652> has a <P161> with <P453> <Q2289535>",
        "Sparql label based": "SELECT DISTINCT ?P161_8 WHERE { wd:[Rocky 2] p:<cast member> [ ps:<cast member> ?P161_8 ; n1:<character role> wd:[Rocky Balboa] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P161_8 WHERE { wd:Q188652 p:P161 [ ps:P161 ?P161_8 ; n1:P453 wd:Q2289535 ] . }",
        "Squall label based": "what is a <cast member> at <character role> [Rocky Balboa] of [Rocky 2]?",
        "Squall ID based": "what is a <P161> at <P453> <Q2289535> of <Q188652>?"
    },
    {
        "Question": "What is the fifth game in the Tomb Raiser franchise?",
        "ID": "a4d6e6da",
        "Entities": "Q270503:Tomb Raider",
        "Mintaka Answer": "Q642359:Tomb Raider Chronicles",
        "Sparklis label based": "give me every video game that has as a media franchise  Tomb Raider  and that has  the lowest-to-highest publication date",
        "Sparklis ID based": "give me every video game that has as a media franchise Tomb Raider and that has the lowest-to-highest publication date",
        "Sparql label based": "SELECT DISTINCT ?Q7889_12 WHERE { ?Q7889_12 wdt:<instance of> wd:[Video Game] . ?Q7889_12 p:<media franchise> [ ps:<media franchise> wd:[Tomb Raider] ] . ?Q7889_12 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) OFFSET 4 LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_12 WHERE { ?Q7889_12 wdt:P31 wd:Q7889 . ?Q7889_12 p:P8345 [ ps:P8345 wd:Q111328790 ] . ?Q7889_12 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) OFFSET 4 LIMIT 1",
        "Squall label based": "which [Video Game] has <media franchise> [Tomb Raider] and has the 5th lowest <publication date>?",
        "Squall ID based": "which <Q7889> has <P8345> <Q111328790> and has the 5th lowest <P577>?"
    },
    {
        "Question": "How many Lethal Weapon movies are there?",
        "ID": "d4198048",
        "Entities": "Q462447:Lethal Weapon",
        "Mintaka Answer": "Q462447:Lethal Weapon,Q751767:Lethal Weapon 2,Q751769:Lethal Weapon 3,Q429397:Lethal Weapon 4",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Lethal Weapon] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1777059> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Lethal Weapon] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q1777059 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Lethal Weapon]?",
        "Squall ID based": "which <Q11424> has <P179> <Q1777059>?"
    },
    {
        "Question": "What was the first movie Quentin Tarantino directed?",
        "ID": "10ee40d5",
        "Entities": "Q3772:Quentin Tarantino,1:None",
        "Mintaka Answer": "Q72962:Reservoir Dogs",
        "Sparklis label based": "give me every [film] that has as a <director> [Quentin Tarantino] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q3772> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Quentin Tarantino] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q3772 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <director> [Quentin Tarantino] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P57> <Q3772> and has the lowest <P577>?"
    },
    {
        "Question": "What is the longest lake in the world?",
        "ID": "650e81a3",
        "Entities": "Q23397: lake",
        "Mintaka Answer": "Q5511: Lake Tanganyika",
        "Sparklis label based": "give me every [lake] that has the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q23397> that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q23397_10 WHERE { ?Q23397_10 wdt:<instance of> wd:[Lake] . ?Q23397_10 p:<length> [ ps:<length> ?P2043_111 ] . } ORDER BY DESC(?P2043_111) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q23397_10 WHERE { ?Q23397_10 wdt:P31 wd:Q23397 . ?Q23397_10 p:P2043 [ ps:P2043 ?P2043_111 ] . } ORDER BY DESC(?P2043_111) LIMIT 1",
        "Squall label based": "which [Lake] has the highest <length>?",
        "Squall ID based": "which <Q23397> has the highest <P2043>?"
    },
    {
        "Question": "What was the first Harry Potter movie chronologically?",
        "ID": "f03db13e",
        "Entities": "Q216930:Harry Potter film series,1:None",
        "Mintaka Answer": "Q102438:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [film] that has as a <part of the series> Harry Potter [film] series and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> Harry Potter <Q11424> series and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the lowest <P577>?"
    },
    {
        "Question": "How many members are in Babymetal?",
        "ID": "0e9b5225",
        "Entities": "Q11190781:Babymetal",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Babymetal] <has part(s)> and not with an <end time>",
        "Sparklis ID based": "<Q11190781> <P527> and not with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Babymetal] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . FILTER ( NOT EXISTS { wd:[Babymetal] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ; n1:<end time> ?P582_46 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q11190781 p:P527 [ ps:P527 ?P527_8 ] . FILTER ( NOT EXISTS { wd:Q11190781 p:P527 [ ps:P527 ?P527_8 ; n1:P582 ?P582_46 ] . } ) }",
        "Squall label based": "what is a <has part(s)> of [Babymetal] and is not a <has part(s)> at a <end time> of [Babymetal]?",
        "Squall ID based": "what is a <P527> of <Q11190781> and is not a <P527> at a <P582> of <Q11190781>?"
    },
    {
        "Question": "How many Marvel movies are there?",
        "ID": "2b0a0793",
        "Entities": "Q642878:Marvel Cinematic Universe",
        "Mintaka Answer": "25",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Marvel Cinematic Universe] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q642878> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Marvel Cinematic Universe] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q642878 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Marvel Cinematic Universe]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q642878>?"
    },
    {
        "Question": "What is the first Star Trek movie to feature the Next Generation cast?",
        "ID": "4c3550af",
        "Entities": "Q1092:Star Trek, Q16290:Star Trek: The Next Generation",
        "Mintaka Answer": "Q723679:Star Trek Generations",
        "Sparklis label based": "give me every [Star Trek film] that has as a <described by source> [Star Trek: The Next Generation Companion] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q61283808> that has as a <P1343> <Q64504022> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q61283808_1 ?P577_5 WHERE { ?Q61283808_1 wdt:<instance of> wd:[Star Trek Film] . ?Q61283808_1 p:<described by source> [ ps:<described by source> wd:[Star Trek: The Next Generation Companion] ] . ?Q61283808_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q61283808_1 ?P577_5 WHERE { ?Q61283808_1 wdt:P31 wd:Q61283808 . ?Q61283808_1 p:P1343 [ ps:P1343 wd:Q64504022 ] . ?Q61283808_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Star Trek Film] has <described by source> [Star Trek: The Next Generation Companion] and has the lowest <publication date>?",
        "Squall ID based": "which <Q61283808> has <P1343> <Q64504022> and has the lowest <P577>?"
    },
    {
        "Question": "Who was a member of both Nirvana and Foo Fighters?",
        "ID": "e6cab91e",
        "Entities": "Q11649:Nirvana, Q483718:Foo Fighters",
        "Mintaka Answer": "Q12006:Dave Grohl",
        "Sparklis label based": "give me every [human] that is the <member of> [Nirvana] and of [Foo Fighters]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q11649> and of <Q483718>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<member of> [ ps:<member of> wd:[Nirvana] ] . ?Q5_1 p:<member of> [ ps:<member of> wd:[Foo Fighters] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P463 [ ps:P463 wd:Q11649 ] . ?Q5_1 p:P463 [ ps:P463 wd:Q483718 ] . }",
        "Squall label based": "which [Human] has <member of> [Nirvana] and [Foo Fighters]?",
        "Squall ID based": "which <Q5> has <P463> <Q11649> and <Q483718>?"
    },
    {
        "Question": "Which Matrix movie was not released in the 21st century?",
        "ID": "722de474",
        "Entities": "Q83495:The Matrix",
        "Mintaka Answer": "Q83495:The Matrix",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Matrix series] and that has a <publication date> before 2000",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1210827> and that has a <P577> before 2000",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Matrix Series] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . FILTER ( str(?P577_5) <= \"2000\" ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q1210827 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . FILTER ( str(?P577_5) <= \"2000\" ) } LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Matrix Series] and has a <publication date> lesser or equal to 2000?",
        "Squall ID based": "which <Q11424> has <P179> <Q1210827> and has a <P577> lesser or equal to 2000?"
    },
    {
        "Question": "Which Pirates of the Caribbean movie made the least money?",
        "ID": "0d5d8cab",
        "Entities": "Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q46717:Pirates of the Caribbean: The Curse of the Black Pearl",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Pirates of the Caribbean] and that has the lowest-to-highest <box office> with <valid in place> [worldwide]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q194318> and that has the lowest-to-highest <P2142> with <P3005> <Q13780930>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P2142_45 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_45 ; n1:<valid in place> wd:[Worldwide] ] . } ORDER BY ASC(?P2142_45) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P2142_45 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q194318 ] . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_45 ; n1:P3005 wd:Q13780930 ] . } ORDER BY ASC(?P2142_45) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has <box office> at <valid in place> [Worldwide] the lowest thing?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has <P2142> at <P3005> <Q13780930> the lowest thing?"
    },
    {
        "Question": "Where did the Great Emu War take place?",
        "ID": "4fa8d5a4",
        "Entities": "Q14665:Emu War",
        "Mintaka Answer": "Q408:Australia",
        "Sparklis label based": "[Emu War] has a <country>",
        "Sparklis ID based": "<Q14665> has a <P17>",
        "Sparql label based": "SELECT DISTINCT ?P17_8 WHERE { wd:[Emu War] p:<country> [ ps:<country> ?P17_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P17_8 WHERE { wd:Q14665 p:P17 [ ps:P17 ?P17_8 ] . }",
        "Squall label based": "what is a <country> of [Emu War]?",
        "Squall ID based": "what is a <P17> of <Q14665>?"
    },
    {
        "Question": "What is Deadpool's real name?",
        "ID": "4d06d98c",
        "Entities": "Q1631090:Deadpool",
        "Mintaka Answer": "Q4108901:Wade Wilson",
        "Sparklis label based": "[Deadpool] has a <birth name>",
        "Sparklis ID based": "<Q1631090> has a <P1477>",
        "Sparql label based": "SELECT DISTINCT ?P1477_8 WHERE { wd:[Deadpool] p:<birth name> [ ps:<birth name> ?P1477_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1477_8 WHERE { wd:Q1631090 p:P1477 [ ps:P1477 ?P1477_8 ] . }",
        "Squall label based": "what is a <birth name> of [Deadpool]?",
        "Squall ID based": "what is a <P1477> of <Q1631090>?"
    },
    {
        "Question": "What was the third Fast & Furious movie to be released?",
        "ID": "a06f2902",
        "Entities": "Q1576873:Fast & Furious,3:None",
        "Mintaka Answer": "Q213208:The Fast and the Furious: Tokyo Drift",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [Fast & Furious 2]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q1576873>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:<instance of> wd:[Film] . ?Q11424_9 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Fast & Furious 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:P31 wd:Q11424 . ?Q11424_9 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q1576873 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [Fast & Furious 2]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q1576873>?"
    },
    {
        "Question": "What is the first book in Stephen King's Dark Tower series?",
        "ID": "d136efbf",
        "Entities": "Q280898:The Dark Tower, Q39829:Stephen King",
        "Mintaka Answer": "Q1422318:The Dark Tower: The Gunslinger",
        "Sparklis label based": "[Dune novel series] has as an <author> Stephen King and <has part(s)> with <series ordinal> 1",
        "Sparklis ID based": "<Q6095696> has as an <P50> Stephen King and <P527> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE {wd:[The Dark Tower 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ; n1:<series ordinal> \"1\" ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE {wd:Q280898 p:P527 [ ps:P527 ?P527_8 ; n1:P1545 \"1\" ] . } LIMIT 1",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"1\" of [The Dark Tower 2]?",
        "Squall ID based": "what is a <P527> at <P1545> \"1\" of <Q280898>?"
    },
    {
        "Question": "Which Harry Potter books did not have the character Sirius Black in them?",
        "ID": "b44d6ab0",
        "Entities": "Q713701:Sirius Black,Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone,Q47209:Harry Potter and the Chamber of Secrets,Q46887:Harry Potter and the Half-Blood Prince,Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that not has as a <characters> [Sirius Black]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that not has as a <P674> <Q713701>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . FILTER ( NOT EXISTS { ?Q7725634_8 p:<characters> [ ps:<characters> wd:[Sirius Black] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q8337 ] . FILTER ( NOT EXISTS { ?Q7725634_8 p:P674 [ ps:P674 wd:Q713701 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has not <characters> [Sirius Black]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has not <P674> <Q713701>?"
    },
    {
        "Question": "Who was the first female vice president of America?",
        "ID": "3f466430",
        "Entities": "Q30:United States of America,Q42178:vice president,1:None",
        "Mintaka Answer": "Q10853588:Kamala Harris",
        "Sparklis label based": "give me every [human] that has as a <position held> [Vice President of the United States] with the lowest-to-highest <start time> and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11699> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . } ORDER BY ASC(?P580_9)",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11699 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . } ORDER BY ASC(?P580_9)",
        "Squall label based": "which [Human] has <position held> at the ascending <start time> [Vice President Of The United States] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> at the ascending <P580> <Q11699> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Which Crash Bandicoot game is not developed by Naughty Dog?",
        "ID": "9be93a95",
        "Entities": "Q507898:Crash Bandicoot, Q720871:Naughty Dog",
        "Mintaka Answer": "Q96574138:Crash Bandicoot 4: It's About Time",
        "Sparklis label based": "give me every [video game] that has as a <part of the series> [Crash Bandicoot 2] and that not has as a <developer> [Naughty Dog]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q507898> and that not has as a <P178> <Q720871>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Crash Bandicoot 2] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<developer> [ ps:<developer> wd:[Naughty Dog] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q507898 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P178 [ ps:P178 wd:Q720871 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Crash Bandicoot 2] and has not <developer> [Naughty Dog]?",
        "Squall ID based": "which <Q7889> has <P179> <Q507898> and has not <P178> <Q720871>?"
    },
    {
        "Question": "What is the most sold Harry Potter book?",
        "ID": "8d653925",
        "Entities": "Q8337:Harry Potter",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2] and that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . ?Q7725634_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q8337 ] . ?Q7725634_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has the highest <units sold>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has the highest <P2664>?"
    },
    {
        "Question": "What is the highest mountain in the U.S.?",
        "ID": "96ef60e9",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q130018:Denali",
        "Sparklis label based": "give me every [mountain] that has as a <country> [United States of America] and that has the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has as a <P17> <Q30> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_1 ?P2044_38 WHERE { ?Q8502_1 wdt:<instance of> wd:[Mountain] . ?Q8502_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q8502_1 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_38 ] . } ORDER BY DESC(?P2044_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_1 ?P2044_38 WHERE { ?Q8502_1 wdt:P31 wd:Q8502 . ?Q8502_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q8502_1 p:P2044 [ ps:P2044 ?P2044_38 ] . } ORDER BY DESC(?P2044_38) LIMIT 1",
        "Squall label based": "which [Mountain] has <country> [United States Of America] and has the highest <elevation above sea level>?",
        "Squall ID based": "which <Q8502> has <P17> <Q30> and has the highest <P2044>?"
    },
    {
        "Question": "Which of Great Lakes does not share a border Michigan?",
        "ID": "d4f9aa73",
        "Entities": "Q7347:Great Lakes, Q1166:Michigan",
        "Mintaka Answer": "Q1062:Lake Ontario",
        "Sparklis label based": "[Great Lakes] has a part that not has as a <located in the administrative territorial entity> [Michigan]",
        "Sparklis ID based": "<Q7347> has a part that not has as a <P131> <Q1166>",
        "Sparql label based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:<part of> [ ps:<part of> wd:[Great Lakes] ] . FILTER ( NOT EXISTS { ?P361_8 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Michigan] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:P361 [ ps:P361 wd:Q7347 ] . FILTER ( NOT EXISTS { ?P361_8 p:P131 [ ps:P131 wd:Q1166 ] . } ) }",
        "Squall label based": "what has <part of> [Great Lakes] and has not <located in the administrative territorial entity> [Michigan]?",
        "Squall ID based": "what has <P361> <Q7347> and has not <P131> <Q1166>?"
    },
    {
        "Question": "Who is younger Selena Gomez or Ariana Grande?",
        "ID": "f93936c9",
        "Entities": "Q151892:Ariana Grande, Q83287:Selena Gomez",
        "Mintaka Answer": "Q151892:Ariana Grande",
        "Sparklis label based": "give me every [human] that has the highest-to-lowest <date of birth> and that is [Ariana Grande] or that is [Selena Gomez]",
        "Sparklis ID based": "give me every <Q5> that has the highest-to-lowest <P569> and that is <Q151892> or that is <Q83287>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P569_102 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<date of birth> [ ps:<date of birth> ?P569_102 ] . VALUES ?Q5_1 { wd:[Ariana Grande] wd:[Selena Gomez] } } ORDER BY DESC(?P569_102) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P569_102 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P569 [ ps:P569 ?P569_102 ] . VALUES ?Q5_1 { wd:Q151892 wd:Q83287 } } ORDER BY DESC(?P569_102) LIMIT 1",
        "Squall label based": "which [Human] has the highest <date of birth> and is [Ariana Grande] or [Selena Gomez]?",
        "Squall ID based": "which <Q5> has the highest <P569> and is <Q151892> or <Q83287>?"
    },
    {
        "Question": "What was Hunter Thompson's first book?",
        "ID": "cbab585c",
        "Entities": "Q219780:Hunter S. Thompson,1:None",
        "Mintaka Answer": "Q841931:Hell's Angels: The Strange and Terrible Saga of the Outlaw Motorcycle Gangs",
        "Sparklis label based": "give me every [written work] that has as an <author> [Hunter S. Thompson] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q47461344> that has as an <P50> <Q219780> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q47461344_1 ?P577_38 WHERE { ?Q47461344_1 wdt:<instance of> wd:[Written Work] . ?Q47461344_1 p:<author> [ ps:<author> wd:[Hunter S. Thompson] ] . ?Q47461344_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q47461344_1 ?P577_38 WHERE { ?Q47461344_1 wdt:P31 wd:Q47461344 . ?Q47461344_1 p:P50 [ ps:P50 wd:Q219780 ] . ?Q47461344_1 p:P577 [ ps:P577 ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Squall label based": "which [Written Work] has <author> [Hunter S. Thompson] and has the lowest <publication date>?",
        "Squall ID based": "which <Q47461344> has <P50> <Q219780> and has the lowest <P577>?"
    },
    {
        "Question": "What was Dickens' earliest novella?",
        "ID": "c5c1073c",
        "Entities": "Q5686:Charles Dickens",
        "Mintaka Answer": "Q62879:A Christmas Carol",
        "Sparklis label based": "give me every [novella] that has as an <author> [Charles Dickens] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q149537> that has as an <P50> <Q5686> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q149537_1 ?P577_5 WHERE { ?Q149537_1 wdt:<instance of> wd:[Novella] . ?Q149537_1 p:<author> [ ps:<author> wd:[Charles Dickens] ] . ?Q149537_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q149537_1 ?P577_5 WHERE { ?Q149537_1 wdt:P31 wd:Q149537 . ?Q149537_1 p:P50 [ ps:P50 wd:Q5686 ] . ?Q149537_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Novella] has <author> [Charles Dickens] and has the lowest <publication date>?",
        "Squall ID based": "which <Q149537> has <P50> <Q5686> and has the lowest <P577>?"
    },
    {
        "Question": "Was The Ring released before 2005?",
        "ID": "def43cde",
        "Entities": "Q212804:The Ring,2005:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[The Ring] has a <publication date> before 2005",
        "Sparklis ID based": "<Q212804> has a <P577> before 2005",
        "Sparql label based": "ASk { wd:[The Ring] p:<publication date> [ ps:<publication date> ?P577_8 ] . FILTER ( str(?P577_8) <= \"2005\" ) }",
        "Sparql ID based": "ASk { wd:Q212804 p:P577 [ ps:P577 ?P577_8 ] . FILTER ( str(?P577_8) <= \"2005\" ) }",
        "Squall label based": "whether [The Ring] has a <publication date> lesser or equal to 2005?",
        "Squall ID based": "whether <Q212804> has a <P577> lesser or equal to 2005?"
    },
    {
        "Question": "Who played Ellen Ripley in the first four Alien movies?",
        "ID": "4778a471",
        "Entities": "Q988925:Ellen Ripley,Q1990792:Alien,1:None,4:None",
        "Mintaka Answer": "Q102124:Sigourney Weaver",
        "Sparklis label based": "give me every human that is the <cast member> of something that has as a <part of the series> [Alien] and that has the lowest-to-highest <publication date> and that has as a <characters> [Ellen Ripley]",
        "Sparklis ID based": "give me every human that is the <P161> of something that has as a <P179> <Q103569> and that has the lowest-to-highest <P577> and that has as a <P674> <Q988925>",
        "Sparql label based": "SELECT DISTINCT ?P161_46 WHERE { ?Q11424_10 wdt:<instance of> wd:[Film] . ?Q11424_10 p:<part of the series> [ ps:<part of the series> wd:[Alien 2] ] . ?Q11424_10 p:<cast member> [ ps:<cast member> ?P161_46 ; n1:<character role> wd:[Ellen Ripley] ] . } ORDER BY ASC(?Q11424_10)",
        "Sparql ID based": "SELECT DISTINCT ?P161_46 WHERE { ?Q11424_10 wdt:P31 wd:Q11424 . ?Q11424_10 p:P179 [ ps:P179 wd:Q1990792 ] . ?Q11424_10 p:P161 [ ps:P161 ?P161_46 ; n1:P453 wd:Q988925 ] . } ORDER BY ASC(?Q11424_10)",
        "Squall label based": "what is a <cast member> at <character role> [Ellen Ripley] of the ascending [Film] that has <part of the series> [Alien 2]?",
        "Squall ID based": "what is a <P161> at <P453> <Q988925> of the ascending <Q11424> that has <P179> <Q1990792>?"
    },
    {
        "Question": "Did Lorde's album Pure Heroine come out before 2015?",
        "ID": "b8e68f14",
        "Entities": "Q56168874:Anger Among Allies: Audre Lorde's 1981 Keynote Admonishing the National Women's Studies Association,Q15042463:Pure Heroine,2015:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Pure Heroine] has a publication date and where the year of the <publication date> < 2015",
        "Sparklis ID based": "<Q15042463> has a publication date and where the year of the <P577> < 2015",
        "Sparql label based": "ASK { wd:[Pure Heroine] p:<publication date> [ ps:<publication date> ?P577_7 ] . filter ((year(?P577_7) < \"2015\"^^xsd:integer)) }",
        "Sparql ID based": "ASK { wd:Q15042463 p:P577 [ ps:P577 ?P577_7 ] . filter ((year(?P577_7) < \"2015\"^^xsd:integer)) }",
        "Squall label based": "whether [Pure Heroine] has a <publication date> whose year is lesser than 2015?",
        "Squall ID based": "whether <Q15042463> has a <P577> whose year is lesser than 2015?"
    },
    {
        "Question": "Which US president had the shortest physical height?",
        "ID": "9ee58c78",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11813:James Madison",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States]  and that has  the lowest-to-highest <height>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has the lowest-to-highest <P2048>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P2048_5 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_1 p:<height> [ ps:<height> ?P2048_5 ] . } ORDER BY ASC(?P2048_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P2048_5 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_1 p:P2048 [ ps:P2048 ?P2048_5 ] . } ORDER BY ASC(?P2048_5) LIMIT 1",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has the lowest <height>?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has the lowest <P2048>?"
    },
    {
        "Question": "How many U.S. states have a population under 1,000,000?",
        "ID": "54a1a41d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "6",
        "Sparklis label based": "give me every [U.S. state] that has \u26ac a <population> \u26ac\nand where the <population> < 100000",
        "Sparklis ID based": "give me every <Q35657> that has a <P1082> and where the <P1082> < 100000",
        "Sparql label based": "SELECT DISTINCT ?Q35657_7 WHERE { ?Q35657_7 wdt:<instance of> wd:[U.s. State] . ?Q35657_7 p:<population> [ ps:<population> ?P1082_143 ] . FILTER ( (?P1082_143 < \"100000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q35657_7 WHERE { ?Q35657_7 wdt:P31 wd:Q35657 . ?Q35657_7 p:P1082 [ ps:P1082 ?P1082_143 ] . FILTER ( (?P1082_143 < \"100000\"^^xsd:integer) ) }",
        "Squall label based": "which [U.s. State] has a <population> lesser than 100000?",
        "Squall ID based": "which <Q35657> has a <P1082> lesser than 100000?"
    },
    {
        "Question": "Which Harry Potter movie is the longest?",
        "ID": "d4a498d7",
        "Entities": "Q216930:Harry Potter, Odett Potter",
        "Mintaka Answer": "Q47209:Harry Potter and the Chamber of Secrets",
        "Sparklis label based": "give me every [film]\n\n    that has as a <part of the series> \u26ac [Harry Potter] \u26ac\n    and that has \u26ac the highest-to-lowest <duration>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3244512> and that has the highest-to-lowest <P2047>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ] . ?Q11424_1 p:<duration> [ ps:<duration> ?P2047_6 ] . } ORDER BY DESC(?P2047_6) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ] . ?Q11424_1 p:P2047 [ ps:P2047 ?P2047_6 ] . } ORDER BY DESC(?P2047_6) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Harry Potter Film Series] and has the highest <duration>?",
        "Squall ID based": "which <Q11424> has <P179> <Q216930> and has the highest <P2047>?"
    },
    {
        "Question": "Which year did J. K. Rowling start her plan for Harry Potter?",
        "ID": "717256ad",
        "Entities": "Q34660:J. K. Rowling, Q8337:Harry Potter",
        "Mintaka Answer": "1990",
        "Sparklis label based": "[Harry Potter 2] has  a <set in period>",
        "Sparklis ID based": "<Q8337> has a <set_in_period>",
        "Sparql label based": "SELECT DISTINCT ?P2408_7 WHERE { wd:[Harry Potter 2] p:<set in period> [ ps:<set in period> ?P2408_7 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P2408_7 WHERE { wd:Q8337 p:P2408 [ ps:P2408 ?P2408_7 ] . }",
        "Squall label based": "what is a <set in period> of [Harry Potter 2]?",
        "Squall ID based": "what is a <P2408> of <Q8337>?"
    },
    {
        "Question": "Which Matrix movie did Lilly Wachowski not direct?",
        "ID": "4001d7e5",
        "Entities": "Q83495:The Matrix,Q9544977:Lilly Wachowski",
        "Mintaka Answer": "Q80322391:The Matrix Resurrections",
        "Sparklis label based": "give me every [film] that is the part(s) of [The Matrix series] and that has as a <director> and not [Lilly Wachowski]",
        "Sparklis ID based": "give me every <Q11424> that is the part(s) of <Q1210827> and that has as a <P57> and not <Q9544977>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . wd:[The Matrix Series] p:<has part(s)> [ ps:<has part(s)> ?Q11424_1 ] . ?Q11424_1 p:<director> [ ps:<director> [] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<director> [ ps:<director> wd:[Lilly Wachowski] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . wd:Q1210827 p:P527 [ ps:P527 ?Q11424_1 ] . ?Q11424_1 p:P57 [ ps:P57 [] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P57 [ ps:P57 wd:Q9544977 ] . } ) }",
        "Squall label based": "which [Film] is a <has part(s)> of [The Matrix Series] and has a <director> and has not <director> [Lilly Wachowski]?",
        "Squall ID based": "which <Q11424> is a <P527> of <Q1210827> and has a <P57> and has not <P57> <Q9544977>?"
    },
    {
        "Question": "Who directed Tom's Cruise's third Mission: Impossible?",
        "ID": "c1dbaa01",
        "Entities": "Q37079:Tom Cruise,Q1356213:Mission: Impossible,3:None",
        "Mintaka Answer": "Q188137:J. J. Abrams",
        "Sparklis label based": "give me every [human] that has as an <occupation> [film] <director> and that is the <director> of a [film] that has as a <cast member> [Tom Cruise] and that is [Mission: Impossible III]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q11424> <P57> and that is the <P57> of a <Q11424> that has as a <P161> <Q37079> and that is <Q288173>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_14 WHERE { ?Q5_9 wdt:<instance of> wd:[Human] . ?Q5_9 p:<occupation> [ ps:<occupation> wd:[Film Director] ] . ?Q11424_14 wdt:<instance of> wd:[Film] . ?Q11424_14 p:<director> [ ps:<director> ?Q5_9 ] . ?Q11424_14 p:<cast member> [ ps:<cast member> wd:[Tom Cruise] ] . FILTER ( ?Q11424_14 = wd:[Mission: Impossible Iii] ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_14 WHERE { ?Q5_9 wdt:P31 wd:Q5 . ?Q5_9 p:P106 [ ps:P106 wd:Q2526255 ] . ?Q11424_14 wdt:P31 wd:Q11424 . ?Q11424_14 p:P57 [ ps:P57 ?Q5_9 ] . ?Q11424_14 p:P161 [ ps:P161 wd:Q37079 ] . FILTER ( ?Q11424_14 = wd:Q288173 ) }",
        "Squall label based": "which [Film] has <cast member> [Tom Cruise] and is [Mission: Impossible Iii] and has <director> a [Human] that has <occupation> [Film Director]?",
        "Squall ID based": "which <Q11424> has <P161> <Q37079> and is <Q288173> and has <P57> a <Q5> that has <P106> <Q2526255>?"
    },
    {
        "Question": "Which 2002 Steven Spielberg movie does not star Tom Cruise?",
        "ID": "63fd3dba",
        "Entities": "Q37079:Tom Cruise, Q8877:Steven Spielberg",
        "Mintaka Answer": "Q208108:Catch Me If You Can",
        "Sparklis label based": "give me every [film]\n\n    that has as a <director> \u26ac [Steven Spielberg] \u26ac\n    and that not has as a <cast member> \u26ac [Tom Cruise] \u26ac\n    and that has \u26ac a <publication date> \u26ac\n\nand where the year of the <publication date> = 2002",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q8877> and that not has as a <P161> <Q37079> and that has a <P577> and where the year of the <P577> = 2002",
        "Sparql label based": "SELECT DISTINCT ?Q11424_7 WHERE { ?Q11424_7 wdt:<instance of> wd:[Film] . ?Q11424_7 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . FILTER ( NOT EXISTS { ?Q11424_7 p:<cast member> [ ps:<cast member> wd:[Tom Cruise] ] . } ) ?Q11424_7 p:<publication date> [ ps:<publication date> ?P577_12 ] . FILTER ( (year(?P577_12) = \"2002\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_7 WHERE { ?Q11424_7 wdt:P31 wd:Q11424 . ?Q11424_7 p:P57 [ ps:P57 wd:Q8877 ] . FILTER ( NOT EXISTS { ?Q11424_7 p:P161 [ ps:P161 wd:Q37079 ] . } ) ?Q11424_7 p:P577 [ ps:P577 ?P577_12 ] . FILTER ( (year(?P577_12) = \"2002\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [Steven Spielberg] and has not <cast member> [Tom Cruise] and has a <publication date> whose year is 2002?",
        "Squall ID based": "which <Q11424> has <P57> <Q8877> and has not <P161> <Q37079> and has a <P577> whose year is 2002?"
    },
    {
        "Question": "What is the smallest country in North America by population?",
        "ID": "bc125929",
        "Entities": "Q49:North America",
        "Mintaka Answer": "Q763:Saint Kitts and Nevis",
        "Sparklis label based": "give me every [country] that has as a <continent> [North America] and that has the lowest-to-highest <population>",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q49> and that has the lowest-to-highest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<continent> [ ps:<continent> wd:[North America] ] . ?Q6256_1 p:<population> [ ps:<population> ?P1082_6 ] . } ORDER BY ASC(?P1082_6) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q6256_1 WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P30 [ ps:P30 wd:Q49 ] . ?Q6256_1 p:P1082 [ ps:P1082 ?P1082_6 ] . } ORDER BY ASC(?P1082_6) LIMIT 1",
        "Squall label based": "which [Country] has <continent> [North America] and has the lowest <population>?",
        "Squall ID based": "which <Q6256> has <P30> <Q49> and has the lowest <P1082>?"
    },
    {
        "Question": "Which female artist has won the most Grammy Awards?",
        "ID": "5b4060e2",
        "Entities": "Q41254:Grammy Award",
        "Mintaka Answer": "Q36153:Beyonc\u00e9",
        "Sparklis label based": "give me every [human] that has as a <sex or gender> [female] and that <award received> a [Grammy Award] and for each [human] give me the highest-to-lowest number of [Grammy Award]",
        "Sparklis ID based": "give me every <Q5> that has as a <P21> <Q6581072> and that <P166> a <Q41254> and for each <Q5> give me the highest-to-lowest number of <Q41254>",
        "Sparql label based": "select distinct ?q5_1 (count(distinct ?q41254_5) as ?number_of_109) where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . ?q41254_5 wdt:<instance of> wd:[Grammy Awards] . ?q5_1 p:<award received> [ ps:<award received> ?q41254_5 ] . } group by ?q5_1 order by desc(?number_of_109) limit 1",
        "Sparql ID based": "select distinct ?q5_1 (count(distinct ?q41254_5) as ?number_of_109) where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . ?q41254_5 wdt:P31 wd:Q41254 . ?q5_1 p:P166 [ ps:P166 ?q41254_5 ] . } group by ?q5_1 order by desc(?number_of_109) limit 1",
        "Squall label based": "which [Human] has <sex or gender> [Female] and has <award received> the most [Grammy Awards]?",
        "Squall ID based": "which <Q5> has <P21> <Q6581072> and has <P166> the most <Q41254>?"
    },
    {
        "Question": "How many albums have the Young Marble Giants released?",
        "ID": "020bcce9",
        "Entities": "Q2164036:Young Marble Giants",
        "Mintaka Answer": "Q5149116:Colossal Youth",
        "Sparklis label based": "give me every [album] that has as a <performer> [Young Marble Giants] and give me the number of [album]",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q2164036> and give me the number of <Q482994>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q482994_1) AS ?number_of_37) WHERE { ?Q482994_1 wdt:<instance of> wd:[Album] . ?Q482994_1 p:<performer> [ ps:<performer> wd:[Young Marble Giants] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q482994_1) AS ?number_of_37) WHERE { ?Q482994_1 wdt:P31 wd:Q482994 . ?Q482994_1 p:P175 [ ps:P175 wd:Q2164036 ] . }",
        "Squall label based": "how many [Album] has <performer> [Young Marble Giants]?",
        "Squall ID based": "how many <Q482994> has <P175> <Q2164036>?"
    },
    {
        "Question": "When did the NBA 2K series first come out?",
        "ID": "bd7fde20",
        "Entities": "Q155223:National Basketball Association",
        "Mintaka Answer": "1999",
        "Sparklis label based": "[NBA 2K] has a <publication date> and give me the year of <publication date>",
        "Sparklis ID based": "<Q2073660> has a <P577> and give me the year of <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_94 WHERE { wd:[Nba 2k] p:<publication date> [ ps:<publication date> ?P577_8 ] . BIND (year(?P577_8) AS ?expr_94) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_94 WHERE { wd:Q2073660 p:P577 [ ps:P577 ?P577_8 ] . BIND (year(?P577_8) AS ?expr_94) }",
        "Squall label based": "what is the year of a <publication date> of [Nba 2k]?",
        "Squall ID based": "what is the year of a <P577> of <Q2073660>?"
    },
    {
        "Question": "What was Tom Clancy's first book?",
        "ID": "36f5484e",
        "Entities": "Q105167:Tom Clancy,1:None",
        "Mintaka Answer": "Q5255573:The Hunt for Red October",
        "Sparklis label based": "give me every [written work] that has as an <author> [Tom Clancy] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q47461344> that has as an <P50> <Q105167> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q47461344_1 WHERE { ?Q47461344_1 wdt:<instance of> wd:[Written Work] . ?Q47461344_1 p:<author> [ ps:<author> wd:[Tom Clancy] ] . ?Q47461344_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q47461344_1 WHERE { ?Q47461344_1 wdt:P31 wd:Q47461344 . ?Q47461344_1 p:P50 [ ps:P50 wd:Q105167 ] . ?Q47461344_1 p:P577 [ ps:P577 ?P577_38 ] . } ORDER BY ASC(?P577_38) LIMIT 1",
        "Squall label based": "which [Written Work] has <author> [Tom Clancy] and has the lowest <publication date>?",
        "Squall ID based": "which <Q47461344> has <P50> <Q105167> and has the lowest <P577>?"
    },
    {
        "Question": "What is the third NBA team Kyrie Irving played for?",
        "ID": "f4b7b492",
        "Entities": "Q348618:Kyrie Irving, Q155223:National Basketball Association",
        "Mintaka Answer": "Q572134:Brooklyn Nets",
        "Sparklis label based": "[Kyrie Irving] has as a <league>  [National Basketball Association]  and has  a <member of sports team> with the highest-to-lowest <start time>",
        "Sparklis ID based": "<Q348618> has as a <P118> <Q155223> and has a <P54> with the highest-to-lowest <P580>",
        "Sparql label based": "SELECT DISTINCT ?P54_4 ?P580_107 WHERE {wd:[Kyrie Irving] p:<member of sports team> [ ps:<member of sports team> ?P54_4 ; n1:<start time> ?P580_107 ] . } ORDER BY DESC(?P580_107) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P54_4 ?P580_107 WHERE {wd:Q348618 p:P54 [ ps:P54 ?P54_4 ; n1:P580 ?P580_107 ] . } ORDER BY DESC(?P580_107) LIMIT 1",
        "Squall label based": "what is a <member of sports team> at the highest <start time> of [Kyrie Irving]?",
        "Squall ID based": "what is a <P54> at the highest <P580> of <Q348618>?"
    },
    {
        "Question": "Who died first, Biggie Smalls or Tupac Shakur?",
        "ID": "8e56bbb4",
        "Entities": "Q6107:Tupac Shakur, Q179157:The Notorious B.I.G.",
        "Mintaka Answer": "Q6107:Tupac Shakur",
        "Sparklis label based": "give me every [human]\n\n    that has \u26ac the highest-to-lowest <date of death> \u26ac\n    and\n        that is [Tupac Shakur]\n        or that is [The Notorious B.I.G.]",
        "Sparklis ID based": "give me every <Q5> that has the highest-to-lowest <P570> and that is <Q6107> or that is <Q179157>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Tupac Shakur] wd:[The Notorious B.i.g.] } ?x p:<date of death> [ ps:<date of death> ?date] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q6107 wd:Q179157 } ?x p:P570 [ ps:P570 ?date] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Tupac Shakur] or [The Notorious B.i.g.] and has the lowest <date of death>?",
        "Squall ID based": "what is <Q6107> or <Q179157> and has the lowest <P570>?"
    },
    {
        "Question": "Who plays for the Los Angeles Lakers and previously played for the Cavs?",
        "ID": "d1e90e1c",
        "Entities": "Q121783:Los Angeles Lakers, Q162990:Cleveland Cavaliers",
        "Mintaka Answer": "Q36159:LeBron James",
        "Sparklis label based": "give me every [human] that has as an <occupation>  [basketball player]  and that has as a <member of sports team>  [Los Angeles Lakers]  and not with an <end time>  and  [Cleveland Cavaliers]  and with an <end time>",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q3665646> and that has as a <P54> <Q121783> and not with an <P582> and <Q162990> and with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Basketball Player] ] . ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Los Angeles Lakers] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Los Angeles Lakers] ; n1:<end time> ?P582_9 ] . } ) ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Cleveland Cavaliers] ] . ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Cleveland Cavaliers] ; n1:<end time> ?P582_17 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q3665646 ] . ?Q5_1 p:P54 [ ps:P54 wd:Q121783 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P54 [ ps:P54 wd:Q121783 ; n1:P582 ?P582_9 ] . } ) ?Q5_1 p:P54 [ ps:P54 wd:Q162990 ] . ?Q5_1 p:P54 [ ps:P54 wd:Q162990 ; n1:P582 ?P582_17 ] . }",
        "Squall label based": "which [Human] has <occupation> [Basketball Player] and has <member of sports team> [Los Angeles Lakers] and [Cleveland Cavaliers] and  at a <end time> [Cleveland Cavaliers] and has not <member of sports team> at a <end time> [Los Angeles Lakers]?",
        "Squall ID based": "which <Q5> has <P106> <Q3665646> and has <P54> <Q121783> and <Q162990> and  at a <P582> <Q162990> and has not <P54> at a <P582> <Q121783>?"
    },
    {
        "Question": "Which album by Tupac came out in 1995?",
        "ID": "c3125b53",
        "Entities": "Q6107:Tupac Shakur",
        "Mintaka Answer": "Q637860:Me Against the World",
        "Sparklis label based": "give me every [album]\n        that has as a <performer> \u26ac [Tupac Shakur] \u26ac\n        and that has \u26ac a <publication date> \u26ac \n    and where the year of the <publication date> = 1995",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q6107> and that has a <P577> and where the year of the <P577> = 1995",
        "Sparql label based": "SELECT DISTINCT ?Q482994_7 WHERE { ?Q482994_7 wdt:<instance of> wd:[Album] . ?Q482994_7 p:<performer> [ ps:<performer> wd:[Tupac Shakur] ] . ?Q482994_7 p:<publication date> [ ps:<publication date> ?P577_12 ] . FILTER ( (year(?P577_12) = \"1995\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_7 WHERE { ?Q482994_7 wdt:P31 wd:Q482994 . ?Q482994_7 p:P175 [ ps:P175 wd:Q6107 ] . ?Q482994_7 p:P577 [ ps:P577 ?P577_12 ] . FILTER ( (year(?P577_12) = \"1995\"^^xsd:integer) ) }",
        "Squall label based": "which [Album] has <performer> [Tupac Shakur] and has a <publication date> whose year is 1995?",
        "Squall ID based": "which <Q482994> has <P175> <Q6107> and has a <P577> whose year is 1995?"
    },
    {
        "Question": "How many members are there in Little MIx?",
        "ID": "2bf78161",
        "Entities": "Q158419:Little Mix",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Little Mix] <has part(s)>\n    and not with a <work period (end)>",
        "Sparklis ID based": "<Q158419> <P527> and not with a <P2032>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Little Mix] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q158419 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Little Mix]?",
        "Squall ID based": "how many thing is a <P527> of <Q158419>?"
    },
    {
        "Question": "Which of the Great Lakes do not share a border with Indiana?",
        "ID": "4974321f",
        "Entities": "Q7347:Great Lakes, Q1415:Indiana",
        "Mintaka Answer": "Q1383:Lake Huron, Q1066:Lake Superior, Q1062:Lake Ontario, Q5492:Lake Erie",
        "Sparklis label based": "[Great Lakes] has  a part that not has as a <located in the administrative territorial entity>  [Indiana]",
        "Sparklis ID based": "<Q7347> has a part that not has as a <P131> <Q1415>",
        "Sparql label based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:<part of> [ ps:<part of> wd:[Great Lakes] ] . FILTER ( NOT EXISTS { ?P361_8 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Indiana] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P361_8 WHERE { ?P361_8 p:P361 [ ps:P361 wd:Q7347 ] . FILTER ( NOT EXISTS { ?P361_8 p:P131 [ ps:P131 wd:Q1415 ] . } ) }",
        "Squall label based": "what has <part of> [Great Lakes] and has not <located in the administrative territorial entity> [Indiana]?",
        "Squall ID based": "what has <P361> <Q7347> and has not <P131> <Q1415>?"
    },
    {
        "Question": "What species is Chewbacca?",
        "ID": "0c07333a",
        "Entities": "Q51803:Chewbacca",
        "Mintaka Answer": "Q1750900:Wookiee",
        "Sparklis label based": "[Chewbacca] is the instance of a [fictional extraterrestrial species]",
        "Sparklis ID based": "<Q51803> is the instance of a <Q99662445>",
        "Sparql label based": "SELECT DISTINCT ?Q99662445_9 WHERE { ?Q99662445_9 wdt:<instance of> wd:[Fictional Extraterrestrial Species] . wd:[Chewbacca] p:<instance of> [ ps:<instance of> ?Q99662445_9 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q99662445_9 WHERE { ?Q99662445_9 wdt:P31 wd:Q99662445 . wd:Q51803 p:P31 [ ps:P31 ?Q99662445_9 ] . }",
        "Squall label based": "which [Fictional Extraterrestrial Species] is a <instance of> of [Chewbacca]?",
        "Squall ID based": "which <Q99662445> is a <P31> of <Q51803>?"
    },
    {
        "Question": "Which is the newest Star Wars book?",
        "ID": "c3edc488",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "Q108841298:Star Wars Visions: Ronin",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [Star Wars 2]  and that has  the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q462> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Star Wars 2] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q462 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Star Wars 2] and has the highest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q462> and has the highest <P577>?"
    },
    {
        "Question": "What year did the Baftas start?",
        "ID": "c9622ac7",
        "Entities": "Q732997:British Academy Film Awards",
        "Mintaka Answer": "1947",
        "Sparklis label based": "[British Academy Film Awards] has a <start time> and give me the year of the <start time>",
        "Sparklis ID based": "<Q732997> has a <P580> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?P580_8 WHERE { wd:[British Academy Film Awards] p:<start time> [ ps:<start time> ?P580_8 ] . BIND (year(?P580_8) AS ?expr_94) }",
        "Sparql ID based": "SELECT DISTINCT ?P580_8 WHERE { wd:Q732997 p:P580 [ ps:P580 ?P580_8 ] . BIND (year(?P580_8) AS ?expr_94) }",
        "Squall label based": "what is a <start time> of [British Academy Film Awards] and has a year?",
        "Squall ID based": "what is a <P580> of <Q732997> and has a year?"
    },
    {
        "Question": "Which N64 Legend of Zelda game does not have the Master Sword?",
        "ID": "4545d939",
        "Entities": "Q12393:The Legend of Zelda, Q2203334:Master Sword, Q184839:Nintendo 64",
        "Mintaka Answer": "Q732943:The Legend of Zelda: Majora's Mask",
        "Sparklis label based": "give me every [video game]      that has as a <part of the series>  [The Legend of Zelda]      and that has as a <platform>  [Nintendo 64]      and that has  a <characters> that not has as a <uses>  [Master Sword]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q12393> and that has as a <P400> <Q184839> and that has a <P674> that not has as a <uses> <Q2203334>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_141 WHERE { ?Q7889_141 wdt:<instance of> wd:[Video Game] . ?Q7889_141 p:<part of the series> [ ps:<part of the series> wd:[The Legend Of Zelda] ] . ?Q7889_141 p:<platform> [ ps:<platform> wd:[Nintendo 64] ] . ?Q7889_141 p:<characters> [ ps:<characters> ?P674_146 ] . FILTER ( NOT EXISTS { ?P674_146 p:<uses> [ ps:<uses> wd:[Master Sword] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_141 WHERE { ?Q7889_141 wdt:P31 wd:Q7889 . ?Q7889_141 p:P179 [ ps:P179 wd:Q12393 ] . ?Q7889_141 p:P400 [ ps:P400 wd:Q184839 ] . ?Q7889_141 p:P674 [ ps:P674 ?P674_146 ] . FILTER ( NOT EXISTS { ?P674_146 p:P2283 [ ps:P2283 wd:Q2203334 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [The Legend Of Zelda] and has <platform> [Nintendo 64] and has a <characters> that has not <uses> [Master Sword]?",
        "Squall ID based": "which <Q7889> has <P179> <Q12393> and has <P400> <Q184839> and has a <P674> that has not <P2283> <Q2203334>?"
    },
    {
        "Question": "What is the smallest state in the U.S. by size?",
        "ID": "2cb1eb37",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q1387:Rhode Island",
        "Sparklis label based": "give me every [U.S. state] that has as a <country>  [United States of America]  and that has  the lowest-to-highest <area>",
        "Sparklis ID based": "give me every <Q35657> that has as a <P17> <Q30> and that has the lowest-to-highest <P2046>",
        "Sparql label based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q35657_1 p:<area> [ ps:<area> ?P2046_5 ] . } ORDER BY ASC(?P2046_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P17 [ ps:P17 wd:Q30 ] . ?Q35657_1 p:P2046 [ ps:P2046 ?P2046_5 ] . } ORDER BY ASC(?P2046_5) LIMIT 1",
        "Squall label based": "which [U.s. State] has <country> [United States Of America] and has the lowest <area>?",
        "Squall ID based": "which <Q35657> has <P17> <Q30> and has the lowest <P2046>?"
    },
    {
        "Question": "Which Lord of the Rings trilogy book does not feature Faramir in person?",
        "ID": "8edb9f23",
        "Entities": "Q15228:The Lord of the Rings, Q223468:Faramir",
        "Mintaka Answer": "Q208002:The Fellowship of the Ring",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Lord of the Rings]  that not has as a <characters>  Faramir",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> that not has as a <P674> Faramir",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228>?"
    },
    {
        "Question": "How many Naked Gun movies are there?",
        "ID": "b6b7191a",
        "Entities": "Q13476442:The Naked Gun",
        "Mintaka Answer": "Q832047:The Naked Gun: From the Files of Police Squad! ,Q502979:The Naked Gun 2\u00bd: The Smell of Fear,Q385309:Naked Gun 33\u2153: The Final Insult",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Naked Gun] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q13476442> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:<instance of> wd:[Film] . ?Q11424_159 p:<part of the series> [ ps:<part of the series> wd:[The Naked Gun] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_159 WHERE { ?Q11424_159 wdt:P31 wd:Q11424 . ?Q11424_159 p:P179 [ ps:P179 wd:Q13476442 ] . }",
        "Squall label based": "which [Film] has <part of the series> [The Naked Gun]?",
        "Squall ID based": "which <Q11424> has <P179> <Q13476442>?"
    },
    {
        "Question": "What Nintendo Console sold the fewest units?",
        "ID": "7a61b4fc",
        "Entities": "Q8093:Nintendo, Q8076:video game console",
        "Mintaka Answer": "Q56942:Wii U",
        "Sparklis label based": "[Nintendo] is the <creator> of something that is the <subclass of> [home video game console]  and that has  the lowest-to-highest <units sold>",
        "Sparklis ID based": "<Q8093> is the <P170> of something that is the <P279> <Q17589470> and that has the lowest-to-highest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?P279_8 ?P2664_12 WHERE { ?P279_8 p:<creator> [ ps:<creator> wd:[Nintendo] ] . ?P279_8 p:<subclass of> [ ps:<subclass of> wd:[Home Video Game Console] ] . ?P279_8 p:<units sold> [ ps:<units sold> ?P2664_12 ] . } ORDER BY ASC(?P2664_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P279_8 ?P2664_12 WHERE { ?P279_8 p:P170 [ ps:P170 wd:Q8093 ] . ?P279_8 p:P279 [ ps:P279 wd:Q17589470 ] . ?P279_8 p:P2664 [ ps:P2664 ?P2664_12 ] . } ORDER BY ASC(?P2664_12) LIMIT 1",
        "Squall label based": "what has <creator> [Nintendo] and has <subclass of> [Home Video Game Console] and has the lowest <units sold>?",
        "Squall ID based": "what has <P170> <Q8093> and has <P279> <Q17589470> and has the lowest <P2664>?"
    },
    {
        "Question": "Was X-COM: Terror from the Deep released before X-COM: Interceptor?",
        "ID": "682d164a",
        "Entities": "Q675511:X-COM: Interceptor, Q966207:X-COM: Terror from the Deep",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[X-COM: Interceptor] has \u26ac a <publication date> \u26ac\nand [X-COM: Terror from the Deep] has \u26ac a <publication date> \u26ac\nand give me the year of the 1st <publication date>\nand give me the year of the 2nd <publication date>",
        "Sparklis ID based": "<Q675511> has a <P577> and <Q966207> has a <P577> and give me the year of the 1st <P577> and give me the year of the 2nd <P577>",
        "Sparql label based": "ASK { wd:[X-com: Interceptor] p:<publication date> [ ps:<publication date> ?date1 ] . wd:[X-com: Terror From The Deep] p:<publication date> [ ps:<publication date> ?date2 ] . FILTER (?date1 < ?date2) }",
        "Sparql ID based": "ASK { wd:Q675511 p:P577 [ ps:P577 ?date1 ] . wd:Q966207 p:P577 [ ps:P577 ?date2 ] . FILTER (?date1 < ?date2) }",
        "Squall label based": "whether [X-com: Interceptor] has a <publication date> lesser than a <publication date> of [X-com: Terror From The Deep]?",
        "Squall ID based": "whether <Q675511> has a <P577> lesser than a <P577> of <Q966207>?"
    },
    {
        "Question": "Who is a member of both Tool and A Perfect Circle?",
        "ID": "928b1bdb",
        "Entities": "Q184827:Tool,Q300519:A Perfect Circle",
        "Mintaka Answer": "Q311621:Maynard James Keenan",
        "Sparklis label based": "give me every [human] that is the <member of> [A Perfect Circle] and that is the <member of> [Tool]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q300519> and that is the <P463> <Q184827>",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<member of> [ ps:<member of> wd:[A Perfect Circle] ] . ?Q5_8 p:<member of> [ ps:<member of> wd:[Tool] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P463 [ ps:P463 wd:Q300519 ] . ?Q5_8 p:P463 [ ps:P463 wd:Q184827 ] . }",
        "Squall label based": "which [Human] has <member of> [A Perfect Circle] and [Tool]?",
        "Squall ID based": "which <Q5> has <P463> <Q300519> and <Q184827>?"
    },
    {
        "Question": "Who played Harry Potter?",
        "ID": "a09893ab",
        "Entities": "Q3244512:Harry Potter",
        "Mintaka Answer": "Q38119:Daniel Radcliffe",
        "Sparklis label based": "give me every [human] that is the <cast member> with <character role> [Harry Potter] of a [film]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> with <P453> <Q3244512> of a <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q5_125 WHERE { ?Q5_125 wdt:<instance of> wd:[Human] . ?Q11424_117 wdt:<instance of> wd:[Film] . ?Q11424_117 p:<cast member> [ ps:<cast member> ?Q5_125 ; n1:<character role> wd:[Harry Potter] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_125 WHERE { ?Q5_125 wdt:P31 wd:Q5 . ?Q11424_117 wdt:P31 wd:Q11424 . ?Q11424_117 p:P161 [ ps:P161 ?Q5_125 ; n1:P453 wd:Q3244512 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <character role> [Harry Potter] of a [Film]?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q3244512> of a <Q11424>?"
    },
    {
        "Question": "What house at Hogwarts does Harry belong to?",
        "ID": "1399e8b7",
        "Entities": "Q174097:Hogwarts, Q3244512:Harry Potter",
        "Mintaka Answer": "Q842408:Gryffindor",
        "Sparklis label based": "give me every [Hogwarts House] that has  a <present in work> that is <named after>  [Harry Potter]  and that has as a <characters>  [Harry Potter]",
        "Sparklis ID based": "give me every <Q933971> that has a <P1441> that is <P138> <Q3244512> and that has as a <P674> <Q3244512>",
        "Sparql label based": "SELECT DISTINCT ?Q933971_1 WHERE { ?Q933971_1 wdt:<instance of> wd:[Hogwarts House] . ?Q933971_1 p:<present in work> [ ps:<present in work> ?P1441_38 ] . ?P1441_38 p:<named after> [ ps:<named after> wd:[Harry Potter] ] . ?P1441_38 p:<characters> [ ps:<characters> wd:[Harry Potter] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q933971_1 WHERE { ?Q933971_1 wdt:P31 wd:Q933971 . ?Q933971_1 p:P1441 [ ps:P1441 ?P1441_38 ] . ?P1441_38 p:P138 [ ps:P138 wd:Q3244512 ] . ?P1441_38 p:P674 [ ps:P674 wd:Q3244512 ] . }",
        "Squall label based": "which [Hogwarts House] has a <present in work> that has <named after> [Harry Potter] and has <characters> [Harry Potter]?",
        "Squall ID based": "which <Q933971> has a <P1441> that has <P138> <Q3244512> and has <P674> <Q3244512>?"
    },
    {
        "Question": "How many Men In Black movies are there?",
        "ID": "1e6a05d0",
        "Entities": "Q51416:Men in Black",
        "Mintaka Answer": "Q51416:Men in Black,Q156597:Men in Black II,Q327713:Men in Black 3,Q55439830:Men in Black: International",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Men in Black] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3305670> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Men In Black] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q3305670 ] . }",
        "Squall label based": "which [Film] has <part of the series> [Men In Black]?",
        "Squall ID based": "which <Q11424> has <P179> <Q3305670>?"
    },
    {
        "Question": "Who won Super Bowl XXXV1?",
        "ID": "21e395f5",
        "Entities": "Q1073479:Super Bowl XXXVI",
        "Mintaka Answer": "Q193390:New England Patriots",
        "Sparklis label based": "give me every [American football team] that is the <winner> of [Super Bowl XXXVI]",
        "Sparklis ID based": "give me every <Q17156793> that is the <P1346> of <Q1073479>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . wd:[Super Bowl Xxxvi] p:<winner> [ ps:<winner> ?Q17156793_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . wd:Q1073479 p:P1346 [ ps:P1346 ?Q17156793_1 ] . }",
        "Squall label based": "which [American Football Team] is a <winner> of [Super Bowl Xxxvi]?",
        "Squall ID based": "which <Q17156793> is a <P1346> of <Q1073479>?"
    },
    {
        "Question": "Which album by Tupac came out in 1996?",
        "ID": "1531e431",
        "Entities": "Q6107:Tupac Shakur",
        "Mintaka Answer": "Q498054:All Eyez on Me",
        "Sparklis label based": "give me every [album]\n        that has as a <performer> \u26ac [Tupac Shakur] \u26ac\n        and that has \u26ac a [publication date] \u26ac \n    and where the year of the <publication date> = 1996",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q6107> and that has a [publication_date] and where the year of the <P577> = 1996",
        "Sparql label based": "SELECT DISTINCT ?Q482994_10 WHERE { ?Q482994_10 wdt:<instance of> wd:[Album] . ?Q482994_10 p:<performer> [ ps:<performer> wd:[Tupac Shakur] ] . ?Q482994_10 p:<publication date> [ ps:<publication date> ?P577_15 ] . FILTER ( (year(?P577_15) = \"1996\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_10 WHERE { ?Q482994_10 wdt:P31 wd:Q482994 . ?Q482994_10 p:P175 [ ps:P175 wd:Q6107 ] . ?Q482994_10 p:P577 [ ps:P577 ?P577_15 ] . FILTER ( (year(?P577_15) = \"1996\"^^xsd:integer) ) }",
        "Squall label based": "which [Album] has <performer> [Tupac Shakur] and has a <publication date> whose year is 1996?",
        "Squall ID based": "which <Q482994> has <P175> <Q6107> and has a <P577> whose year is 1996?"
    },
    {
        "Question": "Which Iron Man movie was not directed by Jon Favreau?",
        "ID": "acfa79ca",
        "Entities": "Q16642701:Iron Man,Q295964:Jon Favreau",
        "Mintaka Answer": "Q209538:Iron Man 3",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Iron Man 2 2] and that not has as a <director> [Jon Favreau]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q16642701> and that not has as a <P57> <Q295964>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:<instance of> wd:[Film] . ?Q11424_311 p:<part of the series> [ ps:<part of the series> wd:[Iron Man 2 2] ] . FILTER ( NOT EXISTS { ?Q11424_311 p:<director> [ ps:<director> wd:[Jon Favreau] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_311 WHERE { ?Q11424_311 wdt:P31 wd:Q11424 . ?Q11424_311 p:P179 [ ps:P179 wd:Q16642701 ] . FILTER ( NOT EXISTS { ?Q11424_311 p:P57 [ ps:P57 wd:Q295964 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Iron Man 2 2] and has not <director> [Jon Favreau]?",
        "Squall ID based": "which <Q11424> has <P179> <Q16642701> and has not <P57> <Q295964>?"
    },
    {
        "Question": "Who was born in 1963 and won six championships in the NBA?",
        "ID": "a8aff109",
        "Entities": "Q842375:NBA Finals,1963:None,6:None",
        "Mintaka Answer": "Q41421:Michael Jordan",
        "Sparklis label based": "give me every [human]\n        that has \u26ac a <date of birth> \u26ac\n        and that <award received> with a <point in time> \u26ac [NBA Most Valuable Player Award] \u26ac\n    and give me the year of the <date of birth> that is 1963\n    and for each [human]\n        give me the number higher or equal to 6 of <point in time>",
        "Sparklis ID based": "give me every <Q5> that has a <P569> and that <P166> with a <P585> <Q222047> and give me the year of the <P569> that is 1963 and for each <Q5> give me the number higher or equal to 6 of <P585>",
        "Sparql label based": "SELECT DISTINCT ?Q5_143 WHERE { ?Q5_143 wdt:<instance of> wd:[Human] . ?Q5_143 p:<date of birth> [ ps:<date of birth> ?P569_8 ] . ?Q5_143 p:<award received> [ n1:<point in time> ?P585_241 ; ps:<award received> wd:[Nba Most Valuable Player Award] ] . BIND (year(?P569_8) AS ?expr_135) FILTER ( ?expr_135 = \"1963\"^^xsd:integer ) } GROUP BY ?Q5_143 HAVING ( xsd:double(str(COUNT(DISTINCT ?P585_241))) >= 6 )",
        "Sparql ID based": "SELECT DISTINCT ?Q5_143 WHERE { ?Q5_143 wdt:P31 wd:Q5 . ?Q5_143 p:P569 [ ps:P569 ?P569_8 ] . ?Q5_143 p:P166 [ n1:P585 ?P585_241 ; ps:P166 wd:Q222047 ] . BIND (year(?P569_8) AS ?expr_135) FILTER ( ?expr_135 = \"1963\"^^xsd:integer ) } GROUP BY ?Q5_143 HAVING ( xsd:double(str(COUNT(DISTINCT ?P585_241))) >= 6 )",
        "Squall label based": "('The above query is syntactically wrong please try with corrected syntax!', b'Dcg.SyntaxError(1, 256, _)\\n')",
        "Squall ID based": "('The above query is syntactically wrong please try with corrected syntax!', b'Dcg.SyntaxError(1, 256, _)\\n')"
    },
    {
        "Question": "Which US city is nicknamed the Big Apple?",
        "ID": "d2efb604",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q60:New York City",
        "Sparklis label based": "give me every [city in the United States] that has as a <nickname>  [Big Apple]  and that has as a <country>  [United States of America]",
        "Sparklis ID based": "give me every <Q1093829> that has as a <P1449> <Q14435> and that has as a <P17> <Q30>",
        "Sparql label based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:<instance of> wd:[City In The United States] . ?Q1093829_1 p:<nickname> [ ps:<nickname> \"Big Apple\"@de ] . ?Q1093829_1 p:<country> [ ps:<country> wd:[United States Of America] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:P31 wd:Q1093829 . ?Q1093829_1 p:P1449 [ ps:P1449 \"Big Apple\"@de ] . ?Q1093829_1 p:P17 [ ps:P17 wd:Q30 ] . }",
        "Squall label based": "which [City In The United States] has <nickname> \"Big Apple\"@de and has <country> [United States Of America]?",
        "Squall ID based": "which <Q1093829> has <P1449> \"Big Apple\"@de and has <P17> <Q30>?"
    },
    {
        "Question": "Who was the 35th president of the USA?",
        "ID": "d7aaa764",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q9696:John F. Kennedy",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States] with <series ordinal> 35",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 35",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"35\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"35\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"35\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"35\" <Q11696>?"
    },
    {
        "Question": "Is J.J. Watt older than Deshaun Watson?",
        "ID": "70c56f29",
        "Entities": "Q18159104:Deshaun Watson, Q1097511:J. J. Watt",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "Deshaun Watson has  a <date of birth>  and [J. J. Watt] has  a <date of birth>  and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "Deshaun Watson has a <P569> and <Q1097511> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Deshaun Watson] p:<date of birth> [ ps:<date of birth> ?date1 ] . wd:[J. J. Watt] p:<date of birth> [ ps:<date of birth> ?date2 ] . FILTER (?date1 > ?date2) }",
        "Sparql ID based": "ASK { wd:Q18159104 p:P569 [ ps:P569 ?date1 ] . wd:Q1097511 p:P569 [ ps:P569 ?date2 ] . FILTER (?date1 > ?date2) }",
        "Squall label based": "whether [Deshaun Watson] has a <date of birth> greater than a <date of birth> of [J. J. Watt]?",
        "Squall ID based": "whether <Q18159104> has a <P569> greater than a <P569> of <Q1097511>?"
    },
    {
        "Question": "What is the tallest mountain in New Jersey?",
        "ID": "c880549b",
        "Entities": "Q1408:New Jersey",
        "Mintaka Answer": "Q1587207:High Point",
        "Sparklis label based": "give me every [mountain]\n\n    that has \u26ac a <located in the administrative territorial entity> that has as a <located in the administrative territorial entity> \u26ac [New Jersey] \u26ac \u26ac\n    and that has \u26ac the highest-to-lowest <elevation above sea level>",
        "Sparklis ID based": "give me every <Q8502> that has a <P131> that has as a <P131> <Q1408> and that has the highest-to-lowest <P2044>",
        "Sparql label based": "SELECT DISTINCT ?Q8502_20 WHERE { ?Q8502_20 wdt:<instance of> wd:[Mountain] . ?Q8502_20 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_8 ] . ?P131_8 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[New Jersey] ] . ?Q8502_20 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_12 ] . } ORDER BY DESC(?P2044_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_20 WHERE { ?Q8502_20 wdt:P31 wd:Q8502 . ?Q8502_20 p:P131 [ ps:P131 ?P131_8 ] . ?P131_8 p:P131 [ ps:P131 wd:Q1408 ] . ?Q8502_20 p:P2044 [ ps:P2044 ?P2044_12 ] . } ORDER BY DESC(?P2044_12) LIMIT 1",
        "Squall label based": "which [Mountain] has the highest <elevation above sea level> and has a <located in the administrative territorial entity> that has <located in the administrative territorial entity> [New Jersey]?",
        "Squall ID based": "which <Q8502> has the highest <P2044> and has a <P131> that has <P131> <Q1408>?"
    },
    {
        "Question": "Which Sonic game did Knuckles not appear in?",
        "ID": "10ba7a74",
        "Entities": "Q904189:Knuckles the Echidna",
        "Mintaka Answer": "Q37123:Sonic the Hedgehog, Q35627:Sonic the Hedgehog 2",
        "Sparklis label based": "give me every [video game]      that has as a <part of the series>  [Sonic the Hedgehog]      and that not has as a <characters>  [Knuckles the Echidna]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q22974163> and that not has as a <P674> <Q904189>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Sonic The Hedgehog] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Knuckles The Echidna] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q22974163 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q904189 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Sonic The Hedgehog] and has not <characters> [Knuckles The Echidna]?",
        "Squall ID based": "which <Q7889> has <P179> <Q22974163> and has not <P674> <Q904189>?"
    },
    {
        "Question": "What is the longest river in China?",
        "ID": "48095a73",
        "Entities": "Q148:People's Republic of China",
        "Mintaka Answer": "Q5413:Yangtze",
        "Sparklis label based": "give me every [river] that has as a <country>  [People's Republic of China]  and that has  the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a <P17> <Q148> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<country> [ ps:<country> wd:[People's Republic Of China] ] . ?Q4022_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P17 [ ps:P17 wd:Q148 ] . ?Q4022_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [River] has <country> [People's Republic Of China] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q148> and has the highest <P2043>?"
    },
    {
        "Question": "Which Sonic game did Knuckles not appear in?",
        "ID": "10ba7a74",
        "Entities": "Q904189:Knuckles the Echidna",
        "Mintaka Answer": "Q37123:Sonic the Hedgehog, Q35627:Sonic the Hedgehog 2",
        "Sparklis label based": "give me every [video game]      that not has as a <characters>  [Knuckles the Echidna]      and that has as a <part of the series>  [Sonic the Hedgehog 5]",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P674> <Q904189> and that has as a <P179> <Q1046812>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Sonic The Hedgehog 5] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Knuckles The Echidna] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q1046812 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q904189 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Sonic The Hedgehog 5] and has not <characters> [Knuckles The Echidna]?",
        "Squall ID based": "which <Q7889> has <P179> <Q1046812> and has not <P674> <Q904189>?"
    },
    {
        "Question": "Which Mario Kart game did Bowser not appear in?",
        "ID": "13c86e20",
        "Entities": "Q188196:Mario Kart, Q845864:Bowser",
        "Mintaka Answer": "[Mario Kart]   <has part(s)> that not has as a <characters>  [Bowser]",
        "Sparklis label based": "[Mario Kart]   <has part(s)> that not has as a <characters>  [Bowser]",
        "Sparklis ID based": "<Q188196> <P527> that not has as a <P674> <Q845864>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 WHERE { wd:[Mario Kart] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . FILTER ( NOT EXISTS { ?P527_8 p:<characters> [ ps:<characters> wd:[Bowser] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 WHERE { wd:Q188196 p:P527 [ ps:P527 ?P527_8 ] . FILTER ( NOT EXISTS { ?P527_8 p:P674 [ ps:P674 wd:Q845864 ] . } ) }",
        "Squall label based": "what is a <has part(s)> of [Mario Kart] and has not <characters> [Bowser]?",
        "Squall ID based": "what is a <P527> of <Q188196> and has not <P674> <Q845864>?"
    },
    {
        "Question": "Did Twilight come out before 1995?",
        "ID": "a3008693",
        "Entities": "Q160071:Twilight,1995:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Twilight 2] has \u26ac a <publication date> \u26ac\nand where the year of the <publication date> < 1995",
        "Sparklis ID based": "<Q160071> has a <P577> and where the year of the <P577> < 1995",
        "Sparql label based": "ASk WHERE { wd:[Twilight 2] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER ( (year(?P577_7) < \"1995\"^^xsd:integer) ) }",
        "Sparql ID based": "ASk WHERE { wd:Q160071 p:P577 [ ps:P577 ?P577_7 ] . FILTER ( (year(?P577_7) < \"1995\"^^xsd:integer) ) }",
        "Squall label based": "whether [Twilight 2] has a <publication date> whose year is lesser than 1995?",
        "Squall ID based": "whether <Q160071> has a <P577> whose year is lesser than 1995?"
    },
    {
        "Question": "Which country gifted the Statue of Liberty to the USA?",
        "ID": "fb544ce5",
        "Entities": "Q9202:Statue of Liberty, Q30:United States of America",
        "Mintaka Answer": "Q142:France",
        "Sparklis label based": "[Statue of Liberty] has as a <country>  United States of America  and has  a <location>",
        "Sparklis ID based": "<Q9202> has as a <P17> United States of America and has a <P276>",
        "Sparql label based": "SELECT DISTINCT ?P276_4 WHERE { wd:[Statue Of Liberty] p:<location> [ ps:<location> ?P276_4 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P276_4 WHERE { wd:Q9202 p:P276 [ ps:P276 ?P276_4 ] . } LIMIT 1",
        "Squall label based": "what is a <location> of [Statue Of Liberty]?",
        "Squall ID based": "what is a <P276> of <Q9202>?"
    },
    {
        "Question": "Which Warcraft game didn't have Thrall in it?",
        "ID": "d6287c00",
        "Entities": "Q815739:Warcraft, Q820088:Thrall",
        "Mintaka Answer": "Q741716:Warcraft II: Tides of Darkness",
        "Sparklis label based": "give me every [video game]      that has as a <part of the series>  [Warcraft]      and that not has as a <characters>  [Thrall]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q815739> and that not has as a <P674> <Q820088>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Warcraft] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Thrall] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q815739 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q820088 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Warcraft] and has not <characters> [Thrall]?",
        "Squall ID based": "which <Q7889> has <P179> <Q815739> and has not <P674> <Q820088>?"
    },
    {
        "Question": "What is the shortest road in Arizona?",
        "ID": "d8b2e13e",
        "Entities": "Q816:Arizona",
        "Mintaka Answer": "Q815106:Arizona State Route 24",
        "Sparklis label based": "give me every [road] that has as a <located in the administrative territorial entity>  [Arizona]  and that has  the lowest-to-highest <length>",
        "Sparklis ID based": "give me every <Q34442> that has as a <P131> <Q816> and that has the lowest-to-highest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q34442_1 ?P2043_5 WHERE { ?Q34442_1 wdt:<instance of> wd:[Road] . ?Q34442_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Arizona] ] . ?Q34442_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY ASC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q34442_1 ?P2043_5 WHERE { ?Q34442_1 wdt:P31 wd:Q34442 . ?Q34442_1 p:P131 [ ps:P131 wd:Q816 ] . ?Q34442_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY ASC(?P2043_5) LIMIT 1",
        "Squall label based": "which [Road] has <located in the administrative territorial entity> [Arizona] and has the lowest <length>?",
        "Squall ID based": "which <Q34442> has <P131> <Q816> and has the lowest <P2043>?"
    },
    {
        "Question": "When did the first Game of Thrones book come out?",
        "ID": "cafc721d",
        "Entities": "Q45875:A Song of Ice and Fire,1:None",
        "Mintaka Answer": "1996",
        "Sparklis label based": "give me every [literary work]\n\n    that has as a <part of the series> \u26ac [A Song of Ice and Fire] \u26ac\n    and that has \u26ac the lowest-to-highest <publication date> \u26ac\n\nand give me the year of the <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q45875> and that has the lowest-to-highest <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_227 WHERE { ?Q7725634_95 wdt:<instance of> wd:[Literary Work] . ?Q7725634_95 p:<part of the series> [ ps:<part of the series> wd:[A Song Of Ice And Fire] ] . ?Q7725634_95 p:<publication date> [ ps:<publication date> ?P577_100 ] . BIND (year(?P577_100) AS ?expr_227) } ORDER BY ASC(?P577_100) limit 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_227 WHERE { ?Q7725634_95 wdt:P31 wd:Q7725634 . ?Q7725634_95 p:P179 [ ps:P179 wd:Q45875 ] . ?Q7725634_95 p:P577 [ ps:P577 ?P577_100 ] . BIND (year(?P577_100) AS ?expr_227) } ORDER BY ASC(?P577_100) limit 1",
        "Squall label based": "what is the year of the lowest <publication date> of a [Literary Work] that has <part of the series> [A Song Of Ice And Fire]?",
        "Squall ID based": "what is the year of the lowest <P577> of a <Q7725634> that has <P179> <Q45875>?"
    },
    {
        "Question": "What is the fourth Harry Potter book called?",
        "ID": "b9a3e3d4",
        "Entities": "Q8337:Harry Potter,4:None",
        "Mintaka Answer": "Q46751:Harry Potter and the Goblet of Fire",
        "Sparklis label based": "give me every [literary work] that has as a part of the series with <series ordinal> 4 [Harry Potter 2]",
        "Sparklis ID based": "give me every <Q7725634> that has as a part of the series with <P1545> 4 <Q8337>",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ n1:<series ordinal> \"4\" ; ps:<part of the series> wd:[Harry Potter 2] ] . }",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ n1:P1545 \"4\" ; ps:P179 wd:Q8337 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"4\" [Harry Potter 2]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"4\" <Q8337>?"
    },
    {
        "Question": "Did the original Ocean's Eleven come out after 1965?",
        "ID": "c68c2fef",
        "Entities": "Q205447:Ocean's Eleven,1965:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Ocean's Eleven] has a <publication date> and give me the year of the <publication date> >1965",
        "Sparklis ID based": "<Q205447> has a <P577> and give me the year of the <P577> >1965",
        "Sparql label based": "ASK WHERE { wd:[Ocean's Eleven] p:<publication date> [ ps:<publication date> ?P577_7 ] . BIND ((year(?P577_7) > \"1965\"^^xsd:integer) AS ?expr_92) }",
        "Sparql ID based": "ASK WHERE { wd:Q205447 p:P577 [ ps:P577 ?P577_7 ] . BIND ((year(?P577_7) > \"1965\"^^xsd:integer) AS ?expr_92) }",
        "Squall label based": "whether [Ocean's Eleven] has a <publication date> whose year is greater than 1965?",
        "Squall ID based": "whether <Q205447> has a <P577> whose year is greater than 1965?"
    },
    {
        "Question": "What team won the first Super Bowl?",
        "ID": "a5a3bab2",
        "Entities": "Q32096:Super Bowl,1:None",
        "Mintaka Answer": "Q213837:Green Bay Packers",
        "Sparklis label based": "give me every [American football team] that is the <winner> of something that is the <instance of> [Super Bowl] and that has the lowest-to-highest <point in time>",
        "Sparklis ID based": "give me every <Q17156793> that is the <P1346> of something that is the <P31> <Q32096> and that has the lowest-to-highest <P585>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:<instance of> wd:[American Football Team] .?P31_45 p:<winner> [ ps:<winner> ?Q17156793_8 ] .?P31_45 p:<instance of> [ ps:<instance of> wd:[Super Bowl] ] .?P31_45 p:<point in time> [ ps:<point in time> ?P585_49 ] . }ORDER BY ASC(?P585_49) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:P31 wd:Q17156793 .?P31_45 p:P1346 [ ps:P1346 ?Q17156793_8 ] .?P31_45 p:P31 [ ps:P31 wd:Q32096 ] .?P31_45 p:P585 [ ps:P585 ?P585_49 ] . }ORDER BY ASC(?P585_49) LIMIT 1",
        "Squall label based": "which [American Football Team] is a <winner> of a thing that has <instance of> [Super Bowl] and has the lowest <point in time>?",
        "Squall ID based": "which <Q17156793> is a <P1346> of a thing that has <P31> <Q32096> and has the lowest <P585>?"
    },
    {
        "Question": "In what year did Ellen de Generes and Portia de Rossi get married?",
        "ID": "7a08eb31",
        "Entities": "Q483325:Ellen DeGeneres, Q215366:Portia de Rossi",
        "Mintaka Answer": "2008",
        "Sparklis label based": "[Ellen DeGeneres] has as a <spouse> with a <start time>  [Portia de Rossi]  and give me the year of the <start time>",
        "Sparklis ID based": "<Q483325> has as a <P26> with a <P580> <Q215366> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[Ellen Degeneres] p:<spouse> [ n1:<start time> ?P580_4 ; ps:<spouse> wd:[Portia De Rossi] ] . BIND (year(?P580_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q483325 p:P26 [ n1:P580 ?P580_4 ; ps:P26 wd:Q215366 ] . BIND (year(?P580_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a thing at which <start time> [Ellen Degeneres] has <spouse> [Portia De Rossi]?",
        "Squall ID based": "what is the year of a thing at which <P580> <Q483325> has <P26> <Q215366>?"
    },
    {
        "Question": "Which member of the Red Hot Chili Peppers appeared in Point Break?",
        "ID": "67d16c40",
        "Entities": "Q10708:Red Hot Chili Peppers, Q1146552:Point Break",
        "Mintaka Answer": "Q204751:Anthony Kiedis",
        "Sparklis label based": "give me every [human] that is the part(s) of [Red Hot Chili Peppers]  and that is the cast <member of> [Point Break]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q10708> and that is the cast <P463> <Q1146552>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Red Hot Chili Peppers] p:<has part(s)> [ ps:<has part(s)> ?Q5_1 ] . wd:[Point Break] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q10708 p:P527 [ ps:P527 ?Q5_1 ] . wd:Q1146552 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [Red Hot Chili Peppers] and is a <cast member> of [Point Break]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q10708> and is a <P161> of <Q1146552>?"
    },
    {
        "Question": "Which movie did John Williams last compose for?",
        "ID": "7f625787",
        "Entities": "Q131285:John Williams",
        "Mintaka Answer": "Q20977110:Star Wars Episode IX: The Rise of Skywalker",
        "Sparklis label based": "give me every [film] that has as a <composer> [John Williams] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P86> <Q131285> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_113 ?P577_150 WHERE { ?Q11424_113 wdt:<instance of> wd:[Film] . ?Q11424_113 p:<composer> [ ps:<composer> wd:[John Williams] ] . ?Q11424_113 p:<publication date> [ ps:<publication date> ?P577_150 ] . } ORDER BY DESC(?P577_150) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_113 ?P577_150 WHERE { ?Q11424_113 wdt:P31 wd:Q11424 . ?Q11424_113 p:P86 [ ps:P86 wd:Q131285 ] . ?Q11424_113 p:P577 [ ps:P577 ?P577_150 ] . } ORDER BY DESC(?P577_150) LIMIT 1",
        "Squall label based": "which [Film] has <composer> [John Williams] and has the highest <publication date>?",
        "Squall ID based": "which <Q11424> has <P86> <Q131285> and has the highest <P577>?"
    },
    {
        "Question": "When was Obama first elected?",
        "ID": "c42f0bc2",
        "Entities": "Q76:Barack Obama",
        "Mintaka Answer": "2008",
        "Sparklis label based": "[Barack Obama] has as a <position held> with a <start time> \u26ac [President of the United States] \u26ac\nand give me the year of the <start time>",
        "Sparklis ID based": "<Q76> has as a <P39> with a <P580> <Q11696> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?P580_4 WHERE { wd:[Barack Obama] p:<position held> [ n2:<start time> ?P580_4 ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P580_4 WHERE { wd:Q76 p:P39 [ n2:P580 ?P580_4 ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "what is a <start time> of a thing that is a <position held> of [Barack Obama] and has <position held> [President Of The United States]?",
        "Squall ID based": "what is a <P580> of a thing that is a <P39> of <Q76> and has <P39> <Q11696>?"
    },
    {
        "Question": "How many members were in NSYNC?",
        "ID": "4df0c805",
        "Entities": "Q154454:NSYNC",
        "Mintaka Answer": "Q43432:Justin Timberlake,Q538409:JC Chasez,Q3311525:Chris Kirkpatrick,Q1640877:Joey Fatone,Q443120:Lance Bass",
        "Sparklis label based": "[NSYNC] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q154454> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Nsync] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q154454 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Nsync]?",
        "Squall ID based": "how many thing is a <P527> of <Q154454>?"
    },
    {
        "Question": "Who was a senator from California and died in office in 1964?",
        "ID": "201c8923",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q1094741:Clair Engle",
        "Sparklis label based": "give me every [human] that has as a <position held> with an <electoral district> that has as a <located in the administrative territorial entity>  [California]   [United States senator]  and that has  a <date of death>  and where the year of the <date of death> = 1964",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P768> that has as a <P131> <Q99> <Q4416090> and that has a <P570> and where the year of the <P570> = 1964",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P768_5 ?P570_13 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<electoral district> ?P768_5 ; ps:<position held> wd:[United States Senator] ] . ?P768_5 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q5_1 p:<date of death> [ ps:<date of death> ?P570_13 ] . FILTER ( (year(?P570_13) = \"1964\") ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P768_5 ?P570_13 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P768 ?P768_5 ; ps:P39 wd:Q4416090 ] . ?P768_5 p:P131 [ ps:P131 wd:Q99 ] . ?Q5_1 p:P570 [ ps:P570 ?P570_13 ] . FILTER ( (year(?P570_13) = \"1964\") ) } LIMIT 1",
        "Squall label based": "which [Human] has <position held> at a <electoral district> that has <located in the administrative territorial entity> [California] [United States Senator] and has a <date of death> whose year is \"1964\"?",
        "Squall ID based": "which <Q5> has <P39> at a <P768> that has <P131> <Q99> <Q4416090> and has a <P570> whose year is \"1964\"?"
    },
    {
        "Question": "Which movie was directed by the Coen brothers and starred Michael Stuhlbarg?",
        "ID": "78ad68cd",
        "Entities": "Q56095:Coen brothers,Q438445:Michael Stuhlbarg",
        "Mintaka Answer": "Q300555:A Serious Man",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Michael Stuhlbarg] and that has as a <director> [Ethan Coen] and [Joel Coen]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q438445> and that has as a <P57> <Q13595531> and <Q13595311>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Michael Stuhlbarg] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Ethan Coen] ] . ?Q11424_1 p:<director> [ ps:<director> wd:[Joel Coen] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q438445 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q13595531 ] . ?Q11424_1 p:P57 [ ps:P57 wd:Q13595311 ] . }",
        "Squall label based": "which [Film] has <cast member> [Michael Stuhlbarg] and has <director> [Ethan Coen] and [Joel Coen]?",
        "Squall ID based": "which <Q11424> has <P161> <Q438445> and has <P57> <Q13595531> and <Q13595311>?"
    },
    {
        "Question": "Where do the Yankees play?",
        "ID": "8e8b4ff1",
        "Entities": "Q213417:New York Yankees",
        "Mintaka Answer": "Q753529:Yankee Stadium",
        "Sparklis label based": "[New York Yankees] has a <home venue>",
        "Sparklis ID based": "<Q213417> has a <P115>",
        "Sparql label based": "select distinct ?p115_8 where { wd:[New York Yankees] p:<home venue> [ ps:<home venue> ?p115_8 ] . }",
        "Sparql ID based": "select distinct ?p115_8 where { wd:Q213417 p:P115 [ ps:P115 ?p115_8 ] . }",
        "Squall label based": "what is a <home venue> of [New York Yankees]?",
        "Squall ID based": "what is a <P115> of <Q213417>?"
    },
    {
        "Question": "Who was the 40th president of the US?",
        "ID": "3a1e9ad8",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q9960:Ronald Reagan",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States] with <series ordinal> 40",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 40",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"40\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"40\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"40\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"40\" <Q11696>?"
    },
    {
        "Question": "What was Martin Scorsese's first movie?",
        "ID": "2c29e477",
        "Entities": "Q41148:Martin Scorsese,1:None",
        "Mintaka Answer": "Q2575227:Who's That Knocking at My Door",
        "Sparklis label based": "give me every [film] that has as a <director> [Martin Scorsese] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q41148> and that has the lowest-to-highest <P577>",
        "Sparql label based": "select distinct ?q11424_8 ?p577_12 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<director> [ ps:<director> wd:[Martin Scorsese] ] . ?q11424_8 p:<publication date> [ ps:<publication date> ?p577_12 ] . } order by asc(?p577_12) limit 1",
        "Sparql ID based": "select distinct ?q11424_8 ?p577_12 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P57 [ ps:P57 wd:Q41148 ] . ?q11424_8 p:P577 [ ps:P577 ?p577_12 ] . } order by asc(?p577_12) limit 1",
        "Squall label based": "which [Film] has <director> [Martin Scorsese] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P57> <Q41148> and has the lowest <P577>?"
    },
    {
        "Question": "How many Bourne movies has Matt Damon starred in?",
        "ID": "76bd1d36",
        "Entities": "Q868683:Bourne,Q175535:Matt Damon",
        "Mintaka Answer": "Q105624:The Bourne Identity,Q156608:The Bourne Supremacy,Q107226:The Bourne Ultimatum,Q19481099:Jason Bourne",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Bourne] and that has as a <cast member> [Matt Damon] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q868683> and that has as a <P161> <Q175535> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[Bourne] ] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Matt Damon] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q868683 ] . ?Q11424_8 p:P161 [ ps:P161 wd:Q175535 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Bourne] and has <cast member> [Matt Damon]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q868683> and has <P161> <Q175535>?"
    },
    {
        "Question": "Who was the 24th president of the United States?",
        "ID": "8f384531",
        "Entities": "Q30:United States of America,24:None",
        "Mintaka Answer": "Q35171:Grover Cleveland",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 24 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 24 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"24\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"24\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"24\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"24\" <Q11696>?"
    },
    {
        "Question": "Which movie in 2015 was Cate Blanchett nominated for Best Performance by an Actress in a Leading Role but lost?",
        "ID": "cd7899b7",
        "Entities": "Q80966:Cate Blanchett, Q547316:Academy of Canadian Cinema and Television Award for Best Performance by an Actress in a Leading Role",
        "Mintaka Answer": "Q15963780:Carol",
        "Sparklis label based": "[Cate Blanchett] is nominated for \u26ac an <award for best leading actress> with <for work> a [film] that has \u26ac a <publication date> \u26ac \u26ac\nand give me the year of the <publication date> that is 2015",
        "Sparklis ID based": "<Q80966> is nominated for an <award_for_best_leading_actress> with <P1686> a <Q11424> that has a <P577> and give me the year of the <P577> that is 2015",
        "Sparql label based": "SELECT DISTINCT ?P1686_149 WHERE { ?Q96474676_7 wdt:<instance of> wd:[Award For Best Leading Actress] . ?P1686_149 wdt:<instance of> wd:[Film] . wd:[Cate Blanchett] p:<nominated for> [ ps:<nominated for> ?Q96474676_7 ; pq:<for work> ?P1686_149 ] . ?P1686_149 p:<publication date> [ ps:<publication date> ?P577_14 ] . BIND (year(?P577_14) AS ?expr_140) FILTER ( ?expr_140 = \"2015\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?P1686_149 WHERE { ?Q96474676_7 wdt:P31 wd:Q96474676 . ?P1686_149 wdt:P31 wd:Q11424 . wd:Q80966 p:P1411 [ ps:P1411 ?Q96474676_7 ; pq:P1686 ?P1686_149 ] . ?P1686_149 p:P577 [ ps:P577 ?P577_14 ] . BIND (year(?P577_14) AS ?expr_140) FILTER ( ?expr_140 = \"2015\"^^xsd:integer ) }",
        "Squall label based": "('The above query is syntactically wrong please try with corrected syntax!', b'SEM: (select ?P1686_149 (and (triple ?Q96474676_7 wdt:P31 wd:Q96474676) (triple ?P1686_149 wdt:P31 wd:Q11424) (triple wd:Q80966 p:P1411 ?__x1) (triple ?__x1 ps:P1411 ?Q96474676_7) (triple ?__x1 pq:P1686 ?P1686_149) (triple ?P1686_149 p:P577 ?__x2) (triple ?__x2 ps:P577 ?P577_14) (pred = ?expr_140 ?__x3) (func YEAR ?P577_14 ?__x3) (pred = ?expr_140 2015 ^^ xsd:integer)))\\nFailure(\"the verbalization cannot be made non-ambiguous without brackets\")\\n')",
        "Squall ID based": "('The above query is syntactically wrong please try with corrected syntax!', b'SEM: (select ?P1686_149 (and (triple ?Q96474676_7 wdt:P31 wd:Q96474676) (triple ?P1686_149 wdt:P31 wd:Q11424) (triple wd:Q80966 p:P1411 ?__x1) (triple ?__x1 ps:P1411 ?Q96474676_7) (triple ?__x1 pq:P1686 ?P1686_149) (triple ?P1686_149 p:P577 ?__x2) (triple ?__x2 ps:P577 ?P577_14) (pred = ?expr_140 ?__x3) (func YEAR ?P577_14 ?__x3) (pred = ?expr_140 2015 ^^ xsd:integer)))\\nFailure(\"the verbalization cannot be made non-ambiguous without brackets\")\\n')"
    },
    {
        "Question": "Did the movie Moana come out before 2015?",
        "ID": "93caf40a",
        "Entities": "Q18647981:Moana,2015:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Moana] has a <publication date> and give me the year of the <publication date> < 2015",
        "Sparklis ID based": "<Q18647981> has a <P577> and give me the year of the <P577> < 2015",
        "Sparql label based": "ASK { wd:[Moana] p:<publication date> [ ps:<publication date> ?p577_9 ] . filter (year(?p577_9) < 2015) }",
        "Sparql ID based": "ASK { wd:Q18647981 p:P577 [ ps:P577 ?p577_9 ] . filter (year(?p577_9) < 2015) }",
        "Squall label based": "whether [Moana] has a <publication date> whose year is lesser than 2015?",
        "Squall ID based": "whether <Q18647981> has a <P577> whose year is lesser than 2015?"
    },
    {
        "Question": "What Final Fantasy game sold the most copies?",
        "ID": "260c51dd",
        "Entities": "Q12391356:Final Fantasy",
        "Mintaka Answer": "Q214232:Final Fantasy VII",
        "Sparklis label based": "give me every [video game] that has as a <part of the series>  [Final Fantasy]  and that has  the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q99416119> and that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Final Fantasy] ] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_5 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q99416119 ] . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_5 ] . } ORDER BY DESC(?P2664_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Final Fantasy] and has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has <P179> <Q99416119> and has the highest <P2664>?"
    },
    {
        "Question": "What is a game in the Far Cry series and is based in Cuba?",
        "ID": "f6f3f404",
        "Entities": "Q241:Cuba,Q337865:Far Cry",
        "Mintaka Answer": "Far Cry 6: Q97120062",
        "Sparklis label based": "give me every <video> game that has as a part of the series [Far Cry] and that has as a <narrative location> [Yara]",
        "Sparklis ID based": "give me every <P10> game that has as a part of the series <Q2667817> and that has as a <P840> <Q107217674>",
        "Sparql label based": "select distinct ?q7889_1 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Far Cry] ] . ?q7889_1 p:<narrative location> [ ps:<narrative location> wd:[Yara] ] . }",
        "Sparql ID based": "select distinct ?q7889_1 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q2667817 ] . ?q7889_1 p:P840 [ ps:P840 wd:Q107217674 ] . }",
        "Squall label based": "which [Video Game] has <part of the series> [Far Cry] and has <narrative location> [Yara]?",
        "Squall ID based": "which <Q7889> has <P179> <Q2667817> and has <P840> <Q107217674>?"
    },
    {
        "Question": "When did Clint Eastwood receive his first Oscar?",
        "ID": "34cbebaf",
        "Entities": "Q43203:Clint Eastwood,Q19020:Academy Awards,1:None",
        "Mintaka Answer": "1992",
        "Sparklis label based": "[Clint Eastwood] <award received> \u26ac an [Academy Awards] with the lowest-to-highest <point in time> \u26ac\nand give me the year of the <point in time>",
        "Sparklis ID based": "<Q43203> <P166> an <Q19020> with the lowest-to-highest <P585> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_172 WHERE { ?Q19020_7 wdt:<instance of> wd:[Academy Awards] . wd:[Clint Eastwood] p:<award received> [ ps:<award received> ?Q19020_7 ; n1:<point in time> ?P585_45 ] . BIND (year(?P585_45) AS ?expr_172) } ORDER BY ASC(?P585_45) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_172 WHERE { ?Q19020_7 wdt:P31 wd:Q19020 . wd:Q43203 p:P166 [ ps:P166 ?Q19020_7 ; n1:P585 ?P585_45 ] . BIND (year(?P585_45) AS ?expr_172) } ORDER BY ASC(?P585_45) LIMIT 1",
        "Squall label based": "what is the year of the lowest thing at which <point in time> [Clint Eastwood] has <award received> a [Academy Awards]?",
        "Squall ID based": "what is the year of the lowest thing at which <P585> <Q43203> has <P166> a <Q19020>?"
    },
    {
        "Question": "How many US presidents were from North Carolina?",
        "ID": "06fc11f0",
        "Entities": "Q30:United States of America,Q1454:North Carolina",
        "Mintaka Answer": "Q11891:James K. Polk,Q8612:Andrew Johnson",
        "Sparklis label based": "give me every [human] that is the <head of government> of [United States of America] and that has a <place of birth> that has a <located in the administrative territorial entity> that has as a <located in the administrative territorial entity> [North Carolina] and give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that is the <P6> of <Q30> and that has a <P19> that has a <P131> that has as a <P131> <Q1454> and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_56) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[United States Of America] p:<head of government> [ ps:<head of government> ?Q5_1 ] . ?Q5_1 p:<place of birth> [ ps:<place of birth> ?P19_10 ] . ?P19_10 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_19 ] . ?P131_19 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[North Carolina] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_56) WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q30 p:P6 [ ps:P6 ?Q5_1 ] . ?Q5_1 p:P19 [ ps:P19 ?P19_10 ] . ?P19_10 p:P131 [ ps:P131 ?P131_19 ] . ?P131_19 p:P131 [ ps:P131 wd:Q1454 ] . }",
        "Squall label based": "how many [Human] is a <head of government> of [United States Of America] and has a <place of birth> that has a <located in the administrative territorial entity> that has <located in the administrative territorial entity> [North Carolina]?",
        "Squall ID based": "how many <Q5> is a <P6> of <Q30> and has a <P19> that has a <P131> that has <P131> <Q1454>?"
    },
    {
        "Question": "Which singer sang Umbrella who is also from Barbados?",
        "ID": "e44a2b44",
        "Entities": "Q244:Barbados,Q155447:Umbrella",
        "Mintaka Answer": "Q36844:Rihanna",
        "Sparklis label based": "give me every [human] that has as an <occupation> [singer] and that is the <performer> of [Umbrella] and that has as a<country of citizenship>  [Barbados]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q177220> and that is the <P175> of <Q155447> and that has as a<country_of_citizenship> <Q244>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<occupation> [ ps:<occupation> wd:[Singer] ] . wd:[Umbrella] p:<performer> [ ps:<performer> ?q5_1 ] . ?q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Barbados] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P106 [ ps:P106 wd:Q177220 ] . wd:Q155447 p:P175 [ ps:P175 ?q5_1 ] . ?q5_1 p:P27 [ ps:P27 wd:Q244 ] . }",
        "Squall label based": "which [Human] has <occupation> [Singer] and is a <performer> of [Umbrella] and has <country of citizenship> [Barbados]?",
        "Squall ID based": "which <Q5> has <P106> <Q177220> and is a <P175> of <Q155447> and has <P27> <Q244>?"
    },
    {
        "Question": "What is the first book in the James Bond series?",
        "ID": "0009a31c",
        "Entities": "Q844:James Bond",
        "Mintaka Answer": "Q1047711:Casino Royale",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [James Bond 3]  and that has  the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q844> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[James Bond 3] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q844 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [James Bond 3] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q844> and has the lowest <P577>?"
    },
    {
        "Question": "Which My Chemical Romance album came out in 2002?",
        "ID": "b0f0b057",
        "Entities": "Q483285:My Chemical Romance,2002:None",
        "Mintaka Answer": "Q863925:I Brought You My Bullets, You Brought Me Your Love",
        "Sparklis label based": "[My Chemical Romance] is the <performer> of an [album] that has \u26ac a <publication date> \u26ac \u26ac\nand where the year of the <publication date> = 2002",
        "Sparklis ID based": "<Q483285> is the <P175> of an <Q482994> that has a <P577> and where the year of the <P577> = 2002",
        "Sparql label based": "SELECT DISTINCT ?Q482994_7 WHERE { ?Q482994_7 wdt:<instance of> wd:[Album] . ?Q482994_7 p:<performer> [ ps:<performer> wd:[My Chemical Romance] ] . ?Q482994_7 p:<publication date> [ ps:<publication date> ?P577_110 ] . FILTER ( (year(?P577_110) = \"2002\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_7 WHERE { ?Q482994_7 wdt:P31 wd:Q482994 . ?Q482994_7 p:P175 [ ps:P175 wd:Q483285 ] . ?Q482994_7 p:P577 [ ps:P577 ?P577_110 ] . FILTER ( (year(?P577_110) = \"2002\"^^xsd:integer) ) }",
        "Squall label based": "which [Album] has <performer> [My Chemical Romance] and has a <publication date> whose year is 2002?",
        "Squall ID based": "which <Q482994> has <P175> <Q483285> and has a <P577> whose year is 2002?"
    },
    {
        "Question": "How many Pulitzer Prizes has John Updike won?",
        "ID": "da431607",
        "Entities": "Q105756:John Updike, Q46525:Pulitzer Prize",
        "Mintaka Answer": "2",
        "Sparklis label based": "[John Updike] <award received>  something that is the part of [Pulitzer Prize]  with a <point in time>  and give me the number of <point in time>",
        "Sparklis ID based": "<Q105756> <P166> something that is the part of <Q46525> with a <P585> and give me the number of <P585>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P585_46) AS ?number_of_131) WHERE { wd:[John Updike] p:<award received> [ ps:<award received> ?P361_8 ; n1:<point in time> ?P585_46 ] . ?P361_8 p:<part of> [ ps:<part of> wd:[Pulitzer Prize] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P585_46) AS ?number_of_131) WHERE { wd:Q105756 p:P166 [ ps:P166 ?P361_8 ; n1:P585 ?P585_46 ] . ?P361_8 p:P361 [ ps:P361 wd:Q46525 ] . }",
        "Squall label based": "at how many <point in time> [John Updike] has a <award received> that has <part of> [Pulitzer Prize]?",
        "Squall ID based": "at how many <P585> <Q105756> has a <P166> that has <P361> <Q46525>?"
    },
    {
        "Question": "What is the third Led Zeppelin album called?",
        "ID": "2d3d4704",
        "Entities": "Q2331:Led Zeppelin,3:None",
        "Mintaka Answer": "Q207438:Led Zeppelin III",
        "Sparklis label based": "[Led Zeppelin] is the <performer> of an [album] that has the lowest-to-highest <publication date> and that has a <title>",
        "Sparklis ID based": "<Q2331> is the <P175> of an <Q482994> that has the lowest-to-highest <P577> and that has a <P1476>",
        "Sparql label based": "select distinct ?p1476_198 where { ?q482994_118 wdt:<instance of> wd:[Album] . ?q482994_118 p:<performer> [ ps:<performer> wd:[Led Zeppelin] ] . ?q482994_118 p:<publication date> [ ps:<publication date> ?p577_157 ] . ?q482994_118 p:<title> [ ps:<title> ?p1476_198 ] . } order by asc(?p577_157) limit 1 offset 2",
        "Sparql ID based": "select distinct ?p1476_198 where { ?q482994_118 wdt:P31 wd:Q482994 . ?q482994_118 p:P175 [ ps:P175 wd:Q2331 ] . ?q482994_118 p:P577 [ ps:P577 ?p577_157 ] . ?q482994_118 p:P1476 [ ps:P1476 ?p1476_198 ] . } order by asc(?p577_157) limit 1 offset 2",
        "Squall label based": "what is a <title> of a [Album] that has <performer> [Led Zeppelin] and has the 3rd lowest <publication date>?",
        "Squall ID based": "what is a <P1476> of a <Q482994> that has <P175> <Q2331> and has the 3rd lowest <P577>?"
    },
    {
        "Question": "Which member of Linkin Park appeared in Saw 3D?",
        "ID": "90e0ea64",
        "Entities": "Q676284:Saw 3D, Q261:Linkin Park",
        "Mintaka Answer": "Q19198:Chester Bennington",
        "Sparklis label based": "give me every [human] that is the part(s) of [Linkin Park]  and that is the cast <member of> [Saw 3D]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q261> and that is the cast <P463> <Q676284>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Linkin Park] p:<has part(s)> [ ps:<has part(s)> ?Q5_1 ] . wd:[Saw 3d] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q261 p:P527 [ ps:P527 ?Q5_1 ] . wd:Q676284 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [Linkin Park] and is a <cast member> of [Saw 3d]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q261> and is a <P161> of <Q676284>?"
    },
    {
        "Question": "How many U.S. states touch the Pacific Ocean?",
        "ID": "2bf3ec8b",
        "Entities": "Q30:United States of America, Q98:Pacific Ocean",
        "Mintaka Answer": "5",
        "Sparklis label based": "give me every [U.S. state] that has as a <located next to body of water>  [Pacific Ocean]  and that has as a <country>  [United States of America]  and give me the number of [U.S. state]",
        "Sparklis ID based": "give me every <Q35657> that has as a <P206> <Q98> and that has as a <P17> <Q30> and give me the number of <Q35657>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<located in or next to body of water> [ ps:<located in or next to body of water> wd:[Pacific Ocean] ] . ?Q35657_1 p:<country> [ ps:<country> wd:[United States Of America] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_38) WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P206 [ ps:P206 wd:Q98 ] . ?Q35657_1 p:P17 [ ps:P17 wd:Q30 ] . }",
        "Squall label based": "how many [U.s. State] has <located in or next to body of water> [Pacific Ocean] and has <country> [United States Of America]?",
        "Squall ID based": "how many <Q35657> has <P206> <Q98> and has <P17> <Q30>?"
    },
    {
        "Question": "Who was the first prime minister of Japan?",
        "ID": "6d7ff670",
        "Entities": "Q17:Japan,1:None",
        "Mintaka Answer": "Q174971:Ito Hirobumi",
        "Sparklis label based": "give me every [human] that has as a <position held> with the lowest-to-highest <start time> [Prime Minister of Japan]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q274948>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<start time> ?P580_5 ; ps:<position held> wd:[Prime Minister Of Japan] ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P580 ?P580_5 ; ps:P39 wd:Q274948 ] . } ORDER BY ASC(?P580_5) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [Prime Minister Of Japan]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q274948>?"
    },
    {
        "Question": "Who is Mario's brother?",
        "ID": "71d392cf",
        "Entities": "Q12379:Mario",
        "Mintaka Answer": "Q210593:Luigi",
        "Sparklis label based": "[Mario] has  a sibling",
        "Sparklis ID based": "<Q12379> has a sibling",
        "Sparql label based": "SELECT DISTINCT ?P3373_8 WHERE { wd:[Mario] p:<sibling> [ ps:<sibling> ?P3373_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P3373_8 WHERE { wd:Q12379 p:P3373 [ ps:P3373 ?P3373_8 ] . }",
        "Squall label based": "what is a <sibling> of [Mario]?",
        "Squall ID based": "what is a <P3373> of <Q12379>?"
    },
    {
        "Question": "Which James Bond actor is no longer alive?",
        "ID": "e0b02678",
        "Entities": "Q2009573:James Bond",
        "Mintaka Answer": "Q4573:Sean Connery",
        "Sparklis label based": "give me every [human]\n\n    that is the <cast member> of a [film] with character role [James Bond 2]\u26ac\n    and that has \u26ac a <date of death> \u26ac",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> with character role <Q2009573> and that has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?Q5_320 WHERE { ?Q5_320 wdt:<instance of> wd:[Human] . ?Q11424_456 wdt:<instance of> wd:[Film] . ?Q11424_456 p:<cast member> [ ps:<cast member> ?Q5_320 ; n1:<character role> wd:[James Bond 2] ] . ?Q5_320 p:<date of death> [ ps:<date of death> ?P570_492 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_320 WHERE { ?Q5_320 wdt:P31 wd:Q5 . ?Q11424_456 wdt:P31 wd:Q11424 . ?Q11424_456 p:P161 [ ps:P161 ?Q5_320 ; n1:P453 wd:Q2009573 ] . ?Q5_320 p:P570 [ ps:P570 ?P570_492 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <character role> [James Bond 2] of a [Film] and has a <date of death>?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q2009573> of a <Q11424> and has a <P570>?"
    },
    {
        "Question": "Who was the 20th president of the United States?",
        "ID": "84694900",
        "Entities": "Q30:United States of America,20:None",
        "Mintaka Answer": "Q34597:James A. Garfield",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 20 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 20 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"20\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"20\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"20\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"20\" <Q11696>?"
    },
    {
        "Question": "How many times has Francis Ford Coppola won Best Director?",
        "ID": "510e5d5b",
        "Entities": "Q56094:Francis Ford Coppola,Q103360:Academy Award for Best Director",
        "Mintaka Answer": "Q184768:The Godfather Part II",
        "Sparklis label based": "[Francis Ford Coppola] <award received> with a <for work> [Academy Award for Best Director] and give me the number of <for work>",
        "Sparklis ID based": "<Q56094> <P166> with a <P1686> <Q103360> and give me the number of <P1686>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P1686_6) AS ?number_of_109) WHERE { wd:[Francis Ford Coppola] p:<award received> [ n1:<for work> ?P1686_6 ; ps:<award received> wd:[Academy Award For Best Director] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P1686_6) AS ?number_of_109) WHERE { wd:Q56094 p:P166 [ n1:P1686 ?P1686_6 ; ps:P166 wd:Q103360 ] . }",
        "Squall label based": "at how many <for work> [Francis Ford Coppola] has <award received> [Academy Award For Best Director]?",
        "Squall ID based": "at how many <P1686> <Q56094> has <P166> <Q103360>?"
    },
    {
        "Question": "Who is the tallest actress?",
        "ID": "148a5b90",
        "Entities": "Q33999:actor",
        "Mintaka Answer": "Q13560281:Dorothy Ford",
        "Sparklis label based": "give me every [human] that has as a <sex or gender> [female] and that has as an <occupation> [actor] and that has the highest-to-lowest <height>",
        "Sparklis ID based": "give me every <Q5> that has as a <P21> <Q6581072> and that has as an <P106> <Q33999> and that has the highest-to-lowest <P2048>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . ?q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . ?q5_1 p:<height> [ ps:<height> ?p2048_5 ] . } order by desc(?p2048_5) limit 1",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . ?q5_1 p:P106 [ ps:P106 wd:Q33999 ] . ?q5_1 p:P2048 [ ps:P2048 ?p2048_5 ] . } order by desc(?p2048_5) limit 1",
        "Squall label based": "which [Human] has <sex or gender> [Female] and has <occupation> [Actor] and has the highest <height>?",
        "Squall ID based": "which <Q5> has <P21> <Q6581072> and has <P106> <Q33999> and has the highest <P2048>?"
    },
    {
        "Question": "Who was the 32nd president of the United States?",
        "ID": "90eb2a83",
        "Entities": "Q30:United States of America,32:None",
        "Mintaka Answer": "Q8007:Franklin Delano Roosevelt",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 32 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 32 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"32\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"32\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"32\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"32\" <Q11696>?"
    },
    {
        "Question": "Which Lord of the Rings film made the most money?",
        "ID": "5b4a3b15",
        "Entities": "Q190214:The Lord of the Rings trilogy",
        "Mintaka Answer": "Q131074:The Lord of the Rings: The Return of the King",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Lord of the Rings trilogy] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q190214> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P2142_12 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings Trilogy] ] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_12 ] . } ORDER BY DESC(?P2142_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P2142_12 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q190214 ] . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_12 ] . } ORDER BY DESC(?P2142_12) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Lord Of The Rings Trilogy] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q190214> and has the highest <P2142>?"
    },
    {
        "Question": "Which mountain in the USA does not have an elevation below 20,000 feet?",
        "ID": "423f2ec3",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q130018:Denali",
        "Sparklis label based": "give me every [mountain]      that has as a <country>  [United States of America]      and that has  an <elevation above sea level>   and where the <elevation above sea level> <= 20000",
        "Sparklis ID based": "give me every <Q8502> that has as a <P17> <Q30> and that has an <P2044> and where the <P2044> <= 20000",
        "Sparql label based": "SELECT DISTINCT ?Q8502_95 WHERE { ?Q8502_95 wdt:<instance of> wd:[Mountain] . ?Q8502_95 p:<country> [ ps:<country> wd:[United States Of America] ] . ?Q8502_95 p:<elevation above sea level> [ ps:<elevation above sea level> ?P2044_100 ] . FILTER ( (?P2044_100 <= \"20000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q8502_95 WHERE { ?Q8502_95 wdt:P31 wd:Q8502 . ?Q8502_95 p:P17 [ ps:P17 wd:Q30 ] . ?Q8502_95 p:P2044 [ ps:P2044 ?P2044_100 ] . FILTER ( (?P2044_100 <= \"20000\"^^xsd:integer) ) }",
        "Squall label based": "which [Mountain] has <country> [United States Of America] and has a <elevation above sea level> lesser or equal to 20000?",
        "Squall ID based": "which <Q8502> has <P17> <Q30> and has a <P2044> lesser or equal to 20000?"
    },
    {
        "Question": "Who is the star of the Terminator franchise?",
        "ID": "d8b2c042",
        "Entities": "Q162255:The Terminator",
        "Mintaka Answer": "Q2685:Arnold Schwarzenegger",
        "Sparklis label based": "give me every [human] that is the <cast member> with <character role> [Terminator] of [The Terminator 2]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> with <P453> <Q98063049> of [The_Terminator_2]",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] .wd:[The Terminator] p:<cast member> [ ps:<cast member> ?Q5_1 ; n1:<character role> wd:[Terminator 2] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 .wd:Q162255 p:P161 [ ps:P161 ?Q5_1 ; n1:P453 wd:Q551327 ] . }",
        "Squall label based": "which [Human] is a <cast member> at <character role> [Terminator 2] of [The Terminator]?",
        "Squall ID based": "which <Q5> is a <P161> at <P453> <Q551327> of <Q162255>?"
    },
    {
        "Question": "What year did Harper Lee publish To Kill a Mockingbird?",
        "ID": "ea5b95af",
        "Entities": "Q212340:To Kill a Mockingbird, Q182658:Harper Lee",
        "Mintaka Answer": "1960",
        "Sparklis label based": "[To Kill a Mockingbird] has as an <author>  Harper Lee  and has  a <publication date>  and give me the year of the <publication date>",
        "Sparklis ID based": "<Q212340> has as an <P50> Harper Lee and has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_90 WHERE { wd:[To Kill A Mockingbird] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_90 WHERE { wd:Q212340 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_90) }",
        "Squall label based": "what is the year of a <publication date> of [To Kill A Mockingbird]?",
        "Squall ID based": "what is the year of a <P577> of <Q212340>?"
    },
    {
        "Question": "Who was the first woman to become vice president?",
        "ID": "ab7e193c",
        "Entities": "Q42178:vice president,1:None",
        "Mintaka Answer": "Q10853588:Kamala Harris",
        "Sparklis label based": "give me every [human] that has as a <position held> [Vice President of the United States] and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11699> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11699 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . }",
        "Squall label based": "which [Human] has <position held> [Vice President Of The United States] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> <Q11699> and has <P21> <Q6581072>?"
    },
    {
        "Question": "Who was a senator from California and died in office in 1891?",
        "ID": "d2978af4",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q561826:George Hearst",
        "Sparklis label based": "give me every [human]\n\n    that has as a <position held> with an <electoral district> that has as a <located in the administrative territorial entity> \u26ac [California] \u26ac \u26ac [United States senator] \u26ac\n    and that has \u26ac a <date of death> \u26ac\n\nand where the year of the <date of death> = 1891",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P768> that has as a <P131> <Q99> <Q4416090> and that has a <P570> and where the year of the <P570> = 1891",
        "Sparql label based": "SELECT DISTINCT ?Q5_237 WHERE { ?Q5_237 wdt:<instance of> wd:[Human] . ?Q5_237 p:<position held> [ n1:<electoral district> ?P768_242 ; ps:<position held> wd:[United States Senator] ] . ?P768_242 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q5_237 p:<date of death> [ ps:<date of death> ?P570_278 ] . FILTER ( (year(?P570_278) = \"1891\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_237 WHERE { ?Q5_237 wdt:P31 wd:Q5 . ?Q5_237 p:P39 [ n1:P768 ?P768_242 ; ps:P39 wd:Q4416090 ] . ?P768_242 p:P131 [ ps:P131 wd:Q99 ] . ?Q5_237 p:P570 [ ps:P570 ?P570_278 ] . FILTER ( (year(?P570_278) = \"1891\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <electoral district> that has <located in the administrative territorial entity> [California] [United States Senator] and has a <date of death> whose year is 1891?",
        "Squall ID based": "which <Q5> has <P39> at a <P768> that has <P131> <Q99> <Q4416090> and has a <P570> whose year is 1891?"
    },
    {
        "Question": "Which member of The Easybeats was born outside of Australia?",
        "ID": "4c555b9c",
        "Entities": "Q1545459:The Easybeats,Q408:Australia",
        "Mintaka Answer": "Q2347814:Stevie Wright",
        "Sparklis label based": "[The Easybeats] has a member that has a <place of birth> that has a <country>",
        "Sparklis ID based": "<Q1545459> has a member that has a <P19> that has a <P17>",
        "Sparql label based": "SELECT distinct ?p463_8 ?p19_46 ?p17_149 where { ?p463_8 p:<member of> [ ps:<member of> wd:[The Easybeats] ] . ?p463_8 p:<place of birth> [ ps:<place of birth> ?p19_46 ] . ?p19_46 p:<country> [ ps:<country> ?p17_149 ] . }",
        "Sparql ID based": "SELECT distinct ?p463_8 ?p19_46 ?p17_149 where { ?p463_8 p:P463 [ ps:P463 wd:Q1545459 ] . ?p463_8 p:P19 [ ps:P19 ?p19_46 ] . ?p19_46 p:P17 [ ps:P17 ?p17_149 ] . }",
        "Squall label based": "what has <member of> [The Easybeats] and has a <place of birth> that has a <country>?",
        "Squall ID based": "what has <P463> <Q1545459> and has a <P19> that has a <P17>?"
    },
    {
        "Question": "Which US president never had a spouse?",
        "ID": "0be9ff81",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q12325:James Buchanan",
        "Sparklis label based": "give me every [human]      that has as a <position held>  [President of the United States]      and that not has  a <spouse>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that not has a <P26>",
        "Sparql label based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:<instance of> wd:[Human] . ?Q5_7 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . FILTER ( NOT EXISTS { ?Q5_7 p:<spouse> [ ps:<spouse> [] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:P31 wd:Q5 . ?Q5_7 p:P39 [ ps:P39 wd:Q11696 ] . FILTER ( NOT EXISTS { ?Q5_7 p:P26 [ ps:P26 [] ] . } ) }",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has not a <spouse>?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has not a <P26>?"
    },
    {
        "Question": "Which governors from Hawaii have not been Republican since 1990?",
        "ID": "0ee0039f",
        "Entities": "Q782:Hawaii, Q29468:Republican Party",
        "Mintaka Answer": "Q880678:John D. Waihee III, Q816457:Ben Cayetano, Q469689:Neil Abercrombie, Q16189318:David Ige",
        "Sparklis label based": "give me every [human]      that not has as a <member of political party>  [Republican Party]      and that has as a <position held> with a <start time>  [Governor of Hawaii]   and where the year of the <start time> >= 1990",
        "Sparklis ID based": "give me every <Q5> that not has as a <P102> <Q29468> and that has as a <P39> with a <P580> <Q5589655> and where the year of the <P580> >= 1990",
        "Sparql label based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:<instance of> wd:[Human] . ?Q5_7 p:<position held> [ n1:<start time> ?P580_12 ; ps:<position held> wd:[Governor Of Hawaii] ] . FILTER ( NOT EXISTS { ?Q5_7 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . } ) FILTER ( (year(?P580_12) >= \"1990\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:P31 wd:Q5 . ?Q5_7 p:P39 [ n1:P580 ?P580_12 ; ps:P39 wd:Q5589655 ] . FILTER ( NOT EXISTS { ?Q5_7 p:P102 [ ps:P102 wd:Q29468 ] . } ) FILTER ( (year(?P580_12) >= \"1990\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater or equal to 1990 [Governor Of Hawaii] and has not <member of political party> [Republican Party]?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater or equal to 1990 <Q5589655> and has not <P102> <Q29468>?"
    },
    {
        "Question": "Which Sonic game did Tails not appear in?",
        "ID": "a67b72e6",
        "Entities": "Q194135:Miles \"Tails\" Prower",
        "Mintaka Answer": "Q37123:Sonic the Hedgehog",
        "Sparklis label based": "give me every [video game]      that not has as a <characters>  [Miles Tails\" Prower\"]      and that has as a <part of the series>  [Sonic the Hedgehog 5]",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P674> <Q194135> and that has as a <P179> <Q1046812>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Sonic The Hedgehog 5] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Miles Tails\" Prower\"] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q1046812 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q194135 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Sonic The Hedgehog 5] and has not <characters> [Miles Tails\" Prower\"]?",
        "Squall ID based": "which <Q7889> has <P179> <Q1046812> and has not <P674> <Q194135>?"
    },
    {
        "Question": "Which Spider-Man movie made the most money?",
        "ID": "3dcd7468",
        "Entities": "Q484442:Spider-Man",
        "Mintaka Answer": "Q27985819:Spider-Man: Far from Home",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Spider-Man trilogy] and that has the highest-to-lowest <box office> with valid in place [worldwide]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q18636789> and that has the highest-to-lowest <P2142> with valid in place <Q13780930>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_24 ?P2142_29 WHERE { ?Q11424_24 wdt:<instance of> wd:[Film] . ?Q11424_24 p:<part of the series> [ ps:<part of the series> wd:[Spider-man Trilogy] ] . ?Q11424_24 p:<box office> [ ps:<box office> ?P2142_29 ; n1:<valid in place> wd:[Worldwide] ] . } ORDER BY DESC(?P2142_29) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_24 ?P2142_29 WHERE { ?Q11424_24 wdt:P31 wd:Q11424 . ?Q11424_24 p:P179 [ ps:P179 wd:Q18636789 ] . ?Q11424_24 p:P2142 [ ps:P2142 ?P2142_29 ; n1:P3005 wd:Q13780930 ] . } ORDER BY DESC(?P2142_29) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [Spider-man Trilogy] and has <box office> at <valid in place> [Worldwide] the highest thing?",
        "Squall ID based": "which <Q11424> has <P179> <Q18636789> and has <P2142> at <P3005> <Q13780930> the highest thing?"
    },
    {
        "Question": "Which Super Bowls did Tom Brady participate in but not win?",
        "ID": "d0d6dacb",
        "Entities": "Q32096:Super Bowl, Q313381:Tom Brady",
        "Mintaka Answer": "Q597314:Super Bowl XLII, Q849079:Super Bowl XLVI, Q15633579:Super Bowl LII",
        "Sparklis label based": "give me every [Super Bowl] that has \u26ac a <participating team>\n\n    that not is the <winner> of the [Super Bowl] \u26ac\n    and that is the <member of sports team> of [Tom Brady]",
        "Sparklis ID based": "give me every <Q32096> that has a <P1923> that not is the <P1346> of the <Q32096> and that is the <P54> of <Q313381>",
        "Sparql label based": "SELECT DISTINCT ?Q32096_8 WHERE { ?Q32096_8 wdt:<instance of> wd:[Super Bowl] . ?Q32096_8 p:<participating team> [ ps:<participating team> ?P1923_328 ] . wd:[Tom Brady] p:<member of sports team> [ ps:<member of sports team> ?P1923_328 ] . FILTER ( NOT EXISTS { ?Q32096_8 p:<winner> [ ps:<winner> ?P1923_328 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q32096_8 WHERE { ?Q32096_8 wdt:P31 wd:Q32096 . ?Q32096_8 p:P1923 [ ps:P1923 ?P1923_328 ] . wd:Q313381 p:P54 [ ps:P54 ?P1923_328 ] . FILTER ( NOT EXISTS { ?Q32096_8 p:P1346 [ ps:P1346 ?P1923_328 ] . } ) }",
        "Squall label based": "('The above query is syntactically wrong please try with corrected syntax!', b'SEM: (select ?Q32096_8 (and (triple ?Q32096_8 wdt:P31 wd:Q32096) (triple ?Q32096_8 p:P1923 ?__x1) (triple ?__x1 ps:P1923 ?P1923_328) (triple wd:Q313381 p:P54 ?__x2) (triple ?__x2 ps:P54 ?P1923_328) (not (and (triple ?Q32096_8 p:P1346 ?__x3) (triple ?__x3 ps:P1346 ?P1923_328)))))\\nFailure(\"the verbalization of cyclic graph patterns is not supported yet\")\\n')",
        "Squall ID based": "('The above query is syntactically wrong please try with corrected syntax!', b'SEM: (select ?Q32096_8 (and (triple ?Q32096_8 wdt:P31 wd:Q32096) (triple ?Q32096_8 p:P1923 ?__x1) (triple ?__x1 ps:P1923 ?P1923_328) (triple wd:Q313381 p:P54 ?__x2) (triple ?__x2 ps:P54 ?P1923_328) (not (and (triple ?Q32096_8 p:P1346 ?__x3) (triple ?__x3 ps:P1346 ?P1923_328)))))\\nFailure(\"the verbalization of cyclic graph patterns is not supported yet\")\\n')"
    },
    {
        "Question": "How many feature movies grossed more than $1.4 billion in 2019?",
        "ID": "5c6eec4e",
        "Entities": "Q11424:film,1400000000:None,2019:None",
        "Mintaka Answer": "Q23781155:Avengers: Endgame,Q27044293:The Lion King,Q24733929:Frozen II",
        "Sparklis label based": "give me every [film]\n\n    that has \u26ac a <publication date> \u26ac\n    and that has \u26ac a <box office> \u26ac\n\nand where the year of the <publication date> = 2019\nand where the <box office> \u2265 1400000000",
        "Sparklis ID based": "give me every <Q11424> that has a <P577> and that has a <P2142> and where the year of the <P577> = 2019 and where the <P2142> \u2265 1400000000",
        "Sparql label based": "SELECT DISTINCT ?Q11424_100 WHERE { ?Q11424_100 wdt:<instance of> wd:[Film] . ?Q11424_100 p:<publication date> [ ps:<publication date> ?P577_201 ] . ?Q11424_100 p:<box office> [ ps:<box office> ?P2142_237 ] . FILTER ( (year(?P577_201) = \"2019\"^^xsd:integer) ) FILTER ( (?P2142_237 >= \"1400000000\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_100 WHERE { ?Q11424_100 wdt:P31 wd:Q11424 . ?Q11424_100 p:P577 [ ps:P577 ?P577_201 ] . ?Q11424_100 p:P2142 [ ps:P2142 ?P2142_237 ] . FILTER ( (year(?P577_201) = \"2019\"^^xsd:integer) ) FILTER ( (?P2142_237 >= \"1400000000\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has a <box office> greater or equal to 1400000000 and has a <publication date> whose year is 2019?",
        "Squall ID based": "which <Q11424> has a <P2142> greater or equal to 1400000000 and has a <P577> whose year is 2019?"
    },
    {
        "Question": "Which Mario Kart didn't have Waluigi?",
        "ID": "58a5897e",
        "Entities": "Q1050827:Waluigi",
        "Mintaka Answer": "Q1117024:Mario Kart 7",
        "Sparklis label based": "give me every [video game]      that has as a <part of the series>  [Mario Kart]      and that not has as a <characters>  [Waluigi]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q188196> and that not has as a <P674> <Q1050827>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Kart] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Waluigi] ] . } ) } LIMIT 13",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q188196 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q1050827 ] . } ) } LIMIT 13",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Kart] and has not <characters> [Waluigi]?",
        "Squall ID based": "which <Q7889> has <P179> <Q188196> and has not <P674> <Q1050827>?"
    },
    {
        "Question": "How many Golden Globe Awards has Denzel Washington won?",
        "ID": "1018e900",
        "Entities": "Q1011547:Golden Globe Award,Q42101:Denzel Washington",
        "Mintaka Answer": "Q862317:Glory,Q832732:The Hurricane",
        "Sparklis label based": "[Denzel Washington] <award received> a [Golden Globe Award] and give me the number of [Golden Globe Award]",
        "Sparklis ID based": "<Q42101> <P166> a <Q1011547> and give me the number of <Q1011547>",
        "Sparql label based": "select distinct (count(distinct ?q1011547_8) as ?number_of_47) where { ?q1011547_8 wdt:<instance of> wd:[Golden Globe Award] . wd:[Denzel Washington] p:<award received> [ ps:<award received> ?q1011547_8 ] . }",
        "Sparql ID based": "select distinct (count(distinct ?q1011547_8) as ?number_of_47) where { ?q1011547_8 wdt:P31 wd:Q1011547 . wd:Q42101 p:P166 [ ps:P166 ?q1011547_8 ] . }",
        "Squall label based": "how many [Golden Globe Award] is a <award received> of [Denzel Washington]?",
        "Squall ID based": "how many <Q1011547> is a <P166> of <Q42101>?"
    },
    {
        "Question": "Did Parasite come out after 2018?",
        "ID": "733b06df",
        "Entities": "Q61448040: Parasite",
        "Mintaka Answer": "NONE",
        "Sparklis label based": "[Parasite] has \u26ac a <publication date> \u26ac\nand where the year of the <publication date> \u2264 2018",
        "Sparklis ID based": "<Q61448040> has a <P577> and where the year of the <P577> \u2264 2018",
        "Sparql label based": "ASK WHERE { wd:[Parasite] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER ( (year(?P577_7) <= \"2018\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK WHERE { wd:Q61448040 p:P577 [ ps:P577 ?P577_7 ] . FILTER ( (year(?P577_7) <= \"2018\"^^xsd:integer) ) }",
        "Squall label based": "whether [Parasite] has a <publication date> whose year is lesser or equal to 2018?",
        "Squall ID based": "whether <Q61448040> has a <P577> whose year is lesser or equal to 2018?"
    },
    {
        "Question": "How many Republican governors has New York had since 2000?",
        "ID": "f3fc01a3",
        "Entities": "Q29468:Republican Party, Q1384:New York",
        "Mintaka Answer": "1",
        "Sparklis label based": "give me every [human]\n\n    that has as a <position held> with an <end time> after 2000 \u26ac [Governor of New York] \u26ac\n    and that has as a <member of political party> \u26ac [Republican Party] \u26ac\n\nand give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with an <P582> after 2000 <Q2347975> and that has as a <P102> <Q29468> and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_124) WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<end time> ?P582_88 ; ps:<position held> wd:[Governor Of New York] ] . FILTER ( str(?P582_88) >= \"2000\" ) ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Republican Party] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_1) AS ?number_of_124) WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P582 ?P582_88 ; ps:P39 wd:Q2347975 ] . FILTER ( str(?P582_88) >= \"2000\" ) ?Q5_1 p:P102 [ ps:P102 wd:Q29468 ] . }",
        "Squall label based": "how many [Human] has <position held> at a <end time> greater or equal to 2000 [Governor Of New York] and has <member of political party> [Republican Party]?",
        "Squall ID based": "how many <Q5> has <P39> at a <P582> greater or equal to 2000 <Q2347975> and has <P102> <Q29468>?"
    },
    {
        "Question": "What is Al Pacino's full first name?",
        "ID": "a7562f83",
        "Entities": "Q41163:Al Pacino",
        "Mintaka Answer": "Q645734:Alfredo",
        "Sparklis label based": "[Al Pacino] has  a <given name>",
        "Sparklis ID based": "<Q41163> has a <P735>",
        "Sparql label based": "SELECT DISTINCT ?P735_8 WHERE { wd:[Al Pacino] p:<given name> [ ps:<given name> ?P735_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P735_8 WHERE { wd:Q41163 p:P735 [ ps:P735 ?P735_8 ] . } LIMIT 1",
        "Squall label based": "what is a <given name> of [Al Pacino]?",
        "Squall ID based": "what is a <P735> of <Q41163>?"
    },
    {
        "Question": "What river flows through both Austria and Romania?",
        "ID": "2cac592f",
        "Entities": "Q218:Romania, Q40:Austria",
        "Mintaka Answer": "Q1653:Danube",
        "Sparklis label based": "give me every [river] that has as a <country>  [Austria]  and  [Romania]",
        "Sparklis ID based": "give me every <Q4022> that has as a <P17> <Q40> and <Q218>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<country> [ ps:<country> wd:[Austria] ] . ?Q4022_1 p:<country> [ ps:<country> wd:[Romania] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P17 [ ps:P17 wd:Q40 ] . ?Q4022_1 p:P17 [ ps:P17 wd:Q218 ] . }",
        "Squall label based": "which [River] has <country> [Austria] and [Romania]?",
        "Squall ID based": "which <Q4022> has <P17> <Q40> and <Q218>?"
    },
    {
        "Question": "Did Scream come out before 2000?",
        "ID": "04d2565d",
        "Entities": "Q27411:Scream,2000:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Scream] has a <publication date> and give me the year of the <publication date> <=2000",
        "Sparklis ID based": "<Q27411> has a <P577> and give me the year of the <P577> <=2000",
        "Sparql label based": "ASK WHERE { wd:[Scream] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER ( (year(?P577_7) <= \"2000\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK WHERE { wd:Q27411 p:P577 [ ps:P577 ?P577_7 ] . FILTER ( (year(?P577_7) <= \"2000\"^^xsd:integer) ) }",
        "Squall label based": "whether [Scream] has a <publication date> whose year is lesser or equal to 2000?",
        "Squall ID based": "whether <Q27411> has a <P577> whose year is lesser or equal to 2000?"
    },
    {
        "Question": "How many movies have George Clooney and Julia Roberts starred in together?",
        "ID": "6dd7949d",
        "Entities": "Q23844:George Clooney,Q40523:Julia Roberts",
        "Mintaka Answer": "Q205447:Ocean's Eleven,Q770965:Confessions of a Dangerous Mind,Q504053:Ocean's Twelve,Q19363691:Money Monster",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Julia Roberts] and that has as a <cast member> [George Clooney] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q40523> and that has as a <P161> <Q23844> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Julia Roberts] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[George Clooney] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q40523 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q23844 ] . }",
        "Squall label based": "how many [Film] has <cast member> [Julia Roberts] and [George Clooney]?",
        "Squall ID based": "how many <Q11424> has <P161> <Q40523> and <Q23844>?"
    },
    {
        "Question": "When did Denzel Washington win his first Academy Award for Best Supporting Actor?",
        "ID": "203a9487",
        "Entities": "Q42101:Denzel Washington,Q106291:Academy Award for Best Supporting Actor,1:None",
        "Mintaka Answer": "1988",
        "Sparklis label based": "[Denzel Washington] <award received> [Academy Award for Best Supporting Actor] with a <point in time>  and give me the year of the <point in time>",
        "Sparklis ID based": "<Q42101> <P166> <Q106291> with a <P585> and give me the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?P585_5 WHERE { wd:[Denzel Washington] p:<award received> [ n1:<point in time> ?P585_5 ; ps:<award received> wd:[Academy Award For Best Supporting Actor] ] . BIND (year(?P585_5) AS ?expr_90) }",
        "Sparql ID based": "SELECT DISTINCT ?P585_5 WHERE { wd:Q42101 p:P166 [ n1:P585 ?P585_5 ; ps:P166 wd:Q106291 ] . BIND (year(?P585_5) AS ?expr_90) }",
        "Squall label based": "what has a year and is a thing at which <point in time> [Denzel Washington] has <award received> [Academy Award For Best Supporting Actor]?",
        "Squall ID based": "what has a year and is a thing at which <P585> <Q42101> has <P166> <Q106291>?"
    },
    {
        "Question": "Which British monarch had the most wives?",
        "ID": "9df4346c",
        "Entities": "Q145:United Kingdom",
        "Mintaka Answer": "Q38370:Henry VIII of England",
        "Sparklis label based": "give me every [human]\n\n    that has as a <position held> \u26ac [monarch of England] \u26ac\n    and that has \u26ac the highest-to-lowest <spouse> \u26ac",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q18810062> and that has the highest-to-lowest <P26>",
        "Sparql label based": "SELECT DISTINCT ?Q5_15 WHERE { ?Q5_15 wdt:<instance of> wd:[Human] . ?Q5_15 p:<position held> [ ps:<position held> wd:[Monarch Of England] ] . ?Q5_15 p:<spouse> [ ps:<spouse> ?P26_20 ] . } ORDER BY DESC(?P26_20) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_15 WHERE { ?Q5_15 wdt:P31 wd:Q5 . ?Q5_15 p:P39 [ ps:P39 wd:Q18810062 ] . ?Q5_15 p:P26 [ ps:P26 ?P26_20 ] . } ORDER BY DESC(?P26_20) LIMIT 1",
        "Squall label based": "which [Human] has <position held> [Monarch Of England] and has the highest <spouse>?",
        "Squall ID based": "which <Q5> has <P39> <Q18810062> and has the highest <P26>?"
    },
    {
        "Question": "Which Super Mario game does Luigi not appear in?",
        "ID": "2388b5a3",
        "Entities": "Q210593:Luigi, Q4802838:Super Mario",
        "Mintaka Answer": "Q1063119:Super Mario RPG",
        "Sparklis label based": "give me every [video game]      that has as a <part of the series>  [Super Mario]      and that not has as a <characters>  [Luigi]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q4802838> and that not has as a <P674> <Q210593>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Super Mario] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Luigi] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q4802838 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q210593 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Super Mario] and has not <characters> [Luigi]?",
        "Squall ID based": "which <Q7889> has <P179> <Q4802838> and has not <P674> <Q210593>?"
    },
    {
        "Question": "How many movies has Chris Evans been in?",
        "ID": "94139615",
        "Entities": "Q178348:Chris Evans",
        "Mintaka Answer": "38",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Chris Evans] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q178348> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Chris Evans] ] .",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P161 [ ps:P161 wd:Q178348 ] .",
        "Squall label based": "how many [Film] has <cast member> [Chris Evans]?",
        "Squall ID based": "how many <Q11424> has <P161> <Q178348>?"
    },
    {
        "Question": "Which Mortal Kombat game did not feature the character Reptile?",
        "ID": "93793d98",
        "Entities": "Q241163:Mortal Kombat, Q1825776:Reptile",
        "Mintaka Answer": "Q59511757:Mortal Kombat 11",
        "Sparklis label based": "give me every [video game]      that not has as a <characters>  [Reptile]      and that has as a <part of the series>  [Mortal Kombat]",
        "Sparklis ID based": "give me every <Q7889> that not has as a <P674> <Q1825776> and that has as a <P179> <Q241163>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mortal Kombat] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Reptile] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q241163 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q1825776 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Mortal Kombat] and has not <characters> [Reptile]?",
        "Squall ID based": "which <Q7889> has <P179> <Q241163> and has not <P674> <Q1825776>?"
    },
    {
        "Question": "What was Daniel Craig's first Bond movie?",
        "ID": "30d81e82",
        "Entities": "Q4547:Daniel Craig,Q844:James Bond,1:None",
        "Mintaka Answer": "Q151904:Casino Royale",
        "Sparklis label based": "give me every [film]\n    that has as a <part of the series> \u26ac [James Bond] \u26ac\n    and that has as a <cast member> \u26ac [Daniel Craig] \u26ac\n    and that has \u26ac the lowest-to-highest <publication date> \u26ac",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2484680> and that has as a <P161> <Q4547> and that has the lowest-to-highest <P577>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<part of the series> [ ps:<part of the series> wd:[James Bond] ; n1:<series ordinal> ?p1545_3 ] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Daniel Craig] ] . } order by asc(?p1545_3) limit 1",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P179 [ ps:P179 wd:Q2484680 ; n1:P1545 ?p1545_3 ] . ?q11424_1 p:P161 [ ps:P161 wd:Q4547 ] . } order by asc(?p1545_3) limit 1",
        "Squall label based": "which [Film] has <part of the series> at the lowest <series ordinal> [James Bond] and has <cast member> [Daniel Craig]?",
        "Squall ID based": "which <Q11424> has <P179> at the lowest <P1545> <Q2484680> and has <P161> <Q4547>?"
    },
    {
        "Question": "What arena hosts the Los Angeles Lakers?",
        "ID": "53f9ea51",
        "Entities": "Q121783:Los Angeles Lakers",
        "Mintaka Answer": "Q186080:Crypto.com Arena",
        "Sparklis label based": "[Los Angeles Lakers] has  a <home venue>  and not with an <end time>",
        "Sparklis ID based": "<Q121783> has a <P115> and not with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?P115_8 WHERE { wd:[Los Angeles Lakers] p:<home venue> [ ps:<home venue> ?P115_8 ] . FILTER ( NOT EXISTS { wd:[Los Angeles Lakers] p:<home venue> [ ps:<home venue> ?P115_8 ; n1:<end time> ?P582_46 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P115_8 WHERE { wd:Q121783 p:P115 [ ps:P115 ?P115_8 ] . FILTER ( NOT EXISTS { wd:Q121783 p:P115 [ ps:P115 ?P115_8 ; n1:P582 ?P582_46 ] . } ) }",
        "Squall label based": "what is a <home venue> of [Los Angeles Lakers] and is not a <home venue> at a <end time> of [Los Angeles Lakers]?",
        "Squall ID based": "what is a <P115> of <Q121783> and is not a <P115> at a <P582> of <Q121783>?"
    },
    {
        "Question": "Who is the tenth president of the USA?",
        "ID": "5ec0f13f",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11881:John Tyler",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States] with <series ordinal> 10",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 10",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"10\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"10\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"10\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"10\" <Q11696>?"
    },
    {
        "Question": "How many Grammy's did Ella Fitzgerald win?",
        "ID": "82903119",
        "Entities": "Q1768:Ella Fitzgerald,Q41254:Grammy Award",
        "Mintaka Answer": "13",
        "Sparklis label based": "[Ella Fitzgerald] <award received> a [Grammy Award]s and give me the number of [Grammy Award]s",
        "Sparklis ID based": "<Q1768> <P166> a <Q41254> and give me the number of <Q41254>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_111) WHERE { ?Q41254_8 wdt:<instance of> wd:[Grammy Awards] . wd:[Ella Fitzgerald] p:<award received> [ ps:<award received> ?Q41254_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q41254_8) AS ?number_of_111) WHERE { ?Q41254_8 wdt:P31 wd:Q41254 . wd:Q1768 p:P166 [ ps:P166 ?Q41254_8 ] . }",
        "Squall label based": "how many [Grammy Awards] is a <award received> of [Ella Fitzgerald]?",
        "Squall ID based": "how many <Q41254> is a <P166> of <Q1768>?"
    },
    {
        "Question": "Which The Hunger Games book is the longest?",
        "ID": "ad7ed244",
        "Entities": "Q11679:The Hunger Games",
        "Mintaka Answer": "Q837140:Catching Fire",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Hunger Games 3]  and that has  the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q11679> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 3] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q11679 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Hunger Games 3] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q11679> and has the highest <P1104>?"
    },
    {
        "Question": "What game had a main character named Cloud Strife?",
        "ID": "a92a668c",
        "Entities": "Q1798592:Cloud Strife",
        "Mintaka Answer": "Q214232:Final Fantasy VII",
        "Sparklis label based": "[Cloud Strife] is the <characters> with <narrative role> [protagonist] of a [video game]",
        "Sparklis ID based": "<Q1798592> is the <P674> with <P5800> <Q215972> of a <Q7889>",
        "Sparql label based": "select distinct ?q7889_8 where { ?q7889_8 wdt:<instance of> wd:[Video Game] . ?q7889_8 p:<characters> [ ps:<characters> wd:[Cloud Strife] ; n1:<narrative role> wd:[Protagonist] ] . }",
        "Sparql ID based": "select distinct ?q7889_8 where { ?q7889_8 wdt:P31 wd:Q7889 . ?q7889_8 p:P674 [ ps:P674 wd:Q1798592 ; n1:P5800 wd:Q215972 ] . }",
        "Squall label based": "which [Video Game] has <characters> at <narrative role> [Protagonist] [Cloud Strife]?",
        "Squall ID based": "which <Q7889> has <P674> at <P5800> <Q215972> <Q1798592>?"
    },
    {
        "Question": "Did Bohemian Rhapsody come out before 1980?",
        "ID": "4ac39247",
        "Entities": "Q187745:Bohemian Rhapsody,1980:None",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Bohemian Rhapsody] has \u26ac a <publication date> \u26ac\nand where the year of the <publication date> < 1980",
        "Sparklis ID based": "<Q187745> has a <P577> and where the year of the <P577> < 1980",
        "Sparql label based": "ASK { wd:[Bohemian Rhapsody] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER ( (year(?P577_7) < \"1980\"^^xsd:integer) ) }",
        "Sparql ID based": "ASK { wd:Q187745 p:P577 [ ps:P577 ?P577_7 ] . FILTER ( (year(?P577_7) < \"1980\"^^xsd:integer) ) }",
        "Squall label based": "whether [Bohemian Rhapsody] has a <publication date> whose year is lesser than 1980?",
        "Squall ID based": "whether <Q187745> has a <P577> whose year is lesser than 1980?"
    },
    {
        "Question": "How many teams has Matthew Stafford played for?",
        "ID": "73d2a271",
        "Entities": "Q889130:Matthew Stafford",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Matthew Stafford] has  a <member of sports team>  and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q889130> has a <P54> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Matthew Stafford] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q889130 p:P54 [ ps:P54 ?P54_8 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Matthew Stafford]?",
        "Squall ID based": "how many thing is a <P54> of <Q889130>?"
    },
    {
        "Question": "How many Grammys did Skrillex win in 2016?",
        "ID": "055b1d34",
        "Entities": "Q19004:Skrillex, Q41254:Grammy Award",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Skrillex] <award received> with <point in time> 2017-01-01T00:00:00Z  something that is the <instance of> [Grammy Award]  or of [class of award]   and give me the number of instance",
        "Sparklis ID based": "<Q19004> <P166> with <P585> 2017-01-01T00:00:00Z something that is the <P31> <Q41254> or of <Q38033430> and give me the number of instance",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_8) AS ?number_of_46) WHERE { wd:[Skrillex] p:<award received> [ n1:<point in time> \"2017-01-01T00:00:00Z\" ; ps:<award received> ?P31_8 ] . { ?P31_8 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . } UNION { ?P31_8 p:<instance of> [ ps:<instance of> wd:[Class Of Award] ] . } } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P31_8) AS ?number_of_46) WHERE { wd:Q19004 p:P166 [ n1:P585 \"2017-01-01T00:00:00Z\" ; ps:P166 ?P31_8 ] . { ?P31_8 p:P31 [ ps:P31 wd:Q41254 ] . } UNION { ?P31_8 p:P31 [ ps:P31 wd:Q38033430 ] . } } LIMIT 1",
        "Squall label based": "how many thing is a <award received> at <point in time> \"2017-01-01T00:00:00Z\" of [Skrillex] and has <instance of> [Grammy Awards] or [Class Of Award]?",
        "Squall ID based": "how many thing is a <P166> at <P585> \"2017-01-01T00:00:00Z\" of <Q19004> and has <P31> <Q41254> or <Q38033430>?"
    },
    {
        "Question": "Which is the longest Chronicles of Narnia book?",
        "ID": "8238952f",
        "Entities": "Q483412:The Chronicles of Narnia",
        "Mintaka Answer": "Q331656:The Voyage of the Dawn Treader",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Chronicles of Narnia]  and that has  the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q483412> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Chronicles Of Narnia] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q483412 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Chronicles Of Narnia] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q483412> and has the highest <P1104>?"
    },
    {
        "Question": "Did the song Rehab by Amy Winehouse come out before 2003?",
        "ID": "2060c2c4",
        "Entities": "Q15897:Amy Winehouse,Q257517:Rehab,2003:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Rehab] has \u26ac a <publication date> \u26ac\nand where the year of the <publication date> < 2003",
        "Sparklis ID based": "<Q257517> has a <P577> and where the year of the <P577> < 2003",
        "Sparql label based": "ASK WHERE { wd:[Rehab] p:<publication date> [ ps:<publication date> ?P577_7 ] . BIND ((year(?P577_7) < \"2003\"^^xsd:integer) AS ?expr_92) }",
        "Sparql ID based": "ASK WHERE { wd:Q257517 p:P577 [ ps:P577 ?P577_7 ] . BIND ((year(?P577_7) < \"2003\"^^xsd:integer) AS ?expr_92) }",
        "Squall label based": "whether [Rehab] has a <publication date> whose year is lesser than 2003?",
        "Squall ID based": "whether <Q257517> has a <P577> whose year is lesser than 2003?"
    },
    {
        "Question": "How many universities are located in Oxford?",
        "ID": "a537a6d6",
        "Entities": "Q34433:University of Oxford",
        "Mintaka Answer": "Q34433:University of Oxford,Q132478:Oxford Brookes University",
        "Sparklis label based": "give me every [public university] that has as a <located in the administrative territorial entity> [Oxford] and give me the number of [public university]",
        "Sparklis ID based": "give me every <Q875538> that has as a <P131> <Q34217> and give me the number of <Q875538>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q875538_8) AS ?number_of_110) WHERE { ?Q875538_8 wdt:<instance of> wd:[Public University] . ?Q875538_8 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Oxford] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q875538_8) AS ?number_of_110) WHERE { ?Q875538_8 wdt:P31 wd:Q875538 . ?Q875538_8 p:P131 [ ps:P131 wd:Q34217 ] . }",
        "Squall label based": "how many [Public University] has <located in the administrative territorial entity> [Oxford]?",
        "Squall ID based": "how many <Q875538> has <P131> <Q34217>?"
    },
    {
        "Question": "What was the first James Bond movie?",
        "ID": "d82a35f3",
        "Entities": "Q844:James Bond,1:None",
        "Mintaka Answer": "Q102754:Dr. No",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [James Bond] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2484680> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[James Bond] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_5 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q2484680 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [James Bond] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P179> <Q2484680> and has the lowest <P577>?"
    },
    {
        "Question": "Fenway Park is home to what MLB team?",
        "ID": "dfc7e6a3",
        "Entities": "Q1163715:Major League Baseball, Q49136:Fenway Park",
        "Mintaka Answer": "Q213959:Boston Red Sox",
        "Sparklis label based": "give me every [baseball team] that has as a league  [Major League Baseball]  and that is the <occupant> of [Fenway Park]",
        "Sparklis ID based": "give me every <Q13027888> that has as a league <Q1163715> and that is the <P466> of <Q49136>",
        "Sparql label based": "SELECT DISTINCT ?Q13027888_1 WHERE { ?Q13027888_1 wdt:<instance of> wd:[Baseball Team] . ?Q13027888_1 p:<league> [ ps:<league> wd:[Major League Baseball] ] . wd:[Fenway Park] p:<occupant> [ ps:<occupant> ?Q13027888_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q13027888_1 WHERE { ?Q13027888_1 wdt:P31 wd:Q13027888 . ?Q13027888_1 p:P118 [ ps:P118 wd:Q1163715 ] . wd:Q49136 p:P466 [ ps:P466 ?Q13027888_1 ] . }",
        "Squall label based": "which [Baseball Team] has <league> [Major League Baseball] and is a <occupant> of [Fenway Park]?",
        "Squall ID based": "which <Q13027888> has <P118> <Q1163715> and is a <P466> of <Q49136>?"
    },
    {
        "Question": "Which movies directed by Martin Scorsese featured Leonardo DiCaprio?",
        "ID": "07fb547a",
        "Entities": "Q41148:Martin Scorsese,Q38111:Leonardo DiCaprio",
        "Mintaka Answer": "Q154581:Gangs of New York,Q201924:The Aviator,Q172975:The Departed,Q210364:Shutter Island,Q1392744:The Wolf of Wall Street,Q21186592:The Audition,Q66316924:Killers of the Flower Moon",
        "Sparklis label based": "give me every [film] that has as a <director> [Martin Scorsese] and that has as a <cast member> [Leonardo DiCaprio]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q41148> and that has as a <P161> <Q38111>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Martin Scorsese] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Leonardo Dicaprio] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q41148 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q38111 ] . }",
        "Squall label based": "which [Film] has <director> [Martin Scorsese] and has <cast member> [Leonardo Dicaprio]?",
        "Squall ID based": "which <Q11424> has <P57> <Q41148> and has <P161> <Q38111>?"
    },
    {
        "Question": "Which movie was directed by George Lucas and came out in 1977?",
        "ID": "5a85054d",
        "Entities": "Q38222:George Lucas,1977:None",
        "Mintaka Answer": "Q17738:Star Wars: Episode IV \u2013 A New Hope",
        "Sparklis label based": "give me every [film] that has as a <director> [George Lucas] and that has a <publication date> and where the year of the <publication date> = 1977",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q38222> and that has a <P577> and where the year of the <P577> = 1977",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 ?P577_38 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[George Lucas] ] . ?Q11424_1 p:<publication date> [ ps:<publication date> ?P577_38 ] . FILTER ( (year(?P577_38) = \"1977\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 ?P577_38 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q38222 ] . ?Q11424_1 p:P577 [ ps:P577 ?P577_38 ] . FILTER ( (year(?P577_38) = \"1977\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [George Lucas] and has a <publication date> whose year is 1977?",
        "Squall ID based": "which <Q11424> has <P57> <Q38222> and has a <P577> whose year is 1977?"
    },
    {
        "Question": "Who was the first African American senator?",
        "ID": "124cd627",
        "Entities": "Q49085:African Americans,1:None",
        "Mintaka Answer": "Q719200:Hiram Rhodes Revels",
        "Sparklis label based": "give me every [human] that has as a <position held> [United States senator] with the lowest-to-highest <start time> and that has as an <ethnic group> [African Americans]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4416090> with the lowest-to-highest <P580> and that has as an <P172> <Q49085>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[United States Senator] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<ethnic group> [ ps:<ethnic group> wd:[African Americans] ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q4416090 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P172 [ ps:P172 wd:Q49085 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [United States Senator] and has <ethnic group> [African Americans]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4416090> and has <P172> <Q49085>?"
    },
    {
        "Question": "Who is the singer of Smashing Pumpkins who was born in Elk Grove Village, IL?",
        "ID": "b4fd283d",
        "Entities": "Q328455:Elk Grove Village,Q184217:The Smashing Pumpkins",
        "Mintaka Answer": "Q311382:Billy Corgan",
        "Sparklis label based": "give me every [human] that has as an <occupation> [singer] and that is the <member of> [The Smashing Pumpkins] and that has as a <place of birth> [Elk Grove Village]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q177220> and that is the <P463> <Q184217> and that has as a <P19> <Q328455>",
        "Sparql label based": "SELECT distinct ?q5_8 where { ?q5_8 wdt:<instance of> wd:[Human] . ?q5_8 p:<occupation> [ ps:<occupation> wd:[Singer] ] . ?q5_8 p:<member of> [ ps:<member of> wd:[The Smashing Pumpkins] ] . ?q5_8 p:<place of birth> [ ps:<place of birth> wd:[Elk Grove Village] ] . }",
        "Sparql ID based": "SELECT distinct ?q5_8 where { ?q5_8 wdt:P31 wd:Q5 . ?q5_8 p:P106 [ ps:P106 wd:Q177220 ] . ?q5_8 p:P463 [ ps:P463 wd:Q184217 ] . ?q5_8 p:P19 [ ps:P19 wd:Q328455 ] . }",
        "Squall label based": "which [Human] has <occupation> [Singer] and has <member of> [The Smashing Pumpkins] and has <place of birth> [Elk Grove Village]?",
        "Squall ID based": "which <Q5> has <P106> <Q177220> and has <P463> <Q184217> and has <P19> <Q328455>?"
    },
    {
        "Question": "What was the name of the first Harry Potter movie in the series?",
        "ID": "9910bfc4",
        "Entities": "Q216930:Harry Potter film series,1:None",
        "Mintaka Answer": "Q102438:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Harry Potter film series] with <series ordinal> 1",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q216930> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter Film Series] ; n1:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q216930 ; n1:P1545 \"1\" ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"1\" [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"1\" <Q216930>?"
    },
    {
        "Question": "Who was not British in Katrina and the Waves?",
        "ID": "6d9e6317",
        "Entities": "Q934582:Katrina and the Waves,Q842438:Britons",
        "Mintaka Answer": "Q166769:Katrina Leskanich",
        "Sparklis label based": "[Katrina and the Waves] has a member that not has as a <country of citizenship>  [United Kingdom]",
        "Sparklis ID based": "<Q934582> has a member that not has as a <P27> <Q145>",
        "Sparql label based": "SELECT distinct ?p463_8 where { ?p463_8 p:<member of> [ ps:<member of> wd:[Katrina And The Waves] ] . filter ( not exists { ?p463_8 p:<country of citizenship> [ ps:<country of citizenship> wd:[United Kingdom] ] . } ) }",
        "Sparql ID based": "SELECT distinct ?p463_8 where { ?p463_8 p:P463 [ ps:P463 wd:Q934582 ] . filter ( not exists { ?p463_8 p:P27 [ ps:P27 wd:Q145 ] . } ) }",
        "Squall label based": "what has <member of> [Katrina And The Waves] and has not <country of citizenship> [United Kingdom]?",
        "Squall ID based": "what has <P463> <Q934582> and has not <P27> <Q145>?"
    },
    {
        "Question": "Who was elected president first, George Washington or John Adams?",
        "ID": "f8fdaa02",
        "Entities": "Q11806:John Adams, Q23:George Washington",
        "Mintaka Answer": "Q23:George Washington",
        "Sparklis label based": "give me every [human]\n\n    that has as a <position held> with the lowest-to-highest <start time> \u26ac [President of the United States] \u26ac\n    and\n        that is <George Washington>\n        or that is <John Adams>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with the lowest-to-highest <P580> <Q11696> and that is <George_Washington> or that is <John_Adams>",
        "Sparql label based": "SELECT DISTINCT ?Q5_320 WHERE { ?Q5_320 wdt:<instance of> wd:[Human] . ?Q5_320 p:<position held> [ n1:<start time> ?P580_325 ; ps:<position held> wd:[President Of The United States] ] . FILTER ( ( ?Q5_320 = wd:[George Washington] || ?Q5_320 = wd:[John Adams] ) ) } ORDER BY ASC(?P580_325) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_320 WHERE { ?Q5_320 wdt:P31 wd:Q5 . ?Q5_320 p:P39 [ n1:P580 ?P580_325 ; ps:P39 wd:Q11696 ] . FILTER ( ( ?Q5_320 = wd:Q23 || ?Q5_320 = wd:Q11806 ) ) } ORDER BY ASC(?P580_325) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [President Of The United States] and is [George Washington] or [John Adams]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q11696> and is <Q23> or <Q11806>?"
    },
    {
        "Question": "What Lord of the Rings book is the longest?",
        "ID": "e31a2f3c",
        "Entities": "Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q208002:The Fellowship of the Ring",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Lord of the Rings]  and that has  the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228> and has the highest <P1104>?"
    },
    {
        "Question": "How many Child's Play movies are there?",
        "ID": "46c19f73",
        "Entities": "Q2265493:Child's Play",
        "Mintaka Answer": "Q935945:Child's Play,Q1089281:Child's Play 2,Q1089283:Child's Play 3,Q1089303:Bride of Chucky,Q925421:Seed of Chucky,Q12161666:Curse of Chucky,Q28130946:Cult of Chucky,Q56697304:Child's Play",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Child's Play] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2265493> and give me the number of <Q11424>",
        "Sparql label based": "select distinct (count(distinct ?q11424_159) as ?number_of_196) where { ?q11424_159 wdt:<instance of> wd:[Film] . ?q11424_159 p:<part of the series> [ ps:<part of the series> wd:[Child's Play] ] . }",
        "Sparql ID based": "select distinct (count(distinct ?q11424_159) as ?number_of_196) where { ?q11424_159 wdt:P31 wd:Q11424 . ?q11424_159 p:P179 [ ps:P179 wd:Q2265493 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Child's Play]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q2265493>?"
    },
    {
        "Question": "Which NFL team won Super Bowl 39?",
        "ID": "94b9e6b1",
        "Entities": "Q1215884:National Football League, Q926745:Super Bowl XXXIX",
        "Mintaka Answer": "Q193390:New England Patriots",
        "Sparklis label based": "give me every [American football team] that has as a league  [National Football League]  and that is the <winner> of [Super Bowl XXXIX]",
        "Sparklis ID based": "give me every <Q17156793> that has as a league <Q1215884> and that is the <P1346> of <Q926745>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . ?Q17156793_1 p:<league> [ ps:<league> wd:[National Football League] ] . wd:[Super Bowl Xxxix] p:<winner> [ ps:<winner> ?Q17156793_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . ?Q17156793_1 p:P118 [ ps:P118 wd:Q1215884 ] . wd:Q926745 p:P1346 [ ps:P1346 ?Q17156793_1 ] . }",
        "Squall label based": "which [American Football Team] has <league> [National Football League] and is a <winner> of [Super Bowl Xxxix]?",
        "Squall ID based": "which <Q17156793> has <P118> <Q1215884> and is a <P1346> of <Q926745>?"
    },
    {
        "Question": "How many members are in Aespa?",
        "ID": "a3b31927",
        "Entities": "Q100877982:Aespa",
        "Mintaka Answer": "Q101161289:Winter,Q101161168:Giselle,Q101161002:Karina,Q101161499:Ningning",
        "Sparklis label based": "[Aespa] <has part(s)> and give me the number of part(s)",
        "Sparklis ID based": "<Q2010706> <P527> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Aespa 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q100877982 p:P527 [ ps:P527 ?P527_8 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Aespa 2]?",
        "Squall ID based": "how many thing is a <P527> of <Q100877982>?"
    },
    {
        "Question": "How many oceans of the world?",
        "ID": "5b623584",
        "Entities": "Q9430:ocean",
        "Mintaka Answer": "Q97:Atlantic Ocean,Q98:Pacific Ocean,Q1239:Indian Ocean,Q788:Arctic Ocean,Q7354:Southern Ocean",
        "Sparklis label based": "give me every [ocean]",
        "Sparklis ID based": "give me every <Q9430>",
        "Sparql label based": "SELECT DISTINCT ?Q9430_181 WHERE { ?Q9430_181 wdt:<instance of> wd:[Ocean] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q9430_181 WHERE { ?Q9430_181 wdt:P31 wd:Q9430 . }",
        "Squall label based": "which [Ocean] is there?",
        "Squall ID based": "which <Q9430> is there?"
    },
    {
        "Question": "How many Nebula awards did Isaac Asimov win?",
        "ID": "c23d7f9b",
        "Entities": "Q194285:Nebula Award,Q34981:Isaac Asimov",
        "Mintaka Answer": "Q266012:Nebula Award for Best Novel,Q936683:Nebula Award for Best Novelette",
        "Sparklis label based": "[Isaac Asimov] <award received> a [Nebula Award] and give me the number of [Nebula Award]",
        "Sparklis ID based": "<Q34981> <P166> a <Q194285> and give me the number of <Q194285>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q194285_8) AS ?number_of_46) WHERE { ?Q194285_8 wdt:<instance of> wd:[Nebula Award] . wd:[Isaac Asimov] p:<award received> [ ps:<award received> ?Q194285_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q194285_8) AS ?number_of_46) WHERE { ?Q194285_8 wdt:P31 wd:Q194285 . wd:Q34981 p:P166 [ ps:P166 ?Q194285_8 ] . }",
        "Squall label based": "how many [Nebula Award] is a <award received> of [Isaac Asimov]?",
        "Squall ID based": "how many <Q194285> is a <P166> of <Q34981>?"
    },
    {
        "Question": "What is the highest-grossing movie of all time?",
        "ID": "17e2beec",
        "Entities": "Q11424:film",
        "Mintaka Answer": "Q24871:Avatar",
        "Sparklis label based": "give me every [film] that has \u26ac the highest-to-lowest <box office> with <valid in place> [worldwide] \u26ac",
        "Sparklis ID based": "give me every <Q11424> that has the highest-to-lowest <P2142> with <P3005> <Q13780930>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_10 WHERE { ?Q11424_10 wdt:<instance of> wd:[Film] . ?Q11424_10 p:<box office> [ ps:<box office> ?P2142_111 ; n2:<valid in place> wd:[Worldwide] ] . } ORDER BY DESC(?P2142_111) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_10 WHERE { ?Q11424_10 wdt:P31 wd:Q11424 . ?Q11424_10 p:P2142 [ ps:P2142 ?P2142_111 ; n2:P3005 wd:Q13780930 ] . } ORDER BY DESC(?P2142_111) LIMIT 1",
        "Squall label based": "which [Film] has <box office> at <valid in place> [Worldwide] the highest thing?",
        "Squall ID based": "which <Q11424> has <P2142> at <P3005> <Q13780930> the highest thing?"
    },
    {
        "Question": "What was the first Home Alone movie to not feature Macaulay Culkin?",
        "ID": "2af1f702",
        "Entities": "Q105031:Home Alone,Q103578:Macaulay Culkin,1:None",
        "Mintaka Answer": "Q382320:Home Alone 3",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Home Alone] and that not has as a <cast member> [Macaulay Culkin]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q3627883> and that not has as a <P161> <Q103578>",
        "Sparql label based": "SELECT distinct ?q11424_9 where { ?q11424_9 wdt:<instance of> wd:[Film] . ?q11424_9 p:<part of the series> [ ps:<part of the series> wd:[Home Alone] ] . filter ( not exists { ?q11424_9 p:<cast member> [ ps:<cast member> wd:[Macaulay Culkin] ] . } ) }",
        "Sparql ID based": "SELECT distinct ?q11424_9 where { ?q11424_9 wdt:P31 wd:Q11424 . ?q11424_9 p:P179 [ ps:P179 wd:Q3627883 ] . filter ( not exists { ?q11424_9 p:P161 [ ps:P161 wd:Q103578 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Home Alone] and has not <cast member> [Macaulay Culkin]?",
        "Squall ID based": "which <Q11424> has <P179> <Q3627883> and has not <P161> <Q103578>?"
    },
    {
        "Question": "How many Hobbit moves are there?",
        "ID": "52b46e82",
        "Entities": "Q74331:The Hobbit trilogy",
        "Mintaka Answer": "Q80379:The Hobbit: An Unexpected Journey,Q719915:The Hobbit: The Desolation of Smaug,Q919649:The Hobbit: The Battle of the Five Armies",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Hobbit trilogy] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q74331> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_75) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Hobbit Trilogy] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_75) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q74331 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [The Hobbit Trilogy]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q74331>?"
    },
    {
        "Question": "What was the third Pirates of the Caribbean movie to be released?",
        "ID": "059a6200",
        "Entities": "Q194318:Pirates of the Caribbean,3:None",
        "Mintaka Answer": "Q54274:Pirates of the Caribbean: At World's End",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [Pirates of the Caribbean]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q194318>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:<instance of> wd:[Film] . ?Q11424_9 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[Pirates Of The Caribbean] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_9 WHERE { ?Q11424_9 wdt:P31 wd:Q11424 . ?Q11424_9 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q194318 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [Pirates Of The Caribbean]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q194318>?"
    },
    {
        "Question": "Which NFL team is based in Ohio and used to have A.J. Green?",
        "ID": "5.66E+79",
        "Entities": "Q1215884:National Football League, Q2060485:A. J. Green, Q1397:Ohio",
        "Mintaka Answer": "Q223511:Cincinnati Bengals",
        "Sparklis label based": "give me every [American football team] that has as a league  [National Football League]  and that is the <member of sports team> of [A. J. Green]",
        "Sparklis ID based": "give me every <Q17156793> that has as a league <Q1215884> and that is the <P54> of <Q2060485>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . ?Q17156793_1 p:<league> [ ps:<league> wd:[National Football League] ] . wd:[A. J. Green] p:<member of sports team> [ ps:<member of sports team> ?Q17156793_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . ?Q17156793_1 p:P118 [ ps:P118 wd:Q1215884 ] . wd:Q2060485 p:P54 [ ps:P54 ?Q17156793_1 ] . }",
        "Squall label based": "which [American Football Team] has <league> [National Football League] and is a <member of sports team> of [A. J. Green]?",
        "Squall ID based": "which <Q17156793> has <P118> <Q1215884> and is a <P54> of <Q2060485>?"
    },
    {
        "Question": "How many countries are there in Europe?",
        "ID": "490aa6c6",
        "Entities": "Q46:Europe",
        "Mintaka Answer": "44",
        "Sparklis label based": "give me every [country] that has as a <continent>  [Europe]  and give me the number of [country]",
        "Sparklis ID based": "give me every <Q6256> that has as a <P30> <Q46> and give me the number of <Q6256>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_38) WHERE { ?Q6256_1 wdt:<instance of> wd:[Country] . ?Q6256_1 p:<continent> [ ps:<continent> wd:[Europe] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q6256_1) AS ?number_of_38) WHERE { ?Q6256_1 wdt:P31 wd:Q6256 . ?Q6256_1 p:P30 [ ps:P30 wd:Q46 ] . }",
        "Squall label based": "how many [Country] has <continent> [Europe]?",
        "Squall ID based": "how many <Q6256> has <P30> <Q46>?"
    },
    {
        "Question": "What is the 2nd Hunger Games book?",
        "ID": "ac5f56c2",
        "Entities": "Q11679:The Hunger Games",
        "Mintaka Answer": "Q837140:Catching Fire",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 2  [The Hunger Games 3]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 2 <Q11679>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[The Hunger Games 3] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q11679 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"2\" [The Hunger Games 3]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"2\" <Q11679>?"
    },
    {
        "Question": "What band includes Matt Heafy?",
        "ID": "52faddb2",
        "Entities": "Q375040:Matt Heafy",
        "Mintaka Answer": "Q390684:Trivium",
        "Sparklis label based": "[Matt Heafy] is the <member of> something",
        "Sparklis ID based": "<Q375040> is the <P463> something",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { wd:[Matt Heafy] p:<member of> [ ps:<member of> ?thing_8 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { wd:Q375040 p:P463 [ ps:P463 ?thing_8 ] . } LIMIT 1",
        "Squall label based": "what is a <member of> of [Matt Heafy]?",
        "Squall ID based": "what is a <P463> of <Q375040>?"
    },
    {
        "Question": "How many books has author Stuart Woods written?",
        "ID": "313738ea",
        "Entities": "Q3500849:Stuart Woods",
        "Mintaka Answer": "Q7013444:New York Dead,Q5245487:Dead in the Water",
        "Sparklis label based": "give me every [literary work] that has as an <author> \u26ac [Stuart Woods] \u26ac\n    and give me the number of <literary work>",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q3500849> and give me the number of <literary_work>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_13) AS ?number_of_49) WHERE { ?Q7725634_13 wdt:<instance of> wd:[Literary Work] . ?Q7725634_13 p:<author> [ ps:<author> wd:[Stuart Woods] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q7725634_13) AS ?number_of_49) WHERE { ?Q7725634_13 wdt:P31 wd:Q7725634 . ?Q7725634_13 p:P50 [ ps:P50 wd:Q3500849 ] . }",
        "Squall label based": "how many [Literary Work] has <author> [Stuart Woods]?",
        "Squall ID based": "how many <Q7725634> has <P50> <Q3500849>?"
    },
    {
        "Question": "How many NFL teams did Len Dawson play on?",
        "ID": "e3f3977f",
        "Entities": "Q1215884:National Football League, Q726229:Len Dawson",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Len Dawson] has  a <member of sports team> that has as a league  [National Football League]   and give me the number of <member of sports team>",
        "Sparklis ID based": "<Q726229> has a <P54> that has as a league <Q1215884> and give me the number of <P54>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:[Len Dawson] p:<member of sports team> [ ps:<member of sports team> ?P54_8 ] . ?P54_8 p:<league> [ ps:<league> wd:[National Football League] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P54_8) AS ?number_of_46) WHERE { wd:Q726229 p:P54 [ ps:P54 ?P54_8 ] . ?P54_8 p:P118 [ ps:P118 wd:Q1215884 ] . }",
        "Squall label based": "how many thing is a <member of sports team> of [Len Dawson] and has <league> [National Football League]?",
        "Squall ID based": "how many thing is a <P54> of <Q726229> and has <P118> <Q1215884>?"
    },
    {
        "Question": "In what year did the first Halo game come out?",
        "ID": "1ce72753",
        "Entities": "Q1747150:Halo,1:None",
        "Mintaka Answer": "2001",
        "Sparklis label based": "give me every <video> game that has as a part of the series [Halo] and that has a <publication date> and give me lowest-to-highest the year of the <publication date>",
        "Sparklis ID based": "give me every <P10> game that has as a part of the series <Q1747150> and that has a <P577> and give me lowest-to-highest the year of the <P577>",
        "Sparql label based": "select distinct ?expr_318 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Halo] ] . ?q7889_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . bind (year(?p577_5) as ?expr_318) } order by asc(?expr_318) limit 1",
        "Sparql ID based": "select distinct ?expr_318 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q1747150 ] . ?q7889_1 p:P577 [ ps:P577 ?p577_5 ] . bind (year(?p577_5) as ?expr_318) } order by asc(?expr_318) limit 1",
        "Squall label based": "what is the lowest year of a <publication date> of a [Video Game] that has <part of the series> [Halo]?",
        "Squall ID based": "what is the lowest year of a <P577> of a <Q7889> that has <P179> <Q1747150>?"
    },
    {
        "Question": "What book was published in 2019 and won a Pulitzer Prize in 2020?",
        "ID": "a135c990",
        "Entities": "Q46525:Pulitzer Prize",
        "Mintaka Answer": "Q85808003:The Nickel Boys",
        "Sparklis label based": "give me every [literary work]\n\n    that has \u26ac a <publication date> \u26ac\n    and that <award received> with a <point in time> \u26ac [Pulitzer Prize for Fiction] \u26ac\n\nand give me the year of the <publication date> that is 2019\nand give me the year of the <point in time> that is 2020",
        "Sparklis ID based": "give me every <Q7725634> that has a <P577> and that <P166> with a <P585> <Q833633> and give me the year of the <P577> that is 2019 and give me the year of the <P585> that is 2020",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_191 WHERE { ?Q7725634_191 wdt:<instance of> wd:[Literary Work] . ?Q7725634_191 p:<publication date> [ ps:<publication date> ?P577_12 ] . ?Q7725634_191 p:<award received> [ n1:<point in time> ?P585_4 ; ps:<award received> wd:[Pulitzer Prize For Fiction] ] . BIND (year(?P577_12) AS ?expr_98) FILTER ( ?expr_98 = \"2019\"^^xsd:integer ) BIND (year(?P585_4) AS ?expr_183) FILTER ( ?expr_183 = \"2020\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_191 WHERE { ?Q7725634_191 wdt:P31 wd:Q7725634 . ?Q7725634_191 p:P577 [ ps:P577 ?P577_12 ] . ?Q7725634_191 p:P166 [ n1:P585 ?P585_4 ; ps:P166 wd:Q833633 ] . BIND (year(?P577_12) AS ?expr_98) FILTER ( ?expr_98 = \"2019\"^^xsd:integer ) BIND (year(?P585_4) AS ?expr_183) FILTER ( ?expr_183 = \"2020\"^^xsd:integer ) }",
        "Squall label based": "which [Literary Work] has <award received> at a <point in time> whose year is 2020 [Pulitzer Prize For Fiction] and has a <publication date> whose year is 2019?",
        "Squall ID based": "which <Q7725634> has <P166> at a <P585> whose year is 2020 <Q833633> and has a <P577> whose year is 2019?"
    },
    {
        "Question": "How many members are in Itzy?",
        "ID": "cedc6bab",
        "Entities": "Q60732823:Itzy",
        "Mintaka Answer": "Q60870268:Hwang Ye-ji,Q60870266:Lia,Q60870265:Shin Ryu-jin,Q60829936:Lee Chae-ryeong,Q60870263:Shin Yu-na",
        "Sparklis label based": "[Itzy] has a member count",
        "Sparklis ID based": "<Q60732823> has a member count",
        "Sparql label based": "SELECT DISTINCT ?P2124_9 WHERE { wd:[Itzy] p:<membership> [ ps:<membership> ?P2124_9 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P2124_9 WHERE { wd:Q60732823 p:P2124 [ ps:P2124 ?P2124_9 ] . }",
        "Squall label based": "what is a <membership> of [Itzy]?",
        "Squall ID based": "what is a <P2124> of <Q60732823>?"
    },
    {
        "Question": "Which Hunger Games trilogy book is the longest?",
        "ID": "f301b8f5",
        "Entities": "Q11679:The Hunger Games",
        "Mintaka Answer": "Q837140:Catching Fire",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Hunger Games 3]  and that has  the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q11679> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 3] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_6 ] . } ORDER BY DESC(?P1104_6) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q11679 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_6 ] . } ORDER BY DESC(?P1104_6) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Hunger Games 3] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q11679> and has the highest <P1104>?"
    },
    {
        "Question": "Who was a U.S. president and was born on March 16, 1751?",
        "ID": "f3fb5fd7",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11813:James Madison",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States]  and that has as a <date of birth>  1751-03-16T00:00:00Z",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has as a <P569> 1751-03-16T00:00:00Z",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_1 p:<date of birth> [ ps:<date of birth> \"1751-03-16T00:00:00Z\"^^xsd:dateTime ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_1 p:P569 [ ps:P569 \"1751-03-16T00:00:00Z\"^^xsd:dateTime ] . }",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has <date of birth> 1751-03-16T00:00:00Z?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has <P569> 1751-03-16T00:00:00Z?"
    },
    {
        "Question": "Which is the oldest Star Wars book?",
        "ID": "36c44c5a",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "Q6272668:Star Wars: From the Adventures of Luke Skywalker",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [Star Wars 2]  and that has  the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q462> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Star Wars 2] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q462 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Star Wars 2] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q462> and has the lowest <P577>?"
    },
    {
        "Question": "Which Obama daughter did not attend an Ivy League School?",
        "ID": "981bf68d",
        "Entities": "Q76:Barack Obama, Q49113:Ivy League",
        "Mintaka Answer": "Q15070048:Sasha Obama",
        "Sparklis label based": "[Barack Obama]   has  a <child> that not is <educated at>  something that is the <member of> [Ivy League]",
        "Sparklis ID based": "<Q76> has a <P40> that not is <P69> something that is the <P463> <Q49113>",
        "Sparql label based": "SELECT DISTINCT ?P40_8 WHERE { wd:[Barack Obama] p:<child> [ ps:<child> ?P40_8 ] . FILTER ( NOT EXISTS { ?P40_8 p:<educated at> [ ps:<educated at> ?P463_41 ] . ?P463_41 p:<member of> [ ps:<member of> wd:[Ivy League] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P40_8 WHERE { wd:Q76 p:P40 [ ps:P40 ?P40_8 ] . FILTER ( NOT EXISTS { ?P40_8 p:P69 [ ps:P69 ?P463_41 ] . ?P463_41 p:P463 [ ps:P463 wd:Q49113 ] . } ) }",
        "Squall label based": "what is a <child> of [Barack Obama] and has not a <educated at> that has <member of> [Ivy League]?",
        "Squall ID based": "what is a <P40> of <Q76> and has not a <P69> that has <P463> <Q49113>?"
    },
    {
        "Question": "What is the second biggest state in the United States?",
        "ID": "6894fd63",
        "Entities": "Q30:United States of America,2:None",
        "Mintaka Answer": "Q1439:Texas",
        "Sparklis label based": "give me every [U.S. state] that has the highest-to-lowest <area>",
        "Sparklis ID based": "give me every <Q35657> that has the highest-to-lowest <P2046>",
        "Sparql label based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<area> [ ps:<area> ?P2046_37 ] . } ORDER BY DESC(?P2046_37) OFFSET 1 limit 1",
        "Sparql ID based": "SELECT DISTINCT ?Q35657_1 WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P2046 [ ps:P2046 ?P2046_37 ] . } ORDER BY DESC(?P2046_37) OFFSET 1 limit 1",
        "Squall label based": "which [U.s. State] has the 2nd highest <area>?",
        "Squall ID based": "which <Q35657> has the 2nd highest <P2046>?"
    },
    {
        "Question": "What basketball team is from Indiana?",
        "ID": "cac9b624",
        "Entities": "Q1415:Indiana",
        "Mintaka Answer": "Q170329:Indiana Pacers",
        "Sparklis label based": "give me every [basketball team] that has as a headquarters <location> that is the <capital of> Indiana",
        "Sparklis ID based": "give me every <Q13393265> that has as a headquarters <P276> that is the <P1376> Indiana",
        "Sparql label based": "SELECT DISTINCT ?Q13393265_16 WHERE { ?Q13393265_16 wdt:<instance of> wd:[Basketball Team] . ?Q13393265_16 p:<headquarters location> [ ps:<headquarters location> ?P159_8 ] . wd:[Indiana] p:<capital> [ ps:<capital> ?P159_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q13393265_16 WHERE { ?Q13393265_16 wdt:P31 wd:Q13393265 . ?Q13393265_16 p:P159 [ ps:P159 ?P159_8 ] . wd:Q1415 p:P36 [ ps:P36 ?P159_8 ] . }",
        "Squall label based": "which [Basketball Team] has <headquarters location> a <capital> of [Indiana]?",
        "Squall ID based": "which <Q13393265> has <P159> a <P36> of <Q1415>?"
    },
    {
        "Question": "Which Avengers movie did Loki not appear in?",
        "ID": "082ed764",
        "Entities": "Q24046118:Loki, Q20021634:Avengers",
        "Mintaka Answer": "Q14171368:Avengers: Age of Ultron",
        "Sparklis label based": "give me every [film]      that has as a <part of the series>  [Avengers 2] and that not has  a <cast member> with <character role> [Loki]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q20021634> and that not has a <P161> with <P453> <Q24046118>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Avengers 2] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> ?P161_5 ; n1:<character role> wd:[Loki] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q20021634 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 ?P161_5 ; n1:P453 wd:Q24046118 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Avengers 2] and has not <cast member> at <character role> [Loki] a thing?",
        "Squall ID based": "which <Q11424> has <P179> <Q20021634> and has not <P161> at <P453> <Q24046118> a thing?"
    },
    {
        "Question": "How many members are in Big Bang?",
        "ID": "4d130bef",
        "Entities": "Q2234998:Big Bang",
        "Mintaka Answer": "Q495577:G-Dragon,Q495571:T.O.P,Q482991:Taeyang,Q194798:Daesung",
        "Sparklis label based": "give me every [human] that is the part(s) of [Big Bang]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q282104>",
        "Sparql label based": "select distinct ?q5_8 where { ?q5_8 wdt:<instance of> wd:[Human] . wd:[Big Bang] p:<has part(s)> [ ps:<has part(s)> ?q5_8 ] . }",
        "Sparql ID based": "select distinct ?q5_8 where { ?q5_8 wdt:P31 wd:Q5 . wd:Q282104 p:P527 [ ps:P527 ?q5_8 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [Big Bang]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q282104>?"
    },
    {
        "Question": "Which governors of Michigan since 2003 have not been Democrats?",
        "ID": "fb527fcb",
        "Entities": "Q1166:Michigan, Q29552:Democratic Party",
        "Mintaka Answer": "Q887111:Rick Snyder",
        "Sparklis label based": "give me every [human] that has as a <position held>  [Governor of Michigan]  with a <start time>  and that not has as a <member of political party>  [Democratic Party]   and where the year of the <start time> > 2003",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q5589680> with a <P580> and that not has as a <P102> <Q29552> and where the year of the <P580> > 2003",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n1:<start time> ?P580_6 ; ps:<position held> wd:[Governor Of Michigan] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of political party> [ ps:<member of political party> wd:[Democratic Party] ] . } ) FILTER ( (year(?P580_6) > \"2003\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n1:P580 ?P580_6 ; ps:P39 wd:Q5589680 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P102 [ ps:P102 wd:Q29552 ] . } ) FILTER ( (year(?P580_6) > \"2003\"^^xsd:integer) ) }",
        "Squall label based": "which [Human] has <position held> at a <start time> whose year is greater than 2003 [Governor Of Michigan] and has not <member of political party> [Democratic Party]?",
        "Squall ID based": "which <Q5> has <P39> at a <P580> whose year is greater than 2003 <Q5589680> and has not <P102> <Q29552>?"
    },
    {
        "Question": "Who is the Colorado Rockies mascot?",
        "ID": "c75731af",
        "Entities": "Q388858:Colorado Rockies",
        "Mintaka Answer": "Q56345143:Dinger",
        "Sparklis label based": "[Colorado Rockies] has a <mascot>",
        "Sparklis ID based": "<Q388858> has a <P822>",
        "Sparql label based": "select distinct ?p822_9 where { wd:[Colorado Rockies] p:<mascot> [ ps:<mascot> ?p822_9 ] . }",
        "Sparql ID based": "select distinct ?p822_9 where { wd:Q388858 p:P822 [ ps:P822 ?p822_9 ] . }",
        "Squall label based": "what is a <mascot> of [Colorado Rockies]?",
        "Squall ID based": "what is a <P822> of <Q388858>?"
    },
    {
        "Question": "What is the highest-grossing movie in the world?",
        "ID": "9c9b40ee",
        "Entities": "Q11424:film",
        "Mintaka Answer": "Q24871:Avatar",
        "Sparklis label based": "give me every [film] that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 ?P2142_45 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<box office> [ ps:<box office> ?P2142_45 ] . } ORDER BY DESC(?P2142_45) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 ?P2142_45 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P2142 [ ps:P2142 ?P2142_45 ] . } ORDER BY DESC(?P2142_45) LIMIT 1",
        "Squall label based": "which [Film] has the highest <box office>?",
        "Squall ID based": "which <Q11424> has the highest <P2142>?"
    },
    {
        "Question": "What was the first movie that featured 50 Cent?",
        "ID": "20c6ce3f",
        "Entities": "Q6060:50 Cent,1:None",
        "Mintaka Answer": "Q641723:Get Rich or Die Tryin'",
        "Sparklis label based": "give me every [film] that has as a <cast member> [50 Cent] and that has the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q6060> and that has the lowest-to-highest <P577>",
        "Sparql label based": "select distinct ?q11424_8 where { ?q11424_8 wdt:<instance of> wd:[Film] . ?q11424_8 p:<cast member> [ ps:<cast member> wd:[50 Cent] ] . ?q11424_8 p:<publication date> [ ps:<publication date> ?p577_12 ] . } order by asc(?p577_12) limit 1",
        "Sparql ID based": "select distinct ?q11424_8 where { ?q11424_8 wdt:P31 wd:Q11424 . ?q11424_8 p:P161 [ ps:P161 wd:Q6060 ] . ?q11424_8 p:P577 [ ps:P577 ?p577_12 ] . } order by asc(?p577_12) limit 1",
        "Squall label based": "which [Film] has <cast member> [50 Cent] and has the lowest <publication date>?",
        "Squall ID based": "which <Q11424> has <P161> <Q6060> and has the lowest <P577>?"
    },
    {
        "Question": "Which is the longest Hunger Games book?",
        "ID": "df24957d",
        "Entities": "Q11679:The Hunger Games",
        "Mintaka Answer": "Q81925268:The Ballad of Songbirds and Snakes",
        "Sparklis label based": "give me every [literary work] that is based on  [The Hunger Games 3]  and that has  the highest-to-lowest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that is based on <Q11679> and that has the highest-to-lowest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<based on> [ ps:<based on> wd:[The Hunger Games 3] ] . ?Q7725634_1 p:<number of pages> [ ps:<number of pages> ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1104_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P144 [ ps:P144 wd:Q11679 ] . ?Q7725634_1 p:P1104 [ ps:P1104 ?P1104_5 ] . } ORDER BY DESC(?P1104_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <based on> [The Hunger Games 3] and has the highest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P144> <Q11679> and has the highest <P1104>?"
    },
    {
        "Question": "Who plays for the Brooklyn Nets and previously played for the Warriors?",
        "ID": "f7097812",
        "Entities": "Q157376:Golden State Warriors, Q572134:Brooklyn Nets",
        "Mintaka Answer": "Q29545:Kevin Durant",
        "Sparklis label based": "give me every [human] that has as an <occupation>  [basketball player]  and that has as a <member of sports team>  [Golden State Warriors] with an <end time>  and  [Brooklyn Nets]  and not with an <end time>",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q3665646> and that has as a <P54> <Q157376> with an <P582> and <Q572134> and not with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Basketball Player] ] . ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Golden State Warriors] ; n1:<end time> ?P582_9 ] . ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Brooklyn Nets] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<member of sports team> [ ps:<member of sports team> wd:[Brooklyn Nets] ; n1:<end time> ?P582_17 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q3665646 ] . ?Q5_1 p:P54 [ ps:P54 wd:Q157376 ; n1:P582 ?P582_9 ] . ?Q5_1 p:P54 [ ps:P54 wd:Q572134 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P54 [ ps:P54 wd:Q572134 ; n1:P582 ?P582_17 ] . } ) }",
        "Squall label based": "which [Human] has <occupation> [Basketball Player] and has <member of sports team> [Brooklyn Nets] and  at a <end time> [Golden State Warriors] and has not <member of sports team> at a <end time> [Brooklyn Nets]?",
        "Squall ID based": "which <Q5> has <P106> <Q3665646> and has <P54> <Q572134> and  at a <P582> <Q157376> and has not <P54> at a <P582> <Q572134>?"
    },
    {
        "Question": "Which Roman leader committed suicide?",
        "ID": "350ea1cf",
        "Entities": "Q1747689:Ancient Rome",
        "Mintaka Answer": "Q1413:Nero",
        "Sparklis label based": "give me every [human]      that has as a  <country of citizenship>   [Ancient Rome]      and that has as a <manner of death>  [consensual homicide]",
        "Sparklis ID based": "give me every <Q5> that has as a <P27> <Q1747689> and that has as a <P1196> <Q3882183>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Ancient Rome] ] . ?Q5_1 p:<manner of death> [ ps:<manner of death> wd:[Consensual Homicide] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P27 [ ps:P27 wd:Q1747689 ] . ?Q5_1 p:P1196 [ ps:P1196 wd:Q3882183 ] . }",
        "Squall label based": "which [Human] has <country of citizenship> [Ancient Rome] and has <manner of death> [Consensual Homicide]?",
        "Squall ID based": "which <Q5> has <P27> <Q1747689> and has <P1196> <Q3882183>?"
    },
    {
        "Question": "How many total Star Wars movies are there?",
        "ID": "e26467cc",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "12",
        "Sparklis label based": "give me every [film] that has as a <part of the series>  [Star Wars] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q22092344> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_135) AS ?number_of_171) WHERE { ?Q11424_135 wdt:<instance of> wd:[Film] . ?Q11424_135 p:<part of the series> [ ps:<part of the series> wd:[Star Wars] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_135) AS ?number_of_171) WHERE { ?Q11424_135 wdt:P31 wd:Q11424 . ?Q11424_135 p:P179 [ ps:P179 wd:Q22092344 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Star Wars]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q22092344>?"
    },
    {
        "Question": "Who is the youngest current US governor?",
        "ID": "982450cf",
        "Entities": "Q889821: governor",
        "Mintaka Answer": "Q3105215: Ron DeSantis",
        "Sparklis label based": "give me every [human] that has the highest-to-lowest <date of birth> and whose <position held> has as a <country> [United States of America] and is the <subclass of> governor",
        "Sparklis ID based": "give me every <Q5> that has the highest-to-lowest <P569> and whose <P39> has as a <P17> <Q30> and is the <P279> governor",
        "Sparql label based": "SELECT DISTINCT ?Q5_227 WHERE { ?Q5_227 wdt:<instance of> n1:[Human] . ?Q5_227 wdt:<date of birth> ?P569_8 . ?Q5_227 wdt:<position held> ?P39_219 . ?P39_219 wdt:<country> n1:[United States Of America] . ?P39_219 wdt:<subclass of> n1:[Governor 2] . } ORDER BY DESC(?P569_8) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_227 WHERE { ?Q5_227 wdt:P31 n1:Q5 . ?Q5_227 wdt:P569 ?P569_8 . ?Q5_227 wdt:P39 ?P39_219 . ?P39_219 wdt:P17 n1:Q30 . ?P39_219 wdt:P279 n1:Q889821 . } ORDER BY DESC(?P569_8) LIMIT 1",
        "Squall label based": "which [Human] has the highest <date of birth> and has a <position held> that has <country> [United States Of America] and has <subclass of> [Governor 2]?",
        "Squall ID based": "which <Q5> has the highest <P569> and has a <P39> that has <P17> <Q30> and has <P279> <Q889821>?"
    },
    {
        "Question": "How many Indiana Jones movies has Steven Spielberg directed?",
        "ID": "80a92807",
        "Entities": "Q8877:Steven Spielberg,Q2562640:Indiana Jones",
        "Mintaka Answer": "Q174284:Raiders of the Lost Ark,Q179215:Indiana Jones and the Temple of Doom,Q185658:Indiana Jones and the Last Crusade,Q182373:Indiana Jones and the Kingdom of the Crystal Skull",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Indiana Jones] and that has as a <director> [Steven Spielberg] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q98018448> and that has as a <P57> <Q8877> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_159) AS ?number_of_196) WHERE { ?Q11424_159 wdt:<instance of> wd:[Film] . ?Q11424_159 p:<part of the series> [ ps:<part of the series> wd:[Indiana Jones] ] . ?Q11424_159 p:<director> [ ps:<director> wd:[Steven Spielberg] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_159) AS ?number_of_196) WHERE { ?Q11424_159 wdt:P31 wd:Q11424 . ?Q11424_159 p:P179 [ ps:P179 wd:Q98018448 ] . ?Q11424_159 p:P57 [ ps:P57 wd:Q8877 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Indiana Jones] and has <director> [Steven Spielberg]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q98018448> and has <P57> <Q8877>?"
    },
    {
        "Question": "Who was the 1st president of the United States?",
        "ID": "6c275831",
        "Entities": "Q30:United States of America,1:None",
        "Mintaka Answer": "Q23:George Washington",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 1 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 1 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"1\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"1\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"1\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"1\" <Q11696>?"
    },
    {
        "Question": "How many members are in Spice Girls?",
        "ID": "18fc316d",
        "Entities": "Q55641:Spice Girls",
        "Mintaka Answer": "Q236005:Melanie Brown,Q151830:Melanie C,Q219878:Emma Bunton,Q19845:Geri Halliwell,Q19810:Victoria Beckham",
        "Sparklis label based": "give me every [human] that is the part(s) of [Spice Girls]",
        "Sparklis ID based": "give me every <Q5> that is the part(s) of <Q55641>",
        "Sparql label based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:<instance of> wd:[Human] . wd:[Spice Girls] p:<has part(s)> [ ps:<has part(s)> ?Q5_39 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_39 WHERE { ?Q5_39 wdt:P31 wd:Q5 . wd:Q55641 p:P527 [ ps:P527 ?Q5_39 ] . }",
        "Squall label based": "which [Human] is a <has part(s)> of [Spice Girls]?",
        "Squall ID based": "which <Q5> is a <P527> of <Q55641>?"
    },
    {
        "Question": "What is the second movie in the Hunger Games series?",
        "ID": "efaa8847",
        "Entities": "Q11885031:The Hunger Games,2:None",
        "Mintaka Answer": "Q574583:The Hunger Games: Catching Fire",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 2 [The Hunger Games 4]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 2 <Q11885031>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"2\" ; ps:<part of the series> wd:[The Hunger Games 4] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"2\" ; ps:P179 wd:Q11885031 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"2\" [The Hunger Games 4]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"2\" <Q11885031>?"
    },
    {
        "Question": "How many of Richard Ford's books won a Pulitzer Prize?",
        "ID": "e1b98464",
        "Entities": "Q547794:Richard Ford, Q46525:Pulitzer Prize",
        "Mintaka Answer": "1",
        "Sparklis label based": "give me every [literary work] that has as an <author>  [Richard Ford]  and that <award received>  something that is the <part of> [Pulitzer Prize]   and give me the number of part",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q547794> and that <P166> something that is the <P361> <Q46525> and give me the number of part",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P361_9) AS ?number_of_47) WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<author> [ ps:<author> wd:[Richard Ford] ] . ?Q7725634_1 p:<award received> [ ps:<award received> ?P361_9 ] . ?P361_9 p:<part of> [ ps:<part of> wd:[Pulitzer Prize] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P361_9) AS ?number_of_47) WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P50 [ ps:P50 wd:Q547794 ] . ?Q7725634_1 p:P166 [ ps:P166 ?P361_9 ] . ?P361_9 p:P361 [ ps:P361 wd:Q46525 ] . }",
        "Squall label based": "how many thing has <part of> [Pulitzer Prize] and is a <award received> of a [Literary Work] that has <author> [Richard Ford]?",
        "Squall ID based": "how many thing has <P361> <Q46525> and is a <P166> of a <Q7725634> that has <P50> <Q547794>?"
    },
    {
        "Question": "Who was the 23th president of the United States?",
        "ID": "5e74dd9d",
        "Entities": "Q30:United States of America,23:None",
        "Mintaka Answer": "Q35678:Benjamin Harrison",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 23 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 23 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"23\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"23\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"23\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"23\" <Q11696>?"
    },
    {
        "Question": "Which book authored by Dan Brown was released in 2000?",
        "ID": "0d9efab6",
        "Entities": "Q7345:Dan Brown,2000:None",
        "Mintaka Answer": "Q182502:Angels & Demons",
        "Sparklis label based": "give me every [literary work]\n\n    that has as an <author> \u26ac [Dan Brown] \u26ac\n    and that has \u26ac a <publication date> \u26ac\n\nand give me the year of the <publication date> that is 2000",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q7345> and that has a <P577> and give me the year of the <P577> that is 2000",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_138 WHERE { ?Q7725634_138 wdt:<instance of> wd:[Literary Work] . ?Q7725634_138 p:<author> [ ps:<author> wd:[Dan Brown] ] . ?Q7725634_138 p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_130) FILTER ( ?expr_130 = \"2000\"^^xsd:integer ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_138 WHERE { ?Q7725634_138 wdt:P31 wd:Q7725634 . ?Q7725634_138 p:P50 [ ps:P50 wd:Q7345 ] . ?Q7725634_138 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_130) FILTER ( ?expr_130 = \"2000\"^^xsd:integer ) }",
        "Squall label based": "which [Literary Work] has <author> [Dan Brown] and has a <publication date> whose year is 2000?",
        "Squall ID based": "which <Q7725634> has <P50> <Q7345> and has a <P577> whose year is 2000?"
    },
    {
        "Question": "When did the Achaemenid Empire end?",
        "ID": "a9f45b8e",
        "Entities": "Q389688:Achaemenid Empire",
        "Mintaka Answer": "330 BC",
        "Sparklis label based": "[Achaemenid Empire] has  a <dissolved or abolished>",
        "Sparklis ID based": "<Q389688> has a <P576>",
        "Sparql label based": "SELECT DISTINCT ?P576_8 WHERE { wd:[Achaemenid Empire] p:<dissolved or abolished> [ ps:<dissolved or abolished> ?P576_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P576_8 WHERE { wd:Q389688 p:P576 [ ps:P576 ?P576_8 ] . }",
        "Squall label based": "what is a <dissolved or abolished> of [Achaemenid Empire]?",
        "Squall ID based": "what is a <P576> of <Q389688>?"
    },
    {
        "Question": "What was Harper Lee's last book?",
        "ID": "181dc5f6",
        "Entities": "Q182658:Harper Lee",
        "Mintaka Answer": "Q18949486:Go Set a Watchman",
        "Sparklis label based": "give me every [literary work] that has as an <author> [Harper Lee] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as an <P50> <Q182658> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<author> [ ps:<author> wd:[Harper Lee] ] . ?Q7725634_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P577_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P50 [ ps:P50 wd:Q182658 ] . ?Q7725634_1 p:P577 [ ps:P577 ?P577_5 ] . } ORDER BY DESC(?P577_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <author> [Harper Lee] and has the highest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P50> <Q182658> and has the highest <P577>?"
    },
    {
        "Question": "Which US president was the tallest?",
        "ID": "8113d9e9",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q91:Abraham Lincoln",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] and that has the highest-to-lowest <height>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has the highest-to-lowest <P2048>",
        "Sparql label based": "select distinct ?q5_1 ?p2048_5 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?q5_1 p:<height> [ ps:<height> ?p2048_5 ] . } order by desc(?p2048_5) limit 1",
        "Sparql ID based": "select distinct ?q5_1 ?p2048_5 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q11696 ] . ?q5_1 p:P2048 [ ps:P2048 ?p2048_5 ] . } order by desc(?p2048_5) limit 1",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has the highest <height>?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has the highest <P2048>?"
    },
    {
        "Question": "What is the third book in the Harry Potter series called?",
        "ID": "482a7994",
        "Entities": "Q8337:Harry Potter,3:None",
        "Mintaka Answer": "Q47598:Harry Potter and the Prisoner of Azkaban",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with <series ordinal> 3 [Harry Potter 2]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with <P1545> 3 <Q8337>",
        "Sparql label based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:<instance of> wd:[Literary Work] . ?q7725634_1 p:<part of the series> [ n2:<series ordinal> \"3\" ; ps:<part of the series> wd:[Harry Potter 2] ] . }",
        "Sparql ID based": "select distinct ?q7725634_1 where { ?q7725634_1 wdt:P31 wd:Q7725634 . ?q7725634_1 p:P179 [ n2:P1545 \"3\" ; ps:P179 wd:Q8337 ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"3\" [Harry Potter 2]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"3\" <Q8337>?"
    },
    {
        "Question": "Which US city is nicknamed The Big Easy?",
        "ID": "75116fc1",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q34404:New Orleans",
        "Sparklis label based": "give me every [city in the United States] that has as a <nickname>  [The Big Easy]  and that has as a <country>  [United States of America]",
        "Sparklis ID based": "give me every <Q1093829> that has as a <P1449> [The_Big_Easy] and that has as a <P17> <Q30>",
        "Sparql label based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:<instance of> wd:[City In The United States] . ?Q1093829_1 p:<nickname> [ ps:<nickname> \"The Big Easy\"@en ] . ?Q1093829_1 p:<country> [ ps:<country> wd:[United States Of America] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q1093829_1 WHERE { ?Q1093829_1 wdt:P31 wd:Q1093829 . ?Q1093829_1 p:P1449 [ ps:P1449 \"The Big Easy\"@en ] . ?Q1093829_1 p:P17 [ ps:P17 wd:Q30 ] . }",
        "Squall label based": "which [City In The United States] has <nickname> \"The Big Easy\"@en and has <country> [United States Of America]?",
        "Squall ID based": "which <Q1093829> has <P1449> \"The Big Easy\"@en and has <P17> <Q30>?"
    },
    {
        "Question": "How many Dirty Harry movies are there?",
        "ID": "92f2e719",
        "Entities": "Q2712648:Dirty Harry",
        "Mintaka Answer": "Q110206:Dirty Harry,Q458852:Magnum Force,Q592457:The Enforcer,Q785461:Sudden Impact,Q263460:The Dead Pool",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Dirty Harry] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q2712648> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Dirty Harry] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q2712648 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Dirty Harry]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q2712648>?"
    },
    {
        "Question": "Who was the first to found Motown Records?",
        "ID": "6e51d75e",
        "Entities": "Q43327:Motown",
        "Mintaka Answer": "Q355288:Berry Gordy",
        "Sparklis label based": "[Motown] is founded by  something",
        "Sparklis ID based": "<Q43327> is founded by something",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { wd:[Motown] p:<founder> [ ps:<founder> ?thing_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { wd:Q43327 p:P112 [ ps:P112 ?thing_8 ] . }",
        "Squall label based": "what is a <founder> of [Motown]?",
        "Squall ID based": "what is a <P112> of <Q43327>?"
    },
    {
        "Question": "Who was the 12th president of the United States?",
        "ID": "6a4265b5",
        "Entities": "Q30:United States of America,12:None",
        "Mintaka Answer": "Q11896:Zachary Taylor",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 12 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 12 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"12\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"12\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"12\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"12\" <Q11696>?"
    },
    {
        "Question": "What was Michael Jackson's second Grammy for?",
        "ID": "710d6886",
        "Entities": "Q41254:Grammy Award, Q2831:Michael Jackson",
        "Mintaka Answer": "1984",
        "Sparklis label based": "[Michael Jackson] <award received> with the lowest-to-highest point in time  something that is the <instance of>[Grammy Award]s",
        "Sparklis ID based": "<Q2831> <P166> with the lowest-to-highest point in time something that is the <instance_of>[Grammy_Award]s",
        "Sparql label based": "SELECT DISTINCT ?P585_10 ?P31_6 WHERE { wd:[Michael Jackson] p:<award received> [ n1:<point in time> ?P585_10 ; ps:<award received> ?P31_6 ] . ?P31_6 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . } ORDER BY ASC(?P585_10) OFFSET 1 LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P585_10 ?P31_6 WHERE { wd:Q2831 p:P166 [ n1:P585 ?P585_10 ; ps:P166 ?P31_6 ] . ?P31_6 p:P31 [ ps:P31 wd:Q41254 ] . } ORDER BY ASC(?P585_10) OFFSET 1 LIMIT 1",
        "Squall label based": "what is the 2nd lowest thing at which <point in time> [Michael Jackson] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the 2nd lowest thing at which <P585> <Q2831> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "Who was formerly a WWE superstar and now a mayor?",
        "ID": "94c0b45c",
        "Entities": "Q35339:WWE, Q30185:mayor",
        "Mintaka Answer": "Q44354:Kane",
        "Sparklis label based": "give me every [human] that has as a <position held>  [mayor]  and that has as an <occupation>  [politician]  and  [professional wrestler]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q30185> and that has as an <P106> <Q82955> and <Q13474373>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Mayor] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Politician] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Professional Wrestler] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q30185 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q82955 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q13474373 ] . }",
        "Squall label based": "which [Human] has <position held> [Mayor] and has <occupation> [Politician] and [Professional Wrestler]?",
        "Squall ID based": "which <Q5> has <P39> <Q30185> and has <P106> <Q82955> and <Q13474373>?"
    },
    {
        "Question": "Which movie was directed by Edward James Olmos and starred Edward James Olmos?",
        "ID": "a514e83a",
        "Entities": "Q211415:Edward James Olmos,Q211415:Edward James Olmos",
        "Mintaka Answer": "Q642516:American Me",
        "Sparklis label based": "give me every [film] that has as a <director> [Edward James Olmos] and that has as a <cast member> [Edward James Olmos]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q211415> and that has as a <P161> <Q211415>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<director> [ ps:<director> wd:[Edward James Olmos] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Edward James Olmos] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P57 [ ps:P57 wd:Q211415 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q211415 ] . }",
        "Squall label based": "which [Film] has <director> [Edward James Olmos] and has <cast member> [Edward James Olmos]?",
        "Squall ID based": "which <Q11424> has <P57> <Q211415> and has <P161> <Q211415>?"
    },
    {
        "Question": "Who played Max Zorin in a Bond movie?",
        "ID": "4b083406",
        "Entities": "Q844:James Bond,Q2219692:Max Zorin",
        "Mintaka Answer": "Q185051:Christopher Walken",
        "Sparklis label based": "give me every [human] that is the <cast member> of a [film] that has as a <part of the series> [James Bond] and that is the <performer> of [Max Zorin]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of a <Q11424> that has as a <P179> <Q2484680> and that is the <P175> of <Q2219692>",
        "Sparql label based": "SELECT distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q11424_38 wdt:<instance of> wd:[Film] . ?q11424_38 p:<cast member> [ ps:<cast member> ?q5_1 ] . ?q11424_38 p:<part of the series> [ ps:<part of the series> wd:[James Bond] ] . wd:[Max Zorin] p:<performer> [ ps:<performer> ?q5_1 ] . }",
        "Sparql ID based": "SELECT distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q11424_38 wdt:P31 wd:Q11424 . ?q11424_38 p:P161 [ ps:P161 ?q5_1 ] . ?q11424_38 p:P179 [ ps:P179 wd:Q2484680 ] . wd:Q2219692 p:P175 [ ps:P175 ?q5_1 ] . }",
        "Squall label based": "which [Human] is a <performer> of [Max Zorin] and is a <cast member> of a [Film] that has <part of the series> [James Bond]?",
        "Squall ID based": "which <Q5> is a <P175> of <Q2219692> and is a <P161> of a <Q11424> that has <P179> <Q2484680>?"
    },
    {
        "Question": "Did Die Hard come out after 2000?",
        "ID": "ce4231fe",
        "Entities": "Q105598:Die Hard,2000:None",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Die Hard 2]  has a <publication date>\nand where the year of the <publication date> > 2000",
        "Sparklis ID based": "<Q105598> has a <P577> and where the year of the <P577> > 2000",
        "Sparql label based": "ASK { wd:[Die Hard 2] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER (year(?P577_7) > \"2000\"^^xsd:integer) }",
        "Sparql ID based": "ASK { wd:Q105598 p:P577 [ ps:P577 ?P577_7 ] . FILTER (year(?P577_7) > \"2000\"^^xsd:integer) }",
        "Squall label based": "whether [Die Hard 2] has a <publication date> whose year is greater than 2000?",
        "Squall ID based": "whether <Q105598> has a <P577> whose year is greater than 2000?"
    },
    {
        "Question": "When was the last eruption of Mount Vesuvius?",
        "ID": "344da446",
        "Entities": "Q524:Mount Vesuvius",
        "Mintaka Answer": "1944-03-01 0:00:00",
        "Sparklis label based": "[Mount Vesuvius] has as a <significant event> with the highest-to-lowest <point in time> \u26ac a [volcanic eruption]",
        "Sparklis ID based": "<Q524> has as a <P793> with the highest-to-lowest <P585> a <Q7692360>",
        "Sparql label based": "SELECT DISTINCT ?P585_12 WHERE { ?P793_8 wdt:<instance of> wd:[Volcanic Eruption] . wd:[Mount Vesuvius] p:<significant event> [ n1:<point in time> ?P585_12 ; ps:<significant event> ?P793_8 ] . } ORDER BY DESC(?P585_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P585_12 WHERE { ?P793_8 wdt:P31 wd:Q7692360 . wd:Q524 p:P793 [ n1:P585 ?P585_12 ; ps:P793 ?P793_8 ] . } ORDER BY DESC(?P585_12) LIMIT 1",
        "Squall label based": "what is the highest thing at which <point in time> [Mount Vesuvius] has <significant event> a [Volcanic Eruption]?",
        "Squall ID based": "what is the highest thing at which <P585> <Q524> has <P793> a <Q7692360>?"
    },
    {
        "Question": "Who is the main character of Metal Gear?",
        "ID": "f9559388",
        "Entities": "Q216655:Metal Gear",
        "Mintaka Answer": "Q1621656:Solid Snake",
        "Sparklis label based": "[Metal Gear] has a <characters> that has as a <narrative role> [protagonist]",
        "Sparklis ID based": "<Q6552947> has a <P674> that has as a <P5800> <Q215972>",
        "Sparql label based": "select distinct ?p674_18 where { wd:[Metal Gear] p:<characters> [ ps:<characters> ?p674_18 ] . ?p674_18 p:<narrative role> [ ps:<narrative role> wd:[Protagonist] ] . }",
        "Sparql ID based": "select distinct ?p674_18 where { wd:Q6552947 p:P674 [ ps:P674 ?p674_18 ] . ?p674_18 p:P5800 [ ps:P5800 wd:Q215972 ] . }",
        "Squall label based": "what is a <characters> of [Metal Gear] and has <narrative role> [Protagonist]?",
        "Squall ID based": "what is a <P674> of <Q6552947> and has <P5800> <Q215972>?"
    },
    {
        "Question": "How many members in Blackpink?",
        "ID": "a0a000df",
        "Entities": "Q25056945:Blackpink",
        "Mintaka Answer": "Q27655361:Kim Ji-soo,Q26262599:Jennie,Q27655344:Ros\u00e9,Q26707663:Lisa",
        "Sparklis label based": "give me every [human] that is the <member of> [Blackpink]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q25056945>",
        "Sparql label based": "SELECT DISTINCT ?Q5_278 WHERE { ?Q5_278 wdt:<instance of> wd:[Human] . ?Q5_278 p:<member of> [ ps:<member of> wd:[Blackpink] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_278 WHERE { ?Q5_278 wdt:P31 wd:Q5 . ?Q5_278 p:P463 [ ps:P463 wd:Q25056945 ] . }",
        "Squall label based": "which [Human] has <member of> [Blackpink]?",
        "Squall ID based": "which <Q5> has <P463> <Q25056945>?"
    },
    {
        "Question": "Which movie was directed by Tim Burton and came out in 1990?",
        "ID": "7b9d62ee",
        "Entities": "Q56008:Tim Burton,1990:None",
        "Mintaka Answer": "Q217182:Edward Scissorhands",
        "Sparklis label based": "give me every [film] that has as a <director> [Tim Burton] and that has a <publication date> and where the year of the <publication date> = 1990",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q56008> and that has a <P577> and where the year of the <P577> = 1990",
        "Sparql label based": "SELECT distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> wd:[Tim Burton] ] . ?q11424_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . filter ( (year(?p577_5) = \"1990\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 wd:Q56008 ] . ?q11424_1 p:P577 [ ps:P577 ?p577_5 ] . filter ( (year(?p577_5) = \"1990\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [Tim Burton] and has a <publication date> whose year is 1990?",
        "Squall ID based": "which <Q11424> has <P57> <Q56008> and has a <P577> whose year is 1990?"
    },
    {
        "Question": "Who was the 12th vice president of the United States?",
        "ID": "fd847934",
        "Entities": "Q30:United States of America,12:None",
        "Mintaka Answer": "Q12306:Millard Fillmore",
        "Sparklis label based": "give me every [human] that has as a <position held> [Vice President of the United States] with <series ordinal> 12",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11699> with <P1545> 12",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ; n1:<series ordinal> \"12\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11699 ; n1:P1545 \"12\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"12\" [Vice President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"12\" <Q11699>?"
    },
    {
        "Question": "What is the largest city in California by population?",
        "ID": "f4f39e5f",
        "Entities": "Q99:California",
        "Mintaka Answer": "Q65:Los Angeles",
        "Sparklis label based": "give me every [city] that has  a <located in the administrative territorial entity> that has as a <located in the administrative territorial entity>  [California]   and that has  the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has a <P131> that has as a <P131> <Q99> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q515_1 WHERE { ?Q515_1 wdt:<instance of> wd:[City] . ?Q515_1 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_104 ] . ?P131_104 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[California] ] . ?Q515_1 p:<population> [ ps:<population> ?P1082_141 ] . } ORDER BY DESC(?P1082_141) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q515_1 WHERE { ?Q515_1 wdt:P31 wd:Q515 . ?Q515_1 p:P131 [ ps:P131 ?P131_104 ] . ?P131_104 p:P131 [ ps:P131 wd:Q99 ] . ?Q515_1 p:P1082 [ ps:P1082 ?P1082_141 ] . } ORDER BY DESC(?P1082_141) LIMIT 1",
        "Squall label based": "which [City] has the highest <population> and has a <located in the administrative territorial entity> that has <located in the administrative territorial entity> [California]?",
        "Squall ID based": "which <Q515> has the highest <P1082> and has a <P131> that has <P131> <Q99>?"
    },
    {
        "Question": "Who was Kentucky's first governor?",
        "ID": "55649000",
        "Entities": "Q1603:Kentucky,1:None",
        "Mintaka Answer": "Q878398:Isaac Shelby",
        "Sparklis label based": "give me every [human] that has as a <position held> [Governor of Kentucky] with the lowest-to-highest <start time>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q4151335> with the lowest-to-highest <P580>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Kentucky] ; n1:<start time> ?P580_9 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 ?P580_9 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q4151335 ; n1:P580 ?P580_9 ] . } ORDER BY ASC(?P580_9) LIMIT 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [Governor Of Kentucky]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q4151335>?"
    },
    {
        "Question": "What British queen never had children?",
        "ID": "4bb0df2f",
        "Entities": "Q145:United Kingdom",
        "Mintaka Answer": "Q7207:Elizabeth I of England",
        "Sparklis label based": "give me every [human]      that has as a <position held>  [monarch of England]      and that has as a  <country of citizenship>   [Kingdom of England]      and that not has  a <child>",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q18810062> and that has as a <P27> <Q179876> and that not has a <P40>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Monarch Of England] ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[Kingdom Of England] ] . FILTER ( NOT EXISTS { ?Q5_1 p:<child> [ ps:<child> ?P40_38 ] . } ) } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q18810062 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q179876 ] . FILTER ( NOT EXISTS { ?Q5_1 p:P40 [ ps:P40 ?P40_38 ] . } ) } LIMIT 1",
        "Squall label based": "which [Human] has <position held> [Monarch Of England] and has <country of citizenship> [Kingdom Of England] and has not a <child>?",
        "Squall ID based": "which <Q5> has <P39> <Q18810062> and has <P27> <Q179876> and has not a <P40>?"
    },
    {
        "Question": "Who was the director of Scarface?",
        "ID": "8a3e6faa",
        "Entities": "Q47075:Scarface",
        "Mintaka Answer": "Q189526:Brian De Palma",
        "Sparklis label based": "[Scarface] has a <director>",
        "Sparklis ID based": "<Q47075> has a <P57>",
        "Sparql label based": "SELECT DISTINCT ?P57_8 WHERE { wd:[Scarface] p:<director> [ ps:<director> ?P57_8 ] . ?P57_8 rdfs:label ?label .}",
        "Sparql ID based": "SELECT DISTINCT ?P57_8 WHERE { wd:Q47075 p:P57 [ ps:P57 ?P57_8 ] . ?P57_8 rdfs:label ?label .}",
        "Squall label based": "what is a <director> of [Scarface] and has a rdfs:label?",
        "Squall ID based": "what is a <P57> of <Q47075> and has a rdfs:label?"
    },
    {
        "Question": "How many Oscars does Denzel Washington have?",
        "ID": "4ec837be",
        "Entities": "Q42101:Denzel Washington,Q19020:Academy Awards",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Denzel Washington] <award received> an [Academy Awards] and give me the number of [Academy Awards]",
        "Sparklis ID based": "<Q42101> <P166> an <Q19020> and give me the number of <Q19020>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_47) WHERE { ?Q19020_8 wdt:<instance of> wd:[Academy Awards] . wd:[Denzel Washington] p:<award received> [ ps:<award received> ?Q19020_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q19020_8) AS ?number_of_47) WHERE { ?Q19020_8 wdt:P31 wd:Q19020 . wd:Q42101 p:P166 [ ps:P166 ?Q19020_8 ] . }",
        "Squall label based": "how many [Academy Awards] is a <award received> of [Denzel Washington]?",
        "Squall ID based": "how many <Q19020> is a <P166> of <Q42101>?"
    },
    {
        "Question": "Which movie starred both Norm MacDonald and Artie Lange?",
        "ID": "c4e50cca",
        "Entities": "Q712452:Artie Lange,Q1371229:Norm Macdonald",
        "Mintaka Answer": "Q1228304:Dirty Work",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Norm Macdonald] and [Artie Lange]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q1371229> and <Q712452>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Norm Macdonald] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Artie Lange] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P161 [ ps:P161 wd:Q1371229 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q712452 ] . }",
        "Squall label based": "which [Film] has <cast member> [Norm Macdonald] and [Artie Lange]?",
        "Squall ID based": "which <Q11424> has <P161> <Q1371229> and <Q712452>?"
    },
    {
        "Question": "What river flows through China and is the longest river in China?",
        "ID": "2ea36164",
        "Entities": "Q148:People's Republic of China",
        "Mintaka Answer": "Q5413:Yangtze",
        "Sparklis label based": "give me every [river] that has as a <country>  [People's Republic of China]  and that has  the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a <P17> <Q148> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<country> [ ps:<country> wd:[People's Republic Of China] ] . ?Q4022_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P17 [ ps:P17 wd:Q148 ] . ?Q4022_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [River] has <country> [People's Republic Of China] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P17> <Q148> and has the highest <P2043>?"
    },
    {
        "Question": "Which 2003 movie directed by Catherine Hardwicke does not star Tom Selleck?",
        "ID": "3789a878",
        "Entities": "Q229598:Catherine Hardwicke,Q213706:Tom Selleck,2003:None",
        "Mintaka Answer": "Q1141912:Thirteen",
        "Sparklis label based": "give me every [film] that not has as a <cast member> [Tom Selleck] and that has as a <director> [Catherine Hardwicke] and that has a <publication date> and where the year of the <publication date> = 2003",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q213706> and that has as a <P57> <Q229598> and that has a <P577> and where the year of the <P577> = 2003",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<director> [ ps:<director> wd:[Catherine Hardwicke] ] . FILTER ( NOT EXISTS { ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Tom Selleck] ] . } ) ?Q11424_8 p:<publication date> [ ps:<publication date> ?P577_45 ] . FILTER ( (year(?P577_45) = \"2003\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P57 [ ps:P57 wd:Q229598 ] . FILTER ( NOT EXISTS { ?Q11424_8 p:P161 [ ps:P161 wd:Q213706 ] . } ) ?Q11424_8 p:P577 [ ps:P577 ?P577_45 ] . FILTER ( (year(?P577_45) = \"2003\"^^xsd:integer) ) }",
        "Squall label based": "which [Film] has <director> [Catherine Hardwicke] and has not <cast member> [Tom Selleck] and has a <publication date> whose year is 2003?",
        "Squall ID based": "which <Q11424> has <P57> <Q229598> and has not <P161> <Q213706> and has a <P577> whose year is 2003?"
    },
    {
        "Question": "Which actress in Blue Lagoon graduated from Princeton University?",
        "ID": "e74425b1",
        "Entities": "Q83767:The Blue Lagoon,Q21578:Princeton University",
        "Mintaka Answer": "Q189400:Brooke Shields",
        "Sparklis label based": "give me every [human] that is <educated at> [Princeton University] and that is the <cast member> of [The Blue Lagoon]",
        "Sparklis ID based": "give me every <Q5> that is <P69> <Q21578> and that is the <P161> of <Q83767>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<educated at> [ ps:<educated at> wd:[Princeton University] ] . wd:[The Blue Lagoon] p:<cast member> [ ps:<cast member> ?Q5_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P69 [ ps:P69 wd:Q21578 ] . wd:Q83767 p:P161 [ ps:P161 ?Q5_1 ] . }",
        "Squall label based": "which [Human] has <educated at> [Princeton University] and is a <cast member> of [The Blue Lagoon]?",
        "Squall ID based": "which <Q5> has <P69> <Q21578> and is a <P161> of <Q83767>?"
    },
    {
        "Question": "What NBA team is located in Tennessee?",
        "ID": "409e05d9",
        "Entities": "Q155223:National Basketball Association, Q1509:Tennessee",
        "Mintaka Answer": "Q165529:Memphis Grizzlies",
        "Sparklis label based": "give me every [basketball team] that has as a league  [National Basketball Association]  and that has  a headquarters <location> that is the <capital of> something that has as a <located in the administrative territorial entity>  [Tennessee]",
        "Sparklis ID based": "give me every <Q13393265> that has as a league <Q155223> and that has a headquarters <P276> that is the <P1376> something that has as a <P131> <Q1509>",
        "Sparql label based": "SELECT DISTINCT ?Q13393265_1 ?P159_5 ?thing_109 WHERE { ?Q13393265_1 wdt:<instance of> wd:[Basketball Team] . ?Q13393265_1 p:<league> [ ps:<league> wd:[National Basketball Association] ] . ?Q13393265_1 p:<headquarters location> [ ps:<headquarters location> ?P159_5 ] . ?P159_5 p:<capital of> [ ps:<capital of> ?thing_109 ] . ?thing_109 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[Tennessee] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q13393265_1 ?P159_5 ?thing_109 WHERE { ?Q13393265_1 wdt:P31 wd:Q13393265 . ?Q13393265_1 p:P118 [ ps:P118 wd:Q155223 ] . ?Q13393265_1 p:P159 [ ps:P159 ?P159_5 ] . ?P159_5 p:P1376 [ ps:P1376 ?thing_109 ] . ?thing_109 p:P131 [ ps:P131 wd:Q1509 ] . } LIMIT 1",
        "Squall label based": "which [Basketball Team] has <league> [National Basketball Association] and has a <headquarters location> that has a <capital of> that has <located in the administrative territorial entity> [Tennessee]?",
        "Squall ID based": "which <Q13393265> has <P118> <Q155223> and has a <P159> that has a <P1376> that has <P131> <Q1509>?"
    },
    {
        "Question": "Who was the 33rd president of the United States?",
        "ID": "643e72f1",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11613:Harry S Truman",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States]  with <series ordinal> 33",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 33",
        "Sparql label based": "SELECT DISTINCT ?Q5_278 WHERE { ?Q5_278 wdt:<instance of> wd:[Human] . ?Q5_278 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"33\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_278 WHERE { ?Q5_278 wdt:P31 wd:Q5 . ?Q5_278 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"33\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"33\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"33\" <Q11696>?"
    },
    {
        "Question": "Who was born first, Kurt Cobain or Eddie Vedder?",
        "ID": "345e7dd4",
        "Entities": "Q221535:Eddie Vedder, Q8446:Kurt Cobain",
        "Mintaka Answer": "Q221535:Eddie Vedder",
        "Sparklis label based": "give me every [human]\n\n    that has \u26ac the lowest-to-highest <date of birth> \u26ac\n    and that is\n        [Eddie Vedder]\n        or [Kurt Cobain]",
        "Sparklis ID based": "give me every <Q5> that has the lowest-to-highest <P569> and that is <Q221535> or <Q8446>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Eddie Vedder] wd:[Kurt Cobain] } ?x p:<date of birth> [ ps:<date of birth> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q221535 wd:Q8446 } ?x p:P569 [ ps:P569 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Eddie Vedder] or [Kurt Cobain] and has the lowest <date of birth>?",
        "Squall ID based": "what is <Q221535> or <Q8446> and has the lowest <P569>?"
    },
    {
        "Question": "What is the longest river in Africa?",
        "ID": "0e30db29",
        "Entities": "Q15:Africa",
        "Mintaka Answer": "Q3392:Nile",
        "Sparklis label based": "give me every [river] that has as a <continent>  [Africa]  and that has  the highest-to-lowest <length>",
        "Sparklis ID based": "give me every <Q4022> that has as a <P30> <Q15> and that has the highest-to-lowest <P2043>",
        "Sparql label based": "SELECT DISTINCT ?Q4022_1 ?P2043_5 WHERE { ?Q4022_1 wdt:<instance of> wd:[River] . ?Q4022_1 p:<continent> [ ps:<continent> wd:[Africa] ] . ?Q4022_1 p:<length> [ ps:<length> ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q4022_1 ?P2043_5 WHERE { ?Q4022_1 wdt:P31 wd:Q4022 . ?Q4022_1 p:P30 [ ps:P30 wd:Q15 ] . ?Q4022_1 p:P2043 [ ps:P2043 ?P2043_5 ] . } ORDER BY DESC(?P2043_5) LIMIT 1",
        "Squall label based": "which [River] has <continent> [Africa] and has the highest <length>?",
        "Squall ID based": "which <Q4022> has <P30> <Q15> and has the highest <P2043>?"
    },
    {
        "Question": "Which book was published first, Twilight or Harry Potter and the Sorcerer's Stone?",
        "ID": "411396f4",
        "Entities": "Q43361:Harry Potter and the Philosopher's Stone, Q189378:Twilight",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "[Harry Potter and the Philosopher's Stone] has  a <publication date>  and [Twilight] has  a <publication date>",
        "Sparklis ID based": "<Q102438> has a <P577> and <Q189378> has a <P577>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Twilight] wd:[Harry Potter And The Philosopher's Stone 2] } ?x p:<publication date> [ ps:<publication date> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q189378 wd:Q43361 } ?x p:P577 [ ps:P577 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Twilight] or [Harry Potter And The Philosopher's Stone 2] and has the lowest <publication date>?",
        "Squall ID based": "what is <Q189378> or <Q43361> and has the lowest <P577>?"
    },
    {
        "Question": "Where was Louis Armstrong born?",
        "ID": "758e8888",
        "Entities": "Q1779:Louis Armstrong",
        "Mintaka Answer": "Q34404:New Orleans",
        "Sparklis label based": "[Louis Armstrong] has a <place of birth>",
        "Sparklis ID based": "<Q1779> has a <P19>",
        "Sparql label based": "select distinct ?p19_8 where { wd:[Louis Armstrong] p:<place of birth> [ ps:<place of birth> ?p19_8 ] . }",
        "Sparql ID based": "select distinct ?p19_8 where { wd:Q1779 p:P19 [ ps:P19 ?p19_8 ] . }",
        "Squall label based": "what is a <place of birth> of [Louis Armstrong]?",
        "Squall ID based": "what is a <P19> of <Q1779>?"
    },
    {
        "Question": "Where is Dorothy Gale from?",
        "ID": "939407f7",
        "Entities": "Q2583524:Dorothy Gale",
        "Mintaka Answer": "Q1558:Kansas",
        "Sparklis label based": "[Dorothy Gale] has a <residence>",
        "Sparklis ID based": "<Q2583524> has a <P551>",
        "Sparql label based": "SELECT DISTINCT ?P551_8 WHERE { wd:[Dorothy Gale] p:<residence> [ ps:<residence> ?P551_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P551_8 WHERE { wd:Q2583524 p:P551 [ ps:P551 ?P551_8 ] . }",
        "Squall label based": "what is a <residence> of [Dorothy Gale]?",
        "Squall ID based": "what is a <P551> of <Q2583524>?"
    },
    {
        "Question": "Which of the current U2 members were born outside of Ireland?",
        "ID": "b739b77d",
        "Entities": "Q396:U2,Q27:Ireland",
        "Mintaka Answer": "Q175907:Adam Clayton,Q714845:The Edge",
        "Sparklis label based": "[U2] has a member that not has as a <country of citizenship> Republic of [Ireland]",
        "Sparklis ID based": "<Q396> has a member that not has as a <P27> Republic of <Q22890>",
        "Sparql label based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:<member of> [ ps:<member of> wd:[U2] ] . FILTER ( NOT EXISTS { ?P463_8 p:<country of citizenship> [ ps:<country of citizenship> wd:[Ireland 2] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P463_8 WHERE { ?P463_8 p:P463 [ ps:P463 wd:Q396 ] . FILTER ( NOT EXISTS { ?P463_8 p:P27 [ ps:P27 wd:Q27 ] . } ) }",
        "Squall label based": "what has <member of> [U2] and has not <country of citizenship> [Ireland 2]?",
        "Squall ID based": "what has <P463> <Q396> and has not <P27> <Q27>?"
    },
    {
        "Question": "Which Hobbit movie was Frodo Baggins not in?",
        "ID": "5b6f5a03",
        "Entities": "Q74287:The Hobbit, Q177329:Frodo Baggins",
        "Mintaka Answer": "Q719915:The Hobbit: The Desolation of Smaug, Q919649:The Hobbit: The Battle of the Five Armies",
        "Sparklis label based": "give me every [film]      that not has  a <cast member> with <character role> [Frodo Baggins]      and that is based on  [The Hobbit]",
        "Sparklis ID based": "give me every <Q11424> that not has a <P161> with <P453> <Q177329> and that is based on <Q74287>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<based on> [ ps:<based on> wd:[The Hobbit] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> ?P161_38 ; n1:<character role> wd:[Frodo Baggins] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P144 [ ps:P144 wd:Q74287 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 ?P161_38 ; n1:P453 wd:Q177329 ] . } ) }",
        "Squall label based": "which [Film] has <based on> [The Hobbit] and has not <cast member> at <character role> [Frodo Baggins] a thing?",
        "Squall ID based": "which <Q11424> has <P144> <Q74287> and has not <P161> at <P453> <Q177329> a thing?"
    },
    {
        "Question": "Does Europe or North America have a higher population?",
        "ID": "7f09d0ca",
        "Entities": "Q46:Europe, Q49:North America",
        "Mintaka Answer": "Q46:Europe",
        "Sparklis label based": "Europe has  a <population>  and [North America] has  a <population>",
        "Sparklis ID based": "Europe has a <P1082> and <Q49> has a <P1082>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Europe] wd:[North America] } ?x p:<population> [ ps:<population> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q46 wd:Q49 } ?x p:P1082 [ ps:P1082 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [Europe] or [North America] and has the highest <population>?",
        "Squall ID based": "what is <Q46> or <Q49> and has the highest <P1082>?"
    },
    {
        "Question": "Which Metal Gear game did Raiden not appear in?",
        "ID": "d84de173",
        "Entities": "Q2007514:Raiden, Q216655:Metal Gear",
        "Mintaka Answer": "Q247935:Metal Gear Solid 3: Snake Eater",
        "Sparklis label based": "give me every [video game]  that has as a <part of the series>  [Metal Gear Solid] and that not has as a <characters>  [Raiden]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q66734074> and that not has as a <P674> <Q2007514>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Metal Gear Solid] ] . FILTER ( NOT EXISTS { ?Q7889_1 p:<characters> [ ps:<characters> wd:[Raiden] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q66734074 ] . FILTER ( NOT EXISTS { ?Q7889_1 p:P674 [ ps:P674 wd:Q2007514 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Metal Gear Solid] and has not <characters> [Raiden]?",
        "Squall ID based": "which <Q7889> has <P179> <Q66734074> and has not <P674> <Q2007514>?"
    },
    {
        "Question": "When was the last time Guillermo del Toro won an Academy Award for Best Director?",
        "ID": "e3057ce1",
        "Entities": "Q103360:Academy Award for Best Director, Q219124:Guillermo del Toro",
        "Mintaka Answer": "2018",
        "Sparklis label based": "[Guillermo del Toro] <award received> with a <point in time>  [Academy Award for Best Director]  and give me highest-to-lowest the year of the <point in time>",
        "Sparklis ID based": "<Q219124> <P166> with a <P585> <Q103360> and give me highest-to-lowest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_89 WHERE { wd:[Guillermo Del Toro] p:<award received> [ n1:<point in time> ?P585_4 ; ps:<award received> wd:[Academy Award For Best Director] ] . BIND (year(?P585_4) AS ?expr_89) } ORDER BY DESC(?expr_89) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_89 WHERE { wd:Q219124 p:P166 [ n1:P585 ?P585_4 ; ps:P166 wd:Q103360 ] . BIND (year(?P585_4) AS ?expr_89) } ORDER BY DESC(?expr_89) LIMIT 1",
        "Squall label based": "what is the highest year of a thing at which <point in time> [Guillermo Del Toro] has <award received> [Academy Award For Best Director]?",
        "Squall ID based": "what is the highest year of a thing at which <P585> <Q219124> has <P166> <Q103360>?"
    },
    {
        "Question": "Who was the first African-American president?",
        "ID": "e4c48b04",
        "Entities": "Q49085:African Americans,1:None",
        "Mintaka Answer": "Q76:Barack Obama",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States] with the lowest-to-highest <start time> and that has as an <ethnic group> [African Americans]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with the lowest-to-highest <P580> and that has as an <P172> <Q49085>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<start time> ?p580_9 ] . ?q5_1 p:<ethnic group> [ ps:<ethnic group> wd:[African Americans] ] . } order by asc(?p580_9) limit 1",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ ps:P39 wd:Q11696 ; n1:P580 ?p580_9 ] . ?q5_1 p:P172 [ ps:P172 wd:Q49085 ] . } order by asc(?p580_9) limit 1",
        "Squall label based": "which [Human] has <position held> at the lowest <start time> [President Of The United States] and has <ethnic group> [African Americans]?",
        "Squall ID based": "which <Q5> has <P39> at the lowest <P580> <Q11696> and has <P172> <Q49085>?"
    },
    {
        "Question": "Who is the 46th president of the United States?",
        "ID": "cbcd63a1",
        "Entities": "Q30:United States of America,46:None",
        "Mintaka Answer": "Q6279:Joe Biden",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 46 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 46 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"46\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"46\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"46\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"46\" <Q11696>?"
    },
    {
        "Question": "Which Senses Fail album came out in 2004?",
        "ID": "6a45f064",
        "Entities": "Q1474339:Senses Fail,2004:None",
        "Mintaka Answer": "Q1938719:Let It Enfold You",
        "Sparklis label based": "[Senses Fail] is the <performer> of an [album] that has as a <publication date> 2004-09-07T00:00:00Z",
        "Sparklis ID based": "<Q1474339> is the <P175> of an <Q482994> that has as a <P577> 2004-09-07T00:00:00Z",
        "Sparql label based": "SELECT DISTINCT ?Q482994_8 WHERE { ?Q482994_8 wdt:<instance of> wd:[Album] . ?Q482994_8 p:<performer> [ ps:<performer> wd:[Senses Fail] ] . ?Q482994_8 p:<publication date> [ ps:<publication date> \"2004-09-07T00:00:00Z\"^^xsd:dateTime ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_8 WHERE { ?Q482994_8 wdt:P31 wd:Q482994 . ?Q482994_8 p:P175 [ ps:P175 wd:Q1474339 ] . ?Q482994_8 p:P577 [ ps:P577 \"2004-09-07T00:00:00Z\"^^xsd:dateTime ] . }",
        "Squall label based": "which [Album] has <performer> [Senses Fail] and has <publication date> 2004-09-07T00:00:00Z?",
        "Squall ID based": "which <Q482994> has <P175> <Q1474339> and has <P577> 2004-09-07T00:00:00Z?"
    },
    {
        "Question": "Which actor played Luke Skywalker and voiced the Joker?",
        "ID": "a0bb4027",
        "Entities": "Q51746:Luke Skywalker,Q217533:Joker",
        "Mintaka Answer": "Q210447:Mark Hamill",
        "Sparklis label based": "[Joker 2] has a <performer> that is the <performer> of [Luke Skywalker]",
        "Sparklis ID based": "<Q217533> has a <P175> that is the <P175> of <Q51746>",
        "Sparql label based": "SELECT DISTINCT ?P175_8 WHERE { wd:[Joker 2] p:<performer> [ ps:<performer> ?P175_8 ] . wd:[Luke Skywalker] p:<performer> [ ps:<performer> ?P175_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P175_8 WHERE { wd:Q217533 p:P175 [ ps:P175 ?P175_8 ] . wd:Q51746 p:P175 [ ps:P175 ?P175_8 ] . }",
        "Squall label based": "what is a <performer> of [Joker 2] and [Luke Skywalker]?",
        "Squall ID based": "what is a <P175> of <Q217533> and <Q51746>?"
    },
    {
        "Question": "Which 2012 Quentin Tarantino movie does not star Uma Thurman?",
        "ID": "af632860",
        "Entities": "Q3772:Quentin Tarantino,Q125017:Uma Thurman,2012:None",
        "Mintaka Answer": "Q571032:Django Unchained",
        "Sparklis label based": "give me every [film] that has as a <director> [Quentin Tarantino] and that not has as a <cast member> [Uma Thurman] and that has as a <publication date> 2012-12-25T00:00:00Z",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q3772> and that not has as a <P161> <Q125017> and that has as a <P577> 2012-12-25T00:00:00Z",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<director> [ ps:<director> wd:[Quentin Tarantino] ] . FILTER ( NOT EXISTS { ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Uma Thurman] ] . } ) ?Q11424_8 p:<publication date> [ ps:<publication date> ?date ] . FILTER (year(?date) = 2012) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P57 [ ps:P57 wd:Q3772 ] . FILTER ( NOT EXISTS { ?Q11424_8 p:P161 [ ps:P161 wd:Q125017 ] . } ) ?Q11424_8 p:P577 [ ps:P577 ?date ] . FILTER (year(?date) = 2012) }",
        "Squall label based": "which [Film] has <director> [Quentin Tarantino] and has not <cast member> [Uma Thurman] and has a <publication date> whose year is 2012?",
        "Squall ID based": "which <Q11424> has <P57> <Q3772> and has not <P161> <Q125017> and has a <P577> whose year is 2012?"
    },
    {
        "Question": "Which member of G-Unit appeared in the movie Den of Thieves?",
        "ID": "c4a46746",
        "Entities": "Q28860130:Den of Thieves, Q308644:G-Unit",
        "Mintaka Answer": "Q6060:50 Cent",
        "Sparklis label based": "give me every [human] that has as an <occupation>  [actor]  and that is the cast <member of> [Den of Thieves]  and that is the <member of> [G-Unit]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q33999> and that is the cast <P463> <Q28860130> and that is the <P463> <Q308644>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . wd:[Den Of Thieves] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<member of> [ ps:<member of> wd:[G-unit] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q33999 ] . wd:Q28860130 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P463 [ ps:P463 wd:Q308644 ] . }",
        "Squall label based": "which [Human] has <occupation> [Actor] and is a <cast member> of [Den Of Thieves] and has <member of> [G-unit]?",
        "Squall ID based": "which <Q5> has <P106> <Q33999> and is a <P161> of <Q28860130> and has <P463> <Q308644>?"
    },
    {
        "Question": "Which is the oldest Star Wars book?",
        "ID": "36c44c5a",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "Q6272668:Star Wars: From the Adventures of Luke Skywalker",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [Star Wars 2]  and that has  the lowest-to-highest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q462> and that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 ?P577_12 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Star Wars 2] ] . ?Q7725634_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 ?P577_12 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q462 ] . ?Q7725634_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY ASC(?P577_12) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Star Wars 2] and has the lowest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q462> and has the lowest <P577>?"
    },
    {
        "Question": "Which Hunger Games movie made the most money?",
        "ID": "2267b539",
        "Entities": "Q11885031:The Hunger Games",
        "Mintaka Answer": "Q10307713:The Hunger Games: Mockingjay \u2013 Part 2",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Hunger Games 4] and that has the highest-to-lowest <box office>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q11885031> and that has the highest-to-lowest <P2142>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:<instance of> wd:[Film] . ?Q11424_349 p:<part of the series> [ ps:<part of the series> wd:[The Hunger Games 4] ] . ?Q11424_349 p:<box office> [ ps:<box office> ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_349 ?P2142_353 WHERE { ?Q11424_349 wdt:P31 wd:Q11424 . ?Q11424_349 p:P179 [ ps:P179 wd:Q11885031 ] . ?Q11424_349 p:P2142 [ ps:P2142 ?P2142_353 ] . } ORDER BY DESC(?P2142_353) LIMIT 1",
        "Squall label based": "which [Film] has <part of the series> [The Hunger Games 4] and has the highest <box office>?",
        "Squall ID based": "which <Q11424> has <P179> <Q11885031> and has the highest <P2142>?"
    },
    {
        "Question": "How many states in the U.S. have a population over 20,000,000?",
        "ID": "054d5e1d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "3",
        "Sparklis label based": "give me every [U.S. state] that has \u26ac a <population> higher or equal to 20000000 \u26ac\nand give me the number of [U.S. state]",
        "Sparklis ID based": "give me every <Q35657> that has a <P1082> higher or equal to 20000000 and give me the number of <Q35657>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_140) WHERE { ?Q35657_1 wdt:<instance of> wd:[U.s. State] . ?Q35657_1 p:<population> [ ps:<population> ?P1082_103 ] . FILTER ( xsd:double(str(?P1082_103)) >= 20000000 ) }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q35657_1) AS ?number_of_140) WHERE { ?Q35657_1 wdt:P31 wd:Q35657 . ?Q35657_1 p:P1082 [ ps:P1082 ?P1082_103 ] . FILTER ( xsd:double(str(?P1082_103)) >= 20000000 ) }",
        "Squall label based": "how many [U.s. State] has a <population> greater or equal to 20000000?",
        "Squall ID based": "how many <Q35657> has a <P1082> greater or equal to 20000000?"
    },
    {
        "Question": "What is the name of the sixth movie in the Harry Potter franchise?",
        "ID": "2904ad72",
        "Entities": "Q216930:Harry Potter film series,6:None",
        "Mintaka Answer": "Q161687:Harry Potter and the Half-Blood Prince",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 6 Harry Potter [film] series",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 6 Harry Potter <Q11424> series",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ n1:<series ordinal> \"6\" ; ps:<part of the series> wd:[Harry Potter Film Series] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ n1:P1545 \"6\" ; ps:P179 wd:Q216930 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"6\" [Harry Potter Film Series]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"6\" <Q216930>?"
    },
    {
        "Question": "Which is the newest Star Wars book?",
        "ID": "c3edc488",
        "Entities": "Q462:Star Wars",
        "Mintaka Answer": "Q108841298:Star Wars Visions: Ronin",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [Star Wars 2]  and that has  the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q462> and that has the highest-to-lowest <P577>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 ?P577_12 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[Star Wars 2] ] . ?Q7725634_8 p:<publication date> [ ps:<publication date> ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 ?P577_12 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q462 ] . ?Q7725634_8 p:P577 [ ps:P577 ?P577_12 ] . } ORDER BY DESC(?P577_12) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [Star Wars 2] and has the highest <publication date>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q462> and has the highest <P577>?"
    },
    {
        "Question": "How many members made up The Black Eyed Peas?",
        "ID": "31925faa",
        "Entities": "Q134541:Black Eyed Peas",
        "Mintaka Answer": "Q185610:will.i.am,Q180004:Fergie,Q293590:apl.de.ap,Q145480:Taboo",
        "Sparklis label based": "give me every [human] that is the <member of> [Black Eyed Peas]\nand give me the number of [human]",
        "Sparklis ID based": "give me every <Q5> that is the <P463> <Q134541> and give me the number of <Q5>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_393) AS ?number_of_429) WHERE { ?Q5_393 wdt:<instance of> wd:[Human] . ?Q5_393 p:<member of> [ ps:<member of> wd:[Black Eyed Peas] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q5_393) AS ?number_of_429) WHERE { ?Q5_393 wdt:P31 wd:Q5 . ?Q5_393 p:P463 [ ps:P463 wd:Q134541 ] . }",
        "Squall label based": "how many [Human] has <member of> [Black Eyed Peas]?",
        "Squall ID based": "how many <Q5> has <P463> <Q134541>?"
    },
    {
        "Question": "What is the title of the third Matrix movie?",
        "ID": "df3c48ba",
        "Entities": "Q83495:The Matrix,3:None",
        "Mintaka Answer": "Q207536:The Matrix Revolutions",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Matrix series] with <series ordinal> 3 and that has a <title>",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1210827> with <P1545> 3 and that has a <P1476>",
        "Sparql label based": "SELECT DISTINCT ?P1476_39 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[The Matrix Series] ; n1:<series ordinal> \"3\" ] . ?Q11424_1 p:<title> [ ps:<title> ?P1476_39 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1476_39 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q1210827 ; n1:P1545 \"3\" ] . ?Q11424_1 p:P1476 [ ps:P1476 ?P1476_39 ] . }",
        "Squall label based": "what is a <title> of a [Film] that has <part of the series> at <series ordinal> \"3\" [The Matrix Series]?",
        "Squall ID based": "what is a <P1476> of a <Q11424> that has <P179> at <P1545> \"3\" <Q1210827>?"
    },
    {
        "Question": "What was the first Harry Potter book?",
        "ID": "69231897",
        "Entities": "Q8337:Harry Potter,1:None",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry Potter 2]  with <series ordinal> 1",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_432 WHERE { ?Q7725634_432 wdt:<instance of> wd:[Literary Work] . ?Q7725634_432 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ; n1:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_432 WHERE { ?Q7725634_432 wdt:P31 wd:Q7725634 . ?Q7725634_432 p:P179 [ ps:P179 wd:Q8337 ; n1:P1545 \"1\" ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"1\" [Harry Potter 2]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"1\" <Q8337>?"
    },
    {
        "Question": "What game does the character Soldier 76 come from?",
        "ID": "567d9294",
        "Entities": "Q60790153:Soldier: 76",
        "Mintaka Answer": "Q19610114:Nintendo Switch",
        "Sparklis label based": "give me every [video game] that has as a <characters> [Soldier: 76]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P674> <Q60790153>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<characters> [ ps:<characters> wd:[Soldier: 76] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P674 [ ps:P674 wd:Q60790153 ] . }",
        "Squall label based": "which [Video Game] has <characters> [Soldier: 76]?",
        "Squall ID based": "which <Q7889> has <P674> <Q60790153>?"
    },
    {
        "Question": "How did Ernest Hemingway die?",
        "ID": "6a84b2e5",
        "Entities": "Q23434:Ernest Hemingway",
        "Mintaka Answer": "Q234478:Linda Evans",
        "Sparklis label based": "[Ernest Hemingway] has a <manner of death>",
        "Sparklis ID based": "<Q23434> has a <P1196>",
        "Sparql label based": "SELECT DISTINCT ?P1196_8 WHERE { wd:[Ernest Hemingway] p:<manner of death> [ ps:<manner of death> ?P1196_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1196_8 WHERE { wd:Q23434 p:P1196 [ ps:P1196 ?P1196_8 ] . }",
        "Squall label based": "what is a <manner of death> of [Ernest Hemingway]?",
        "Squall ID based": "what is a <P1196> of <Q23434>?"
    },
    {
        "Question": "How many Kung Fu Panda movies are there?",
        "ID": "5f328d36",
        "Entities": "Q2081372:Kung Fu Panda",
        "Mintaka Answer": "Q129193:Kung Fu Panda,Q487447:Kung Fu Panda 2,Q15055043:Kung Fu Panda 3",
        "Sparklis label based": "[Kung Fu Panda]  has a <part(s)>\nand give me the number of <part(s)>",
        "Sparklis ID based": "<Q2081372> has a <part(s)> and give me the number of <part(s)>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_109) WHERE { wd:[Kung Fu Panda] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_109) WHERE { wd:Q118177548 p:P527 [ ps:P527 ?P527_7 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Kung Fu Panda]?",
        "Squall ID based": "how many thing is a <P527> of <Q118177548>?"
    },
    {
        "Question": "Is Joe Biden older than Bernie Sanders?",
        "ID": "6fffb72e",
        "Entities": "Q6279:Joe Biden,Q359442:Bernie Sanders",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "give me every human [Joe Biden] has a <date of birth>, give me every human [Bernie Sanders] has a <date of birth>,",
        "Sparklis ID based": "give me every human <Q6279> has a <date_of_birth>, give me every human <Q359442> has a <date_of_birth>,",
        "Sparql label based": "ASK { wd:[Joe Biden] p:<date of birth> [ ps:<date of birth> ?area1 ] . wd:[Bernie Sanders] p:<date of birth> [ ps:<date of birth> ?area2 ] . FILTER (?area1 < ?area2) }",
        "Sparql ID based": "ASK { wd:Q6279 p:P569 [ ps:P569 ?area1 ] . wd:Q359442 p:P569 [ ps:P569 ?area2 ] . FILTER (?area1 < ?area2) }",
        "Squall label based": "whether [Joe Biden] has a <date of birth> lesser than a <date of birth> of [Bernie Sanders]?",
        "Squall ID based": "whether <Q6279> has a <P569> lesser than a <P569> of <Q359442>?"
    },
    {
        "Question": "How many Matrix movies are there?",
        "ID": "0656eead",
        "Entities": "Q13014087:The Matrix",
        "Mintaka Answer": "Q83495:The Matrix,Q189600:The Matrix Reloaded,Q335340:The Animatrix,Q207536:The Matrix Revolutions",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [The Matrix series] and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1210827> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<part of the series> [ ps:<part of the series> wd:[The Matrix Series] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_8) AS ?number_of_45) WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P179 [ ps:P179 wd:Q1210827 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [The Matrix Series]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q1210827>?"
    },
    {
        "Question": "What is the third Twilight movie?",
        "ID": "22c51c40",
        "Entities": "Q160071:Twilight,3:None",
        "Mintaka Answer": "Q217010:The Twilight Saga: Eclipse",
        "Sparklis label based": "give me every [film] that has as a <part of the series> with <series ordinal> 3 [The Twilight Saga]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> with <P1545> 3 <Q652599>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ n1:<series ordinal> \"3\" ; ps:<part of the series> wd:[The Twilight Saga] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ n1:P1545 \"3\" ; ps:P179 wd:Q652599 ] . }",
        "Squall label based": "which [Film] has <part of the series> at <series ordinal> \"3\" [The Twilight Saga]?",
        "Squall ID based": "which <Q11424> has <P179> at <P1545> \"3\" <Q652599>?"
    },
    {
        "Question": "Which series is older, Metroid or Super Mario Bros?",
        "ID": "4694fd01",
        "Entities": "Q12397:Metroid, Q23902998:Super Mario Bros.",
        "Mintaka Answer": "Q23902998:Super Mario Bros.",
        "Sparklis label based": "Metroid has  a <publication date>  and [Super Mario Bros 2 2.] has  a part(s) that has  the lowest-to-highest <publication date>",
        "Sparklis ID based": "Metroid has a <P577> and [Super_Mario_Bros_2_2.] has a part(s) that has the lowest-to-highest <P577>",
        "Sparql label based": "SELECT DISTINCT ?P527_8 ?P577_111 WHERE { wd:[Super Mario Bros. 2 2] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<publication date> [ ps:<publication date> ?P577_111 ] . } ORDER BY ASC(?P577_111) LIMIT 2",
        "Sparql ID based": "SELECT DISTINCT ?P527_8 ?P577_111 WHERE { wd:Q23902998 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P577 [ ps:P577 ?P577_111 ] . } ORDER BY ASC(?P577_111) LIMIT 2",
        "Squall label based": "what is a <has part(s)> of [Super Mario Bros. 2 2] and has the 2 lowest <publication date>?",
        "Squall ID based": "what is a <P527> of <Q23902998> and has the 2 lowest <P577>?"
    },
    {
        "Question": "Who won Super Bowl 4?",
        "ID": "3eda70ee",
        "Entities": "Q376026:Super Bowl IV",
        "Mintaka Answer": "Q223522:Kansas City Chiefs",
        "Sparklis label based": "give me every [American football team] that has as a victory  [Super Bowl IV]",
        "Sparklis ID based": "give me every <Q17156793> that has as a victory <Q376026>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:<instance of> wd:[American Football Team] . ?Q17156793_1 p:<victory> [ ps:<victory> wd:[Super Bowl Iv] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_1 WHERE { ?Q17156793_1 wdt:P31 wd:Q17156793 . ?Q17156793_1 p:P2522 [ ps:P2522 wd:Q376026 ] . }",
        "Squall label based": "which [American Football Team] has <victory> [Super Bowl Iv]?",
        "Squall ID based": "which <Q17156793> has <P2522> <Q376026>?"
    },
    {
        "Question": "Which country has a larger population, Indonesia or United States?",
        "ID": "c25ccced",
        "Entities": "Q30:United States of America, Q252:Indonesia",
        "Mintaka Answer": "Q30:United States of America",
        "Sparklis label based": "[United States of America] has  a <population>  and Indonesia has  a <population>",
        "Sparklis ID based": "<Q30> has a <P1082> and Indonesia has a <P1082>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[United States Of America] wd:[Indonesia] } ?x p:<population> [ ps:<population> ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q30 wd:Q252 } ?x p:P1082 [ ps:P1082 ?date ] . } ORDER BY DESC(?date) LIMIT 1",
        "Squall label based": "what is [United States Of America] or [Indonesia] and has the highest <population>?",
        "Squall ID based": "what is <Q30> or <Q252> and has the highest <P1082>?"
    },
    {
        "Question": "What book written by Hunter Thompson was released in 1973?",
        "ID": "b7400ee6",
        "Entities": "Q219780:Hunter S. Thompson",
        "Mintaka Answer": "Q60412244:Fear and Loathing on the Campaign Trail '72",
        "Sparklis label based": "[Hunter S. Thompson]  has  a <notable work> that has  a <publication date>\nand where the year of the <publication date> = 1973",
        "Sparklis ID based": "<Q219780> has a <P800> that has a <P577> and where the year of the <P577> = 1973",
        "Sparql label based": "SELECT DISTINCT ?P800_7 WHERE { wd:[Hunter S. Thompson] p:<notable work> [ ps:<notable work> ?P800_7 ] . ?P800_7 p:<publication date> [ ps:<publication date> ?P577_44 ] . FILTER ( (year(?P577_44) = \"1973\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?P800_7 WHERE { wd:Q219780 p:P800 [ ps:P800 ?P800_7 ] . ?P800_7 p:P577 [ ps:P577 ?P577_44 ] . FILTER ( (year(?P577_44) = \"1973\"^^xsd:integer) ) }",
        "Squall label based": "what is a <notable work> of [Hunter S. Thompson] and has a <publication date> whose year is 1973?",
        "Squall ID based": "what is a <P800> of <Q219780> and has a <P577> whose year is 1973?"
    },
    {
        "Question": "Was Northanger Abbey published before Jane Austen's death?",
        "ID": "43c172fd",
        "Entities": "Q477508:Northanger Abbey, Q36322:Jane Austen",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Northanger Abbey] has  a <publication date>  and [Jane Austen] has  a <date of death>",
        "Sparklis ID based": "<Q477508> has a <P577> and <Q36322> has a <P570>",
        "Sparql label based": "SELECT DISTINCT ?P570_16 WHERE { wd:[Jane Austen] p:<date of death> [ ps:<date of death> ?P570_16 ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?P570_16 WHERE { wd:Q36322 p:P570 [ ps:P570 ?P570_16 ] . } LIMIT 1",
        "Squall label based": "what is a <date of death> of [Jane Austen]?",
        "Squall ID based": "what is a <P570> of <Q36322>?"
    },
    {
        "Question": "Which movies did Brad Pitt produce and act in at the same time?",
        "ID": "0aa08a0a",
        "Entities": "Q35332:Brad Pitt",
        "Mintaka Answer": "Q221820:Moneyball,Q28196:World War Z",
        "Sparklis label based": "give me every [film] that has as a <producer> [Brad Pitt] and that has as a <cast member> [Brad Pitt]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P162> <Q35332> and that has as a <P161> <Q35332>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:<instance of> wd:[Film] . ?Q11424_8 p:<producer> [ ps:<producer> wd:[Brad Pitt] ] . ?Q11424_8 p:<cast member> [ ps:<cast member> wd:[Brad Pitt] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_8 WHERE { ?Q11424_8 wdt:P31 wd:Q11424 . ?Q11424_8 p:P162 [ ps:P162 wd:Q35332 ] . ?Q11424_8 p:P161 [ ps:P161 wd:Q35332 ] . }",
        "Squall label based": "which [Film] has <producer> [Brad Pitt] and has <cast member> [Brad Pitt]?",
        "Squall ID based": "which <Q11424> has <P162> <Q35332> and has <P161> <Q35332>?"
    },
    {
        "Question": "When did the first Vampire Diaries book, The Awakening, come out?",
        "ID": "4211a16c",
        "Entities": "Q226079:The Vampire Diaries, Q2718258:The Vampire Diaries: The Awakening",
        "Mintaka Answer": "1991",
        "Sparklis label based": "[The Vampire Diaries: The Awakening] has as a <part of the series>  [The Vampire Diaries]  and has  a <publication date>  and give me the year of the <publication date>",
        "Sparklis ID based": "<Q2718258> has as a <P179> <Q226079> and has a <P577> and give me the year of the <P577>",
        "Sparql label based": "SELECT DISTINCT ?expr_130 WHERE {wd:[The Vampire Diaries: The Awakening] p:<publication date> [ ps:<publication date> ?P577_4 ] . BIND (year(?P577_4) AS ?expr_130) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_130 WHERE {wd:Q2718258 p:P577 [ ps:P577 ?P577_4 ] . BIND (year(?P577_4) AS ?expr_130) }",
        "Squall label based": "what is the year of a <publication date> of [The Vampire Diaries: The Awakening]?",
        "Squall ID based": "what is the year of a <P577> of <Q2718258>?"
    },
    {
        "Question": "Which Iron Man movie did Jeff Bridges not appear in?",
        "ID": "54c2edcd",
        "Entities": "Q16642701:Iron Man,Q174843:Jeff Bridges",
        "Mintaka Answer": "Q205028:Iron Man 2,Q209538:Iron Man 3",
        "Sparklis label based": "give me every [film] that has as a <part of the series> [Iron Man 2 2] and that not has as a <cast member> [Jeff Bridges]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q16642701> and that not has as a <P161> <Q174843>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Iron Man 2 2] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Jeff Bridges] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q16642701 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q174843 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Iron Man 2 2] and has not <cast member> [Jeff Bridges]?",
        "Squall ID based": "which <Q11424> has <P179> <Q16642701> and has not <P161> <Q174843>?"
    },
    {
        "Question": "Who is the owner of the Philadelphia Eagles?",
        "ID": "4ee8eb00",
        "Entities": "Q219714:Philadelphia Eagles",
        "Mintaka Answer": "Q6176140:Jeffrey Lurie",
        "Sparklis label based": "[Philadelphia Eagles] is <owned by>  something",
        "Sparklis ID based": "<Q219714> is <P127> something",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { wd:[Philadelphia Eagles] p:<owned by> [ ps:<owned by> ?thing_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { wd:Q219714 p:P127 [ ps:P127 ?thing_8 ] . }",
        "Squall label based": "what is a <owned by> of [Philadelphia Eagles]?",
        "Squall ID based": "what is a <P127> of <Q219714>?"
    },
    {
        "Question": "Who was the first president of the USA?",
        "ID": "b166ab3d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q23:George Washington",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States] with <series ordinal> 1",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:<instance of> wd:[Human] . ?Q5_8 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_8 WHERE { ?Q5_8 wdt:P31 wd:Q5 . ?Q5_8 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"1\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"1\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"1\" <Q11696>?"
    },
    {
        "Question": "Which oceans do not border Russia?",
        "ID": "84c5405b",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "Q1239:Indian Ocean",
        "Sparklis label based": "give me every [ocean] that not has as a <basin  country>  [Russia]",
        "Sparklis ID based": "give me every <Q9430> that not has as a <P205> <Q159>",
        "Sparql label based": "SELECT DISTINCT ?Q9430_8 WHERE { ?Q9430_8 wdt:<instance of> wd:[Ocean] . FILTER ( NOT EXISTS { ?Q9430_8 p:<basin country> [ ps:<basin country> wd:[Russia] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q9430_8 WHERE { ?Q9430_8 wdt:P31 wd:Q9430 . FILTER ( NOT EXISTS { ?Q9430_8 p:P205 [ ps:P205 wd:Q159 ] . } ) }",
        "Squall label based": "which [Ocean] has not <basin country> [Russia]?",
        "Squall ID based": "which <Q9430> has not <P205> <Q159>?"
    },
    {
        "Question": "Is Lake Superior larger than Lake Erie?",
        "ID": "cb4a963d",
        "Entities": "Q1066:Lake Superior, Q5492:Lake Erie",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "Lake Superior has  an <area>  and [Lake Erie] has  an <area>",
        "Sparklis ID based": "Lake Superior has an <P2046> and <Q5492> has an <P2046>",
        "Sparql label based": "ASK { wd:[Lake Superior] p:<area> [ ps:<area> ?area1 ] . wd:[Lake Erie] p:<area> [ ps:<area> ?area2 ] . FILTER (?area1 > ?area2) }",
        "Sparql ID based": "ASK { wd:Q1066 p:P2046 [ ps:P2046 ?area1 ] . wd:Q5492 p:P2046 [ ps:P2046 ?area2 ] . FILTER (?area1 > ?area2) }",
        "Squall label based": "whether [Lake Superior] has a <area> greater than a <area> of [Lake Erie]?",
        "Squall ID based": "whether <Q1066> has a <P2046> greater than a <P2046> of <Q5492>?"
    },
    {
        "Question": "How many Despicable Me movies are there?",
        "ID": "d39abea8",
        "Entities": "Q4447:Despicable Me",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Despicable Me] has a <part(s)>\nand give me the number of <part(s)>",
        "Sparklis ID based": "<Q98114628> has a <part(s)> and give me the number of <part(s)>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_44) WHERE { wd:[Despicable Me] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_7) AS ?number_of_44) WHERE { wd:Q98114628 p:P527 [ ps:P527 ?P527_7 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Despicable Me]?",
        "Squall ID based": "how many thing is a <P527> of <Q98114628>?"
    },
    {
        "Question": "Who was the 10th president of the United States?",
        "ID": "4165538d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11881:John Tyler",
        "Sparklis label based": "give me every [human] that has as a <position held> [President of the United States]  with <series ordinal> 10",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> with <P1545> 10",
        "Sparql label based": "SELECT DISTINCT ?Q5_222 WHERE { ?Q5_222 wdt:<instance of> wd:[Human] . ?Q5_222 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"10\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_222 WHERE { ?Q5_222 wdt:P31 wd:Q5 . ?Q5_222 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"10\" ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"10\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"10\" <Q11696>?"
    },
    {
        "Question": "Did Assassin's Creed III come out before 2010?",
        "ID": "5e812b1c",
        "Entities": "Q40166:Assassin's Creed III",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "[Assassin's Creed III] has  a <publication date>  and where the year of the <publication date> < 2010",
        "Sparklis ID based": "<Q40166> has a <P577> and where the year of the <P577> < 2010",
        "Sparql label based": "ASK { wd:[Assassin's Creed Iii] p:<publication date> [ ps:<publication date> ?P577_7 ] . FILTER (year(?P577_7) < \"2010\"^^xsd:integer) }",
        "Sparql ID based": "ASK { wd:Q40166 p:P577 [ ps:P577 ?P577_7 ] . FILTER (year(?P577_7) < \"2010\"^^xsd:integer) }",
        "Squall label based": "whether [Assassin's Creed Iii] has a <publication date> whose year is lesser than 2010?",
        "Squall ID based": "whether <Q40166> has a <P577> whose year is lesser than 2010?"
    },
    {
        "Question": "Which continent does not have a large number of people living on it?",
        "ID": "19b28f9f",
        "Entities": "Q5107:continent",
        "Mintaka Answer": "Q51:Antarctica",
        "Sparklis label based": "give me every [continent] that has  the lowest-to-highest <population>",
        "Sparklis ID based": "give me every <Q5107> that has the lowest-to-highest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q5107_1 ?P1082_38 WHERE { ?Q5107_1 wdt:<instance of> wd:[Continent] . ?Q5107_1 p:<population> [ ps:<population> ?P1082_38 ] . } ORDER BY ASC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5107_1 ?P1082_38 WHERE { ?Q5107_1 wdt:P31 wd:Q5107 . ?Q5107_1 p:P1082 [ ps:P1082 ?P1082_38 ] . } ORDER BY ASC(?P1082_38) LIMIT 1",
        "Squall label based": "which [Continent] has the lowest <population>?",
        "Squall ID based": "which <Q5107> has the lowest <P1082>?"
    },
    {
        "Question": "What was the imperial capital of Japan?",
        "ID": "746f48bc",
        "Entities": "Q17:Japan",
        "Mintaka Answer": "Q34600:Kyoto",
        "Sparklis label based": "give me every prefectural <capital of> [Japan] that is the <capital> with <end time> 1869-01-01T00:00:00Z  [Japan]",
        "Sparklis ID based": "give me every prefectural <P1376> <Q17> that is the <P36> with <P582> 1869-01-01T00:00:00Z <Q17>",
        "Sparql label based": "SELECT DISTINCT ?Q65589340_1 WHERE { ?Q65589340_1 wdt:<instance of> wd:[Prefectural Capital Of Japan] . ?Q65589340_1 p:<capital of> [ n2:<end time> \"1869-01-01T00:00:00Z\" ; ps:<capital of> wd:[Japan] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q65589340_1 WHERE { ?Q65589340_1 wdt:P31 wd:Q65589340 . ?Q65589340_1 p:P1376 [ n2:P582 \"1869-01-01T00:00:00Z\" ; ps:P1376 wd:Q17 ] . } LIMIT 1",
        "Squall label based": "which [Prefectural Capital Of Japan] has <capital of> at <end time> \"1869-01-01T00:00:00Z\" [Japan]?",
        "Squall ID based": "which <Q65589340> has <P1376> at <P582> \"1869-01-01T00:00:00Z\" <Q17>?"
    },
    {
        "Question": "Was the first Super Smash Bros. released before 2000?",
        "ID": "acbcfd39",
        "Entities": "Q2778220:Super Smash Bros.",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[Super Smash Bros 2] has  a <part(s)> that has  the lowest-to-highest <publication date>  and where the year of the <publication date> < 2000",
        "Sparklis ID based": "[Super_Smash_Bros_2] has a <part(s)> that has the lowest-to-highest <P577> and where the year of the <P577> < 2000",
        "Sparql label based": "ASK { wd:[Super Smash Bros. 2] p:<has part(s)> [ ps:<has part(s)> ?P527_7 ] . ?P527_7 p:<publication date> [ ps:<publication date> ?P577_45 ] . FILTER (year(?P577_45) < \"2000\"^^xsd:integer) }",
        "Sparql ID based": "ASK { wd:Q2778220 p:P527 [ ps:P527 ?P527_7 ] . ?P527_7 p:P577 [ ps:P577 ?P577_45 ] . FILTER (year(?P577_45) < \"2000\"^^xsd:integer) }",
        "Squall label based": "whether [Super Smash Bros. 2] has a <has part(s)> that has a <publication date> whose year is lesser than 2000?",
        "Squall ID based": "whether <Q2778220> has a <P527> that has a <P577> whose year is lesser than 2000?"
    },
    {
        "Question": "What was the tallest building in New York City in 1920?",
        "ID": "ba0d6da8",
        "Entities": "Q60:New York City",
        "Mintaka Answer": "Q217652:Woolworth Building",
        "Sparklis label based": "give me every [skyscraper]\n\n    that has \u26ac an <inception> before 1920 \u26ac\n    and that has \u26ac the highest-to-lowest <height> \u26ac\n    and that has \u26ac a <located in the administrative territorial entity> that has \u26ac a <located in the administrative territorial entity> that has as a <located in the administrative territorial entity> \u26ac New York City \u26ac \u26ac \u26ac",
        "Sparklis ID based": "give me every <Q11303> that has an <P571> before 1920 and that has the highest-to-lowest <P2048> and that has a <P131> that has a <P131> that has as a <P131> New York City",
        "Sparql label based": "SELECT DISTINCT ?Q11303_161 WHERE { ?Q11303_161 wdt:<instance of> wd:[Skyscraper] . ?Q11303_161 p:<inception> [ ps:<inception> ?P571_8 ] . FILTER ( str(?P571_8) <= \"1920\" ) ?Q11303_161 p:<height> [ ps:<height> ?P2048_106 ] . ?Q11303_161 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_114 ] . ?P131_114 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> ?P131_153 ] . ?P131_153 p:<located in the administrative territorial entity> [ ps:<located in the administrative territorial entity> wd:[New York City] ] . } ORDER BY DESC(?P2048_106) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q11303_161 WHERE { ?Q11303_161 wdt:P31 wd:Q11303 . ?Q11303_161 p:P571 [ ps:P571 ?P571_8 ] . FILTER ( str(?P571_8) <= \"1920\" ) ?Q11303_161 p:P2048 [ ps:P2048 ?P2048_106 ] . ?Q11303_161 p:P131 [ ps:P131 ?P131_114 ] . ?P131_114 p:P131 [ ps:P131 ?P131_153 ] . ?P131_153 p:P131 [ ps:P131 wd:Q60 ] . } ORDER BY DESC(?P2048_106) LIMIT 1",
        "Squall label based": "which [Skyscraper] has a <inception> lesser or equal to 1920 and has the highest <height> and has a <located in the administrative territorial entity> that has a <located in the administrative territorial entity> that has <located in the administrative territorial entity> [New York City]?",
        "Squall ID based": "which <Q11303> has a <P571> lesser or equal to 1920 and has the highest <P2048> and has a <P131> that has a <P131> that has <P131> <Q60>?"
    },
    {
        "Question": "Who was a U.S. president and was born on April 13, 1743?",
        "ID": "6f4e682d",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q11812:Thomas Jefferson",
        "Sparklis label based": "give me every [human] that has as a <position held>  [President of the United States]  and that has as a <date of birth>  1743-04-13T00:00:00Z",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11696> and that has as a <P569> 1743-04-13T00:00:00Z",
        "Sparql label based": "SELECT DISTINCT ?Q5_138 WHERE { ?Q5_138 wdt:<instance of> wd:[Human] . ?Q5_138 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_138 p:<date of birth> [ ps:<date of birth> \"1743-04-13T00:00:00Z\"^^xsd:dateTime ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_138 WHERE { ?Q5_138 wdt:P31 wd:Q5 . ?Q5_138 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_138 p:P569 [ ps:P569 \"1743-04-13T00:00:00Z\"^^xsd:dateTime ] . }",
        "Squall label based": "which [Human] has <position held> [President Of The United States] and has <date of birth> 1743-04-13T00:00:00Z?",
        "Squall ID based": "which <Q5> has <P39> <Q11696> and has <P569> 1743-04-13T00:00:00Z?"
    },
    {
        "Question": "Which Pirates of The Caribbean movie did not have Orlando Bloom?",
        "ID": "3b0fe8a6",
        "Entities": "Q44467:Orlando Bloom, Q194318:Pirates of the Caribbean",
        "Mintaka Answer": "Q183555:Pirates of the Caribbean: On Stranger Tides",
        "Sparklis label based": "give me every [film]      that not has as a <cast member>  [Orlando Bloom]      and that has as a <part of the series>  [Pirates of the Caribbean]",
        "Sparklis ID based": "give me every <Q11424> that not has as a <P161> <Q44467> and that has as a <P179> <Q194318>",
        "Sparql label based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Pirates Of The Caribbean] ] . FILTER ( NOT EXISTS { ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Orlando Bloom] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q11424_1 WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q194318 ] . FILTER ( NOT EXISTS { ?Q11424_1 p:P161 [ ps:P161 wd:Q44467 ] . } ) }",
        "Squall label based": "which [Film] has <part of the series> [Pirates Of The Caribbean] and has not <cast member> [Orlando Bloom]?",
        "Squall ID based": "which <Q11424> has <P179> <Q194318> and has not <P161> <Q44467>?"
    },
    {
        "Question": "When did Tom Hanks win his last Oscar?",
        "ID": "d18c2e5a",
        "Entities": "Q2263:Tom Hanks,Q19020:Academy Awards",
        "Mintaka Answer": "1995",
        "Sparklis label based": "[Tom Hanks]  <award received>  [Academy Award for Best Actor]  with a <point in time> and give me highest-to-lowest the year of the <point in time>",
        "Sparklis ID based": "<Q2263> <P166> <Q103916> with a <P585> and give me highest-to-lowest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_281 WHERE { wd:[Tom Hanks] p:<award received> [ ps:<award received> wd:[Academy Award For Best Actor] ; n1:<point in time> ?P585_7 ] . BIND (year(?P585_7) AS ?expr_281) } ORDER BY DESC(?expr_281) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_281 WHERE { wd:Q2263 p:P166 [ ps:P166 wd:Q103916 ; n1:P585 ?P585_7 ] . BIND (year(?P585_7) AS ?expr_281) } ORDER BY DESC(?expr_281) LIMIT 1",
        "Squall label based": "what is the highest year of a thing at which <point in time> [Tom Hanks] has <award received> [Academy Award For Best Actor]?",
        "Squall ID based": "what is the highest year of a thing at which <P585> <Q2263> has <P166> <Q103916>?"
    },
    {
        "Question": "How many of Booth Tarkington's books won a Pulitzer Prize?",
        "ID": "52be5ae6",
        "Entities": "Q893138:Booth Tarkington, Q46525:Pulitzer Prize",
        "Mintaka Answer": "2",
        "Sparklis label based": "[Booth Tarkington] is the <author> of something that <award received>  [Pulitzer Prize for Fiction]   and give me the number of thing",
        "Sparklis ID based": "<Q893138> is the <P50> of something that <P166> <Q833633> and give me the number of thing",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?thing_8) AS ?number_of_46) WHERE { ?thing_8 p:<author> [ ps:<author> wd:[Booth Tarkington] ] . ?thing_8 p:<award received> [ ps:<award received> wd:[Pulitzer Prize For Fiction] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?thing_8) AS ?number_of_46) WHERE { ?thing_8 p:P50 [ ps:P50 wd:Q893138 ] . ?thing_8 p:P166 [ ps:P166 wd:Q833633 ] . }",
        "Squall label based": "how many thing has <author> [Booth Tarkington] and has <award received> [Pulitzer Prize For Fiction]?",
        "Squall ID based": "how many thing has <P50> <Q893138> and has <P166> <Q833633>?"
    },
    {
        "Question": "What was the last Star Fox game released?",
        "ID": "efa09236",
        "Entities": "Q1501747:Star Fox",
        "Mintaka Answer": "Q3496959:Star Fox 2",
        "Sparklis label based": "give me every <video> game that has as a part of the series [Star Fox] and that has the highest-to-lowest <publication date>",
        "Sparklis ID based": "give me every <P10> game that has as a part of the series <Q1501747> and that has the highest-to-lowest <P577>",
        "Sparql label based": "select distinct ?q7889_1 ?p577_5 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Star Fox] ] . ?q7889_1 p:<publication date> [ ps:<publication date> ?p577_5 ] . } order by desc(?p577_5) limit 1",
        "Sparql ID based": "select distinct ?q7889_1 ?p577_5 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q1501747 ] . ?q7889_1 p:P577 [ ps:P577 ?p577_5 ] . } order by desc(?p577_5) limit 1",
        "Squall label based": "which [Video Game] has <part of the series> [Star Fox] and has the highest <publication date>?",
        "Squall ID based": "which <Q7889> has <P179> <Q1501747> and has the highest <P577>?"
    },
    {
        "Question": "Which video game sold the most of all time?",
        "ID": "6132a33a",
        "Entities": "Q7889:video game",
        "Mintaka Answer": "Q49740:Minecraft",
        "Sparklis label based": "give me every [video game] that has the highest-to-lowest <units sold>",
        "Sparklis ID based": "give me every <Q7889> that has the highest-to-lowest <P2664>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<units sold> [ ps:<units sold> ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 ?P2664_38 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P2664 [ ps:P2664 ?P2664_38 ] . } ORDER BY DESC(?P2664_38) LIMIT 1",
        "Squall label based": "which [Video Game] has the highest <units sold>?",
        "Squall ID based": "which <Q7889> has the highest <P2664>?"
    },
    {
        "Question": "What is Jay-Z's real name?",
        "ID": "2600566f",
        "Entities": "Q62766:Jay-Z",
        "Mintaka Answer": "Q62766:Jay-Z",
        "Sparklis label based": "[Jay-Z] has  a <birth name>",
        "Sparklis ID based": "<Q62766> has a <P1477>",
        "Sparql label based": "SELECT DISTINCT ?P1477_8 WHERE { wd:[Jay-z] p:<birth name> [ ps:<birth name> ?P1477_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P1477_8 WHERE { wd:Q62766 p:P1477 [ ps:P1477 ?P1477_8 ] . }",
        "Squall label based": "what is a <birth name> of [Jay-z]?",
        "Squall ID based": "what is a <P1477> of <Q62766>?"
    },
    {
        "Question": "Which actor was the star of Titanic and was born in Los Angeles, California?",
        "ID": "2723bb1b",
        "Entities": "Q44578: Titanic, Q65: Los Angeles",
        "Mintaka Answer": "Q38111: Leonardo DiCaprio",
        "Sparklis label based": "give me every [human] that is the <cast member> of [Titanic 2] and whose <place of birth> is [Los Angeles]",
        "Sparklis ID based": "give me every <Q5> that is the <P161> of <Q44578> and whose <P19> is <Q65>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . wd:[Titanic 2] p:<cast member> [ ps:<cast member> ?Q5_1 ] . ?Q5_1 p:<place of birth> [ ps:<place of birth> wd:[Los Angeles] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . wd:Q44578 p:P161 [ ps:P161 ?Q5_1 ] . ?Q5_1 p:P19 [ ps:P19 wd:Q65 ] . }",
        "Squall label based": "which [Human] is a <cast member> of [Titanic 2] and has <place of birth> [Los Angeles]?",
        "Squall ID based": "which <Q5> is a <P161> of <Q44578> and has <P19> <Q65>?"
    },
    {
        "Question": "Who was the 42nd president of the United States and former governor of Arkansas?",
        "ID": "1e65268c",
        "Entities": "Q1612:Arkansas,Q30:United States of America,42:None",
        "Mintaka Answer": "Q1124:Bill Clinton",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 42 [President of the United States] and that has as a <position held> [Governor of Arkansas]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 42 <Q11696> and that has as a <P39> <Q1540336>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n1:<series ordinal> \"42\" ; ps:<position held> wd:[President Of The United States] ] . ?q5_1 p:<position held> [ ps:<position held> wd:[Governor Of Arkansas] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n1:P1545 \"42\" ; ps:P39 wd:Q11696 ] . ?q5_1 p:P39 [ ps:P39 wd:Q1540336 ] . }",
        "Squall label based": "which [Human] has <position held> [Governor Of Arkansas] and  at <series ordinal> \"42\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> <Q1540336> and  at <P1545> \"42\" <Q11696>?"
    },
    {
        "Question": "Which Percy Jackson series of books have not been made into movies?",
        "ID": "3b3d6c9e",
        "Entities": "Q3899725:Percy Jackson",
        "Mintaka Answer": "Q1140036:The Titan's Curse,Q1991641:The Battle of the Labyrinth,Q2077641:The Last Olympian",
        "Sparklis label based": "[Percy Jackson] has a <present in work> that has a part(s) that not has as a <part of the series> a [film series]",
        "Sparklis ID based": "<Q3899725> has a <P1441> that has a part(s) that not has as a <P179> a <Q24856>",
        "Sparql label based": "SELECT DISTINCT ?P1441_8 ?P527_46 WHERE { wd:[Percy Jackson] p:<present in work> [ ps:<present in work> ?P1441_8 ] . ?P1441_8 p:<has part(s)> [ ps:<has part(s)> ?P527_46 ] . FILTER ( NOT EXISTS { ?P179_84 wdt:<instance of> wd:[Film Series] . ?P527_46 p:<part of the series> [ ps:<part of the series> ?P179_84 ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?P1441_8 ?P527_46 WHERE { wd:Q3899725 p:P1441 [ ps:P1441 ?P1441_8 ] . ?P1441_8 p:P527 [ ps:P527 ?P527_46 ] . FILTER ( NOT EXISTS { ?P179_84 wdt:P31 wd:Q24856 . ?P527_46 p:P179 [ ps:P179 ?P179_84 ] . } ) }",
        "Squall label based": "what is a <present in work> of [Percy Jackson] and has a <has part(s)> that has not <part of the series> a [Film Series]?",
        "Squall ID based": "what is a <P1441> of <Q3899725> and has a <P527> that has not <P179> a <Q24856>?"
    },
    {
        "Question": "Which Harry Potter books do not feature the living Cedric Diggory?",
        "ID": "27795ff4",
        "Entities": "Q8337:Harry Potter, Q841669:Cedric Diggory",
        "Mintaka Answer": "Q43361:Harry Potter and the Philosopher's Stone, Q47209:Harry Potter and the Chamber of Secrets, Q46887:Harry Potter and the Half-Blood Prince, Q80817:Harry Potter and the Order of the Phoenix, Q46758:Harry Potter and the Deathly Hallows",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [Harry_Potter_2] and that not has as a <characters>  [Cedric Diggory]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q8337> and that not has as a <P674> <Q841669>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[Harry Potter 2] ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:<characters> [ ps:<characters> wd:[Cedric Diggory] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q8337 ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:P674 [ ps:P674 wd:Q841669 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [Harry Potter 2] and has not <characters> [Cedric Diggory]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q8337> and has not <P674> <Q841669>?"
    },
    {
        "Question": "What is the deepest lake in Russia?",
        "ID": "c8ca668f",
        "Entities": "Q159:Russia",
        "Mintaka Answer": "Q5513:Lake Baikal",
        "Sparklis label based": "give me every [lake] that has as a <country> [Russia] and that has the highest-to-lowest <vertical depth>",
        "Sparklis ID based": "give me every <Q23397> that has as a <P17> <Q159> and that has the highest-to-lowest <P4511>",
        "Sparql label based": "SELECT DISTINCT ?Q23397_1 ?P4511_103 WHERE { ?Q23397_1 wdt:<instance of> wd:[Lake] . ?Q23397_1 p:<country> [ ps:<country> wd:[Russia] ] . ?Q23397_1 p:<vertical depth> [ ps:<vertical depth> ?P4511_103 ] . } ORDER BY DESC(?P4511_103) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q23397_1 ?P4511_103 WHERE { ?Q23397_1 wdt:P31 wd:Q23397 . ?Q23397_1 p:P17 [ ps:P17 wd:Q159 ] . ?Q23397_1 p:P4511 [ ps:P4511 ?P4511_103 ] . } ORDER BY DESC(?P4511_103) LIMIT 1",
        "Squall label based": "which [Lake] has <country> [Russia] and has the highest <vertical depth>?",
        "Squall ID based": "which <Q23397> has <P17> <Q159> and has the highest <P4511>?"
    },
    {
        "Question": "Who was an actor and president of the United States?",
        "ID": "ec544fe0",
        "Entities": "Q11696:President of the United States, Q30:United States of America",
        "Mintaka Answer": "Q9960:Ronald Reagan",
        "Sparklis label based": "give me every [human] that has as an <occupation>  [actor]  and  [politician]  and that has as a <position held>  [President of the United States]  and that has as a <country> of citizenship  [United States of America]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q33999> and <Q82955> and that has as a <P39> <Q11696> and that has as a <P17> of citizenship <Q30>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . ?Q5_1 p:<occupation> [ ps:<occupation> wd:[Politician] ] . ?Q5_1 p:<position held> [ ps:<position held> wd:[President Of The United States] ] . ?Q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[United States Of America] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P106 [ ps:P106 wd:Q33999 ] . ?Q5_1 p:P106 [ ps:P106 wd:Q82955 ] . ?Q5_1 p:P39 [ ps:P39 wd:Q11696 ] . ?Q5_1 p:P27 [ ps:P27 wd:Q30 ] . }",
        "Squall label based": "which [Human] has <occupation> [Actor] and [Politician] and has <position held> [President Of The United States] and has <country of citizenship> [United States Of America]?",
        "Squall ID based": "which <Q5> has <P106> <Q33999> and <Q82955> and has <P39> <Q11696> and has <P27> <Q30>?"
    },
    {
        "Question": "Which Lord of the Rings book was the shortest?",
        "ID": "915f28b1",
        "Entities": "Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q332581:The Return of the King",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series>  [The Lord of the Rings]  and that has  the lowest-to-highest <number of pages>",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q15228> and that has the lowest-to-highest <P1104>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_8 ?P1104_12 WHERE { ?Q7725634_8 wdt:<instance of> wd:[Literary Work] . ?Q7725634_8 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . ?Q7725634_8 p:<number of pages> [ ps:<number of pages> ?P1104_12 ] . } ORDER BY ASC(?P1104_12) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_8 ?P1104_12 WHERE { ?Q7725634_8 wdt:P31 wd:Q7725634 . ?Q7725634_8 p:P179 [ ps:P179 wd:Q15228 ] . ?Q7725634_8 p:P1104 [ ps:P1104 ?P1104_12 ] . } ORDER BY ASC(?P1104_12) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings] and has the lowest <number of pages>?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228> and has the lowest <P1104>?"
    },
    {
        "Question": "What was the first RPG in the Mario Bros. franchise?",
        "ID": "4.11E+48",
        "Entities": "Q37817870:Mario Bros., Q160738:role-playing game",
        "Mintaka Answer": "Q1063119:Super Mario RPG",
        "Sparklis label based": "give me every [video game] that has as a <part of the series>  [[Mario] role-playing games]  and that has  the lowest-to-highest <publication date>  and that has  a <genre> that is the subclass of role-playing [video game]   and that has as a <characters>  [Mario] that is the part of [Mario] Bros.",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q12379> role-playing games] and that has the lowest-to-highest <P577> and that has a <P136> that is the subclass of role-playing <Q7889> and that has as a <P674> <Q12379> that is the part of <Q12379> Bros.",
        "Sparql label based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:<instance of> wd:[Video Game] . ?Q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Mario Role-playing Games] ] . ?Q7889_1 p:<publication date> [ ps:<publication date> ?P577_5 ] . ?Q7889_1 p:<genre> [ ps:<genre> ?P136_42 ] . ?P136_42 p:<subclass of> [ ps:<subclass of> wd:[Role-playing Video Game] ] . ?Q7889_1 p:<characters> [ ps:<characters> wd:[Mario] ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_1 WHERE { ?Q7889_1 wdt:P31 wd:Q7889 . ?Q7889_1 p:P179 [ ps:P179 wd:Q17215551 ] . ?Q7889_1 p:P577 [ ps:P577 ?P577_5 ] . ?Q7889_1 p:P136 [ ps:P136 ?P136_42 ] . ?P136_42 p:P279 [ ps:P279 wd:Q744038 ] . ?Q7889_1 p:P674 [ ps:P674 wd:Q12379 ] . } ORDER BY ASC(?P577_5) LIMIT 1",
        "Squall label based": "which [Video Game] has <part of the series> [Mario Role-playing Games] and has the lowest <publication date> and has <characters> [Mario] and has a <genre> that has <subclass of> [Role-playing Video Game]?",
        "Squall ID based": "which <Q7889> has <P179> <Q17215551> and has the lowest <P577> and has <P674> <Q12379> and has a <P136> that has <P279> <Q744038>?"
    },
    {
        "Question": "Which actor starred in Squid Game and was born in India?",
        "ID": "a241bab1",
        "Entities": "Q106582931:Squid Game,Q668:India",
        "Mintaka Answer": "Q108703406:Anupam Tripathi",
        "Sparklis label based": "give me every [human] that has as an <occupation> [actor] and that is the <cast member> of [Squid Game] and that has as a <country of citizenship>  [India]",
        "Sparklis ID based": "give me every <Q5> that has as an <P106> <Q33999> and that is the <P161> of <Q106582931> and that has as a <P27> <Q668>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<occupation> [ ps:<occupation> wd:[Actor] ] . wd:[Squid Game] p:<cast member> [ ps:<cast member> ?q5_1 ] . ?q5_1 p:<country of citizenship> [ ps:<country of citizenship> wd:[India] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P106 [ ps:P106 wd:Q33999 ] . wd:Q106582931 p:P161 [ ps:P161 ?q5_1 ] . ?q5_1 p:P27 [ ps:P27 wd:Q668 ] . }",
        "Squall label based": "which [Human] has <occupation> [Actor] and is a <cast member> of [Squid Game] and has <country of citizenship> [India]?",
        "Squall ID based": "which <Q5> has <P106> <Q33999> and is a <P161> of <Q106582931> and has <P27> <Q668>?"
    },
    {
        "Question": "How many Rocky movies has Sylvester Stallone appeared in?",
        "ID": "b60fd039",
        "Entities": "Q188652:Rocky, Q40026:Sylvester Stallone",
        "Mintaka Answer": "6",
        "Sparklis label based": "give me every [film] that has as a <part of the series>  [Rocky]  and that has as a <cast member>  [Sylvester Stallone]  and give me the number of [film]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P179> <Q1078084> and that has as a <P161> <Q40026> and give me the number of <Q11424>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:<instance of> wd:[Film] . ?Q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Rocky] ] . ?Q11424_1 p:<cast member> [ ps:<cast member> wd:[Sylvester Stallone] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?Q11424_1) AS ?number_of_38) WHERE { ?Q11424_1 wdt:P31 wd:Q11424 . ?Q11424_1 p:P179 [ ps:P179 wd:Q1078084 ] . ?Q11424_1 p:P161 [ ps:P161 wd:Q40026 ] . }",
        "Squall label based": "how many [Film] has <part of the series> [Rocky] and has <cast member> [Sylvester Stallone]?",
        "Squall ID based": "how many <Q11424> has <P179> <Q1078084> and has <P161> <Q40026>?"
    },
    {
        "Question": "Which MLB team is based in Texas and used to have Josh Hamilton?",
        "ID": "e3d3b65b",
        "Entities": "Q716346:Josh Hamilton, Q1439:Texas, Q1163715:Major League Baseball",
        "Mintaka Answer": "Q329816:Texas Rangers",
        "Sparklis label based": "give me every [baseball team] that has as a league  [Major League Baseball]  and that is the <member of sports team> of [Josh Hamilton]",
        "Sparklis ID based": "give me every <Q13027888> that has as a league <Q1163715> and that is the <P54> of <Q716346>",
        "Sparql label based": "SELECT DISTINCT ?Q13027888_1 WHERE { ?Q13027888_1 wdt:<instance of> wd:[Baseball Team] . ?Q13027888_1 p:<league> [ ps:<league> wd:[Major League Baseball] ] . wd:[Josh Hamilton] p:<member of sports team> [ ps:<member of sports team> ?Q13027888_1 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q13027888_1 WHERE { ?Q13027888_1 wdt:P31 wd:Q13027888 . ?Q13027888_1 p:P118 [ ps:P118 wd:Q1163715 ] . wd:Q716346 p:P54 [ ps:P54 ?Q13027888_1 ] . }",
        "Squall label based": "which [Baseball Team] has <league> [Major League Baseball] and is a <member of sports team> of [Josh Hamilton]?",
        "Squall ID based": "which <Q13027888> has <P118> <Q1163715> and is a <P54> of <Q716346>?"
    },
    {
        "Question": "Which island nation is popstar Rihanna from?",
        "ID": "4b20dd7c",
        "Entities": "Q36844:Rihanna",
        "Mintaka Answer": "Q244:Barbados",
        "Sparklis label based": "[Rihanna] has a <country of citizenship>",
        "Sparklis ID based": "<Q36844> has a <P27>",
        "Sparql label based": "SELECT DISTINCT ?P27_8 WHERE { wd:[Rihanna] p:<country of citizenship> [ ps:<country of citizenship> ?P27_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P27_8 WHERE { wd:Q36844 p:P27 [ ps:P27 ?P27_8 ] . }",
        "Squall label based": "what is a <country of citizenship> of [Rihanna]?",
        "Squall ID based": "what is a <P27> of <Q36844>?"
    },
    {
        "Question": "Who was the narrator for the English language version of the movie March of the Penguins?",
        "ID": "6db073c6",
        "Entities": "Q330113:March of the Penguins, Q1860:English",
        "Mintaka Answer": "Q48337:Morgan Freeman",
        "Sparklis label based": "[March of the Penguins] has  a <voice actor> with language of work or name [English]",
        "Sparklis ID based": "<Q330113> has a <P725> with language of work or name <Q1860>",
        "Sparql label based": "SELECT DISTINCT ?P725_17 WHERE { wd:[March Of The Penguins] p:<voice actor> [ ps:<voice actor> ?P725_17 ; n1:<language of work (or name)> wd:[English] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P725_17 WHERE { wd:Q330113 p:P725 [ ps:P725 ?P725_17 ; n1:P407 wd:Q1860 ] . }",
        "Squall label based": "what is a <voice actor> at <language of work (or name)> [English] of [March Of The Penguins]?",
        "Squall ID based": "what is a <P725> at <P407> <Q1860> of <Q330113>?"
    },
    {
        "Question": "What was the first Spyro game to not be developed by Insomniac Games?",
        "ID": "4ce1d6f1",
        "Entities": "Q1141245:Insomniac Games, Q927422:Spyro",
        "Mintaka Answer": "Q2500267:Spyro: Season of Ice",
        "Sparklis label based": "give me every [video game]\nthat has as a <part of the series> [Spyro] and that not has as a <developer> [Insomniac Games]",
        "Sparklis ID based": "give me every <Q7889> that has as a <P179> <Q927422> and that not has as a <P178> <Q1141245>",
        "Sparql label based": "SELECT DISTINCT ?Q7889_7 WHERE { ?Q7889_7 wdt:<instance of> wd:[Video Game] . ?Q7889_7 p:<part of the series> [ ps:<part of the series> wd:[Spyro] ] . FILTER ( NOT EXISTS { ?Q7889_7 p:<developer> [ ps:<developer> wd:[Insomniac Games] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7889_7 WHERE { ?Q7889_7 wdt:P31 wd:Q7889 . ?Q7889_7 p:P179 [ ps:P179 wd:Q927422 ] . FILTER ( NOT EXISTS { ?Q7889_7 p:P178 [ ps:P178 wd:Q1141245 ] . } ) }",
        "Squall label based": "which [Video Game] has <part of the series> [Spyro] and has not <developer> [Insomniac Games]?",
        "Squall ID based": "which <Q7889> has <P179> <Q927422> and has not <P178> <Q1141245>?"
    },
    {
        "Question": "Who was the first woman to become vice president in the United States?",
        "ID": "062ad25f",
        "Entities": "Q30:United States of America,1:None",
        "Mintaka Answer": "Q10853588:Kamala Harris",
        "Sparklis label based": "give me every [human] that has as a <position held> [Vice President of the United States] with the lowest-to-highest <start time> and that has as a <sex or gender> [female]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> <Q11699> with the lowest-to-highest <P580> and that has as a <P21> <Q6581072>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ; n1:<start time> ?P580_9 ] . ?Q5_1 p:<sex or gender> [ ps:<sex or gender> wd:[Female] ] . } ORDER BY ASC(?P580_9)",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ ps:P39 wd:Q11699 ; n1:P580 ?P580_9 ] . ?Q5_1 p:P21 [ ps:P21 wd:Q6581072 ] . } ORDER BY ASC(?P580_9)",
        "Squall label based": "which [Human] has <position held> at the ascending <start time> [Vice President Of The United States] and has <sex or gender> [Female]?",
        "Squall ID based": "which <Q5> has <P39> at the ascending <P580> <Q11699> and has <P21> <Q6581072>?"
    },
    {
        "Question": "When did Al Gore first become vice president?",
        "ID": "53e6deb6",
        "Entities": "Q11699:Vice President of the United States, Q19673:Al Gore",
        "Mintaka Answer": "1993-01-20",
        "Sparklis label based": "[Al Gore] has as a <position held> [Vice President of the United States] with a <start time> and give me the year of the <start time>",
        "Sparklis ID based": "<Q19673> has as a <P39> <Q11699> with a <P580> and give me the year of the <P580>",
        "Sparql label based": "SELECT DISTINCT ?expr_92 WHERE { wd:[Al Gore] p:<position held> [ ps:<position held> wd:[Vice President Of The United States] ; n1:<start time> ?P580_7 ] . BIND (year(?P580_7) AS ?expr_92) }",
        "Sparql ID based": "SELECT DISTINCT ?expr_92 WHERE { wd:Q19673 p:P39 [ ps:P39 wd:Q11699 ; n1:P580 ?P580_7 ] . BIND (year(?P580_7) AS ?expr_92) }",
        "Squall label based": "what is the year of a thing at which <start time> [Al Gore] has <position held> [Vice President Of The United States]?",
        "Squall ID based": "what is the year of a thing at which <P580> <Q19673> has <P39> <Q11699>?"
    },
    {
        "Question": "How many children did Lily Potter have?",
        "ID": "5f248fdf",
        "Entities": "Q754837:Lily Potter",
        "Mintaka Answer": "Q3244512:Harry Potter",
        "Sparklis label based": "[Lily Potter] has a <child> and give me the number of <child>",
        "Sparklis ID based": "<Q754837> has a <P40> and give me the number of <P40>",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P40_8) AS ?number_of_47) WHERE { wd:[Lily Potter] p:<child> [ ps:<child> ?P40_8 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P40_8) AS ?number_of_47) WHERE { wd:Q754837 p:P40 [ ps:P40 ?P40_8 ] . }",
        "Squall label based": "how many thing is a <child> of [Lily Potter]?",
        "Squall ID based": "how many thing is a <P40> of <Q754837>?"
    },
    {
        "Question": "Did George H.W. Bush serve as president before George W. Bush?",
        "ID": "e1e8dac1",
        "Entities": "Q207:George W. Bush, Q23505:George H. W. Bush",
        "Mintaka Answer": "TRUE",
        "Sparklis label based": "[George H. W. Bush]  has as a <position held>  [President of the United States] with a <start time>  and [George H. W. Bush] has as a <position held>  [President of the United States] with a <start time>",
        "Sparklis ID based": "<Q23505> has as a <P39> <Q11696> with a <P580> and <Q23505> has as a <P39> <Q11696> with a <P580>",
        "Sparql label based": "ASK { wd:[George W. Bush] p:<position held> [ n1:<start time> ?P580_10 ; ps:<position held> wd:[President Of The United States] ] . BIND (year(?P580_10) AS ?expr_180) wd:[George H. W. Bush] p:<position held> [ n1:<start time> ?P580_11 ; ps:<position held> wd:[President Of The United States] ] . BIND (year(?P580_11) AS ?expr_181) FILTER (?expr_181 < ?expr_180)}",
        "Sparql ID based": "ASK { wd:Q207 p:P39 [ n1:P580 ?P580_10 ; ps:P39 wd:Q11696 ] . BIND (year(?P580_10) AS ?expr_180) wd:Q23505 p:P39 [ n1:P580 ?P580_11 ; ps:P39 wd:Q11696 ] . BIND (year(?P580_11) AS ?expr_181) FILTER (?expr_181 < ?expr_180)}",
        "Squall label based": "whether [George W. Bush] has <position held> at a <start time> whose year is greater than the year of a thing at which <start time> [George H. W. Bush] has <position held> [President Of The United States] [President Of The United States]?",
        "Squall ID based": "whether <Q207> has <P39> at a <P580> whose year is greater than the year of a thing at which <P580> <Q23505> has <P39> <Q11696> <Q11696>?"
    },
    {
        "Question": "Which Lord of the Rings trilogy books does not have Gandalf the White?",
        "ID": "8cf65676",
        "Entities": "Q177499:Gandalf, Q15228:The Lord of the Rings",
        "Mintaka Answer": "Q208002:The Fellowship of the Ring",
        "Sparklis label based": "give me every [literary work]      that not has as a <characters>  [Gandalf]      and that has as a <part of the series>  [The Lord of the Rings]",
        "Sparklis ID based": "give me every <Q7725634> that not has as a <P674> <Q177499> and that has as a <P179> <Q15228>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[The Lord Of The Rings] ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:<characters> [ ps:<characters> wd:[Gandalf] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q15228 ] . FILTER ( NOT EXISTS { ?Q7725634_1 p:P674 [ ps:P674 wd:Q177499 ] . } ) }",
        "Squall label based": "which [Literary Work] has <part of the series> [The Lord Of The Rings] and has not <characters> [Gandalf]?",
        "Squall ID based": "which <Q7725634> has <P179> <Q15228> and has not <P674> <Q177499>?"
    },
    {
        "Question": "Which movie was directed by Martin Scorsese and starred Mark Ruffalo?",
        "ID": "fed3e2aa",
        "Entities": "Q41422:Mark Ruffalo,Q41148:Martin Scorsese",
        "Mintaka Answer": "Q210364:Shutter Island",
        "Sparklis label based": "give me every [film] that has as a <director> [Martin Scorsese] and that has as a <cast member> [Mark Ruffalo]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P57> <Q41148> and that has as a <P161> <Q41422>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<director> [ ps:<director> wd:[Martin Scorsese] ] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Mark Ruffalo] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P57 [ ps:P57 wd:Q41148 ] . ?q11424_1 p:P161 [ ps:P161 wd:Q41422 ] . }",
        "Squall label based": "which [Film] has <director> [Martin Scorsese] and has <cast member> [Mark Ruffalo]?",
        "Squall ID based": "which <Q11424> has <P57> <Q41148> and has <P161> <Q41422>?"
    },
    {
        "Question": "Who was the 25th US president?",
        "ID": "38879271",
        "Entities": "Q11696:President of the United States,25:None",
        "Mintaka Answer": "Q35041:William McKinley",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 25 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 25 <Q11696>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<position held> [ n2:<series ordinal> \"25\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P39 [ n2:P1545 \"25\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"25\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"25\" <Q11696>?"
    },
    {
        "Question": "Which main series Pok\u00e9mon game was not developed by Game Freak?",
        "ID": "ddcf8520",
        "Entities": "Q782028:Game Freak",
        "Mintaka Answer": "Q105690885:Pok\u00e9mon Brilliant Diamond, Q105690902:Pok\u00e9mon Shining Pearl",
        "Sparklis label based": "give me everything\nthat has as a <part of the series> [Pok\u00e9mon core series] \nand that not has as a <developer> [Game Freak]",
        "Sparklis ID based": "give me everything that has as a <P179> <Q24558579> and that not has as a <P178> <Q782028>",
        "Sparql label based": "SELECT DISTINCT ?thing_7 WHERE { ?thing_7 p:<part of the series> [ ps:<part of the series> wd:[Pokemon Core Series] ] . FILTER ( NOT EXISTS { ?thing_7 p:<developer> [ ps:<developer> wd:[Game Freak] ] . } ) }",
        "Sparql ID based": "SELECT DISTINCT ?thing_7 WHERE { ?thing_7 p:P179 [ ps:P179 wd:Q24558579 ] . FILTER ( NOT EXISTS { ?thing_7 p:P178 [ ps:P178 wd:Q782028 ] . } ) }",
        "Squall label based": "what has <part of the series> [Pokemon Core Series] and has not <developer> [Game Freak]?",
        "Squall ID based": "what has <P179> <Q24558579> and has not <P178> <Q782028>?"
    },
    {
        "Question": "When did Adele win her first Grammy?",
        "ID": "880a35f2",
        "Entities": "Q23215:Adele, Q41254:Grammy Award",
        "Mintaka Answer": "2009",
        "Sparklis label based": "[Adele]  <award received> with a <point in time> something that is the <instance of> [Grammy Awards] and give me lowest-to-highest the year of the <point in time>",
        "Sparklis ID based": "<Q23215> <P166> with a <P585> something that is the <P31> <Q41254> and give me lowest-to-highest the year of the <P585>",
        "Sparql label based": "SELECT DISTINCT ?expr_140 WHERE { wd:[Adele] p:<award received> [ n1:<point in time> ?P585_12 ; ps:<award received> ?P31_7 ] . ?P31_7 p:<instance of> [ ps:<instance of> wd:[Grammy Awards] ] . BIND (year(?P585_12) AS ?expr_140) } ORDER BY ASC(?expr_140) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?expr_140 WHERE { wd:Q23215 p:P166 [ n1:P585 ?P585_12 ; ps:P166 ?P31_7 ] . ?P31_7 p:P31 [ ps:P31 wd:Q41254 ] . BIND (year(?P585_12) AS ?expr_140) } ORDER BY ASC(?expr_140) LIMIT 1",
        "Squall label based": "what is the lowest year of a thing at which <point in time> [Adele] has a <award received> that has <instance of> [Grammy Awards]?",
        "Squall ID based": "what is the lowest year of a thing at which <P585> <Q23215> has a <P166> that has <P31> <Q41254>?"
    },
    {
        "Question": "What is the first book in the Stormlight Archive series by Brandon Sanderson?",
        "ID": "32f3a33d",
        "Entities": "Q7766706:The Stormlight Archive, Q457608:Brandon Sanderson",
        "Mintaka Answer": "Q2136877:The Way of Kings",
        "Sparklis label based": "[The Stormlight Archive] has as an <author>  Brandon Sanderson  and has  a part(s) with <series ordinal> 1",
        "Sparklis ID based": "<Q7766706> has as an <P50> Brandon Sanderson and has a part(s) with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?P527_4 WHERE {wd:[The Stormlight Archive] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ; n1:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P527_4 WHERE {wd:Q7766706 p:P527 [ ps:P527 ?P527_4 ; n1:P1545 \"1\" ] . }",
        "Squall label based": "what is a <has part(s)> at <series ordinal> \"1\" of [The Stormlight Archive]?",
        "Squall ID based": "what is a <P527> at <P1545> \"1\" of <Q7766706>?"
    },
    {
        "Question": "What is the first book in A Series of Unfortunate Events called?",
        "ID": "505d94c5",
        "Entities": "Q213841:A Series of Unfortunate Events,1:None",
        "Mintaka Answer": "Q678277:The Bad Beginnin",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> [A Series of Unfortunate Events] with <series ordinal> 1",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> <Q213841> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ ps:<part of the series> wd:[A Series Of Unfortunate Events] ; n2:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ ps:P179 wd:Q213841 ; n2:P1545 \"1\" ] . }",
        "Squall label based": "which [Literary Work] has <part of the series> at <series ordinal> \"1\" [A Series Of Unfortunate Events]?",
        "Squall ID based": "which <Q7725634> has <P179> at <P1545> \"1\" <Q213841>?"
    },
    {
        "Question": "Which Die Hard movie stars Samuel L. Jackson?",
        "ID": "bfebcad0",
        "Entities": "Q2716420:Die Hard,Q172678:Samuel L. Jackson",
        "Mintaka Answer": "Q106871:Die Hard with a Vengeance",
        "Sparklis label based": "give me every [film] that has as a <cast member> [Samuel L. Jackson] and that has as a <part of the series> [Die Hard]",
        "Sparklis ID based": "give me every <Q11424> that has as a <P161> <Q172678> and that has as a <P179> <Q2716420>",
        "Sparql label based": "select distinct ?q11424_1 where { ?q11424_1 wdt:<instance of> wd:[Film] . ?q11424_1 p:<cast member> [ ps:<cast member> wd:[Samuel L. Jackson] ] . ?q11424_1 p:<part of the series> [ ps:<part of the series> wd:[Die Hard] ] . }",
        "Sparql ID based": "select distinct ?q11424_1 where { ?q11424_1 wdt:P31 wd:Q11424 . ?q11424_1 p:P161 [ ps:P161 wd:Q172678 ] . ?q11424_1 p:P179 [ ps:P179 wd:Q2716420 ] . }",
        "Squall label based": "which [Film] has <cast member> [Samuel L. Jackson] and has <part of the series> [Die Hard]?",
        "Squall ID based": "which <Q11424> has <P161> <Q172678> and has <P179> <Q2716420>?"
    },
    {
        "Question": "Which US president has had the most votes?",
        "ID": "fe541d01",
        "Entities": "Q30: United States of America",
        "Mintaka Answer": "Q6279: Joe Biden",
        "Sparklis label based": "give me every [human] that is the <candidate of> something that is the <instance of> [United States presidential election] with the highest-to-lowest <votes received>",
        "Sparklis ID based": "give me every <Q5> that is the <candidate_of> something that is the <P31> <Q47566> with the highest-to-lowest <P1111>",
        "Sparql label based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:<instance of> wd:[Human] . ?P31_108 p:<candidate> [ ps:<candidate> ?Q5_7 ; n1:<votes received> ?P1111_145 ] . ?P31_108 p:<instance of> [ ps:<instance of> wd:[United States Presidential Election] ] . } ORDER BY DESC(?P1111_145) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q5_7 WHERE { ?Q5_7 wdt:P31 wd:Q5 . ?P31_108 p:P726 [ ps:P726 ?Q5_7 ; n1:P1111 ?P1111_145 ] . ?P31_108 p:P31 [ ps:P31 wd:Q47566 ] . } ORDER BY DESC(?P1111_145) LIMIT 1",
        "Squall label based": "which [Human] is a <candidate> at the highest <votes received> of a thing that has <instance of> [United States Presidential Election]?",
        "Squall ID based": "which <Q5> is a <P726> at the highest <P1111> of a thing that has <P31> <Q47566>?"
    },
    {
        "Question": "Which movie actor was born in Sydney, Australia and has played a role as a main character in the X-Men movies?",
        "ID": "8a8d906b",
        "Entities": "Q2006869:X-Men,Q3130:Sydney",
        "Mintaka Answer": "Q129591:Hugh Jackman",
        "Sparklis label based": "give me every [human] that has as a <place of birth> [Sydney] and that is the <cast member> of something that has as a <part of the series> [X-Men 2]",
        "Sparklis ID based": "give me every <Q5> that has as a <P19> <Q3130> and that is the <P161> of something that has as a <P179> <Q128452>",
        "Sparql label based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:<instance of> wd:[Human] . ?Q5_1 p:<place of birth> [ ps:<place of birth> wd:[Sydney] ] . ?P179_38 p:<cast member> [ ps:<cast member> ?Q5_1 ] . wd:[X-men] p:<part of the series> [ ps:<part of the series> ?P179_38 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5_1 WHERE { ?Q5_1 wdt:P31 wd:Q5 . ?Q5_1 p:P19 [ ps:P19 wd:Q3130 ] . ?P179_38 p:P161 [ ps:P161 ?Q5_1 ] . wd:Q106182 p:P179 [ ps:P179 ?P179_38 ] . }",
        "Squall label based": "which [Human] has <place of birth> [Sydney] and is a <cast member> of a <part of the series> of [X-men]?",
        "Squall ID based": "which <Q5> has <P19> <Q3130> and is a <P161> of a <P179> of <Q106182>?"
    },
    {
        "Question": "How many books are in C.S. Lewis' Space Trilogy?",
        "ID": "a64a4941",
        "Entities": "Q9204:C. S. Lewis, Q2070438:The Space Trilogy",
        "Mintaka Answer": "3",
        "Sparklis label based": "[The Space Trilogy] has as an <author>  C. S. Lewis  and has  a part(s)  and give me the number of part(s)",
        "Sparklis ID based": "<Q2070438> has as an <P50> C. S. Lewis and has a part(s) and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:[The Space Trilogy] p:<has part(s)> [ ps:<has part(s)> ?P527_4 ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_4) AS ?number_of_42) WHERE { wd:Q2070438 p:P527 [ ps:P527 ?P527_4 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [The Space Trilogy]?",
        "Squall ID based": "how many thing is a <P527> of <Q2070438>?"
    },
    {
        "Question": "Who is Channing Tatum's ex-wife?",
        "ID": "3ba131a5",
        "Entities": "Q212064:Channing Tatum",
        "Mintaka Answer": "Q232708:Jenna Dewan",
        "Sparklis label based": "[Channing Tatum] has  a <spouse> with an <end time>",
        "Sparklis ID based": "<Q212064> has a <P26> with an <P582>",
        "Sparql label based": "SELECT DISTINCT ?P26_8 WHERE { wd:[Channing Tatum] p:<spouse> [ ps:<spouse> ?P26_8 ; n1:<end time> ?P582_47 ] . }",
        "Sparql ID based": "SELECT DISTINCT ?P26_8 WHERE { wd:Q212064 p:P26 [ ps:P26 ?P26_8 ; n1:P582 ?P582_47 ] . }",
        "Squall label based": "what is a <spouse> at a <end time> of [Channing Tatum]?",
        "Squall ID based": "what is a <P26> at a <P582> of <Q212064>?"
    },
    {
        "Question": "Who was the twentieth president of the United States?",
        "ID": "1afe8c44",
        "Entities": "Q30:United States of America,20:None",
        "Mintaka Answer": "Q34597:James A. Garfield",
        "Sparklis label based": "give me every [human] that has as a <position held> with <series ordinal> 20 [President of the United States]",
        "Sparklis ID based": "give me every <Q5> that has as a <P39> with <P1545> 20 <Q11696>",
        "Sparql label based": "select distinct ?q5_1 where { ?q5_1 wdt:<instance of> wd:[Human] . ?q5_1 p:<position held> [ n2:<series ordinal> \"20\" ; ps:<position held> wd:[President Of The United States] ] . }",
        "Sparql ID based": "select distinct ?q5_1 where { ?q5_1 wdt:P31 wd:Q5 . ?q5_1 p:P39 [ n2:P1545 \"20\" ; ps:P39 wd:Q11696 ] . }",
        "Squall label based": "which [Human] has <position held> at <series ordinal> \"20\" [President Of The United States]?",
        "Squall ID based": "which <Q5> has <P39> at <P1545> \"20\" <Q11696>?"
    },
    {
        "Question": "What was the name of the first Lilo and Stich movie?",
        "ID": "c05b5c90",
        "Entities": "Q6548398:Lilo & Stitch,1:None",
        "Mintaka Answer": "Q36092:Lilo & Stitch",
        "Sparklis label based": "give me everything that has as a <part of the series> [Lilo & Stitch]  with <series ordinal> 1",
        "Sparklis ID based": "give me everything that has as a <P179> <Q6548398> with <P1545> 1",
        "Sparql label based": "SELECT DISTINCT ?thing_7 WHERE { ?thing_7 p:<part of the series> [ ps:<part of the series> wd:[Lilo & Stitch] ; n1:<series ordinal> \"1\" ] . }",
        "Sparql ID based": "SELECT DISTINCT ?thing_7 WHERE { ?thing_7 p:P179 [ ps:P179 wd:Q6548398 ; n1:P1545 \"1\" ] . }",
        "Squall label based": "what has <part of the series> at <series ordinal> \"1\" [Lilo & Stitch]?",
        "Squall ID based": "what has <P179> at <P1545> \"1\" <Q6548398>?"
    },
    {
        "Question": "What is the seventh Assassin's creed game titled?",
        "ID": "fa6ca8a9",
        "Entities": "Q420292:Assassin's Creed,7:None",
        "Mintaka Answer": "Q17486360:Assassin's Creed Rogue",
        "Sparklis label based": "give me every <video> game that has as a part of the series [Assassin's Creed 2] with <series ordinal> 7",
        "Sparklis ID based": "give me every <P10> game that has as a part of the series <Q420292> with <P1545> 7",
        "Sparql label based": "select distinct ?q7889_1 where { ?q7889_1 wdt:<instance of> wd:[Video Game] . ?q7889_1 p:<part of the series> [ ps:<part of the series> wd:[Assassin's Creed 2] ; n1:<series ordinal> \"7\" ] . }",
        "Sparql ID based": "select distinct ?q7889_1 where { ?q7889_1 wdt:P31 wd:Q7889 . ?q7889_1 p:P179 [ ps:P179 wd:Q420292 ; n1:P1545 \"7\" ] . }",
        "Squall label based": "which [Video Game] has <part of the series> at <series ordinal> \"7\" [Assassin's Creed 2]?",
        "Squall ID based": "which <Q7889> has <P179> at <P1545> \"7\" <Q420292>?"
    },
    {
        "Question": "Who was the 22nd president of the United States?",
        "ID": "1b9ec7fb",
        "Entities": "Q30:United States of America",
        "Mintaka Answer": "Q35171:Grover Cleveland",
        "Sparklis label based": "United States of America has as an <office held by head of government>  [President of the United States] that is the <position held> of something with <series ordinal> 22",
        "Sparklis ID based": "United States of America has as an <P1313> <Q11696> that is the <P39> of something with <P1545> 22",
        "Sparql label based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:<position held> [ ps:<position held> wd:[President Of The United States] ; n1:<series ordinal> \"22\" ] .}",
        "Sparql ID based": "SELECT DISTINCT ?thing_8 WHERE { ?thing_8 p:P39 [ ps:P39 wd:Q11696 ; n1:P1545 \"22\" ] .}",
        "Squall label based": "what has <position held> at <series ordinal> \"22\" [President Of The United States]?",
        "Squall ID based": "what has <P39> at <P1545> \"22\" <Q11696>?"
    },
    {
        "Question": "How many Dead Space games were released on the Xbox 360?",
        "ID": "252ca71c",
        "Entities": "Q1180862:Dead Space, Q48263:Xbox 360",
        "Mintaka Answer": "3",
        "Sparklis label based": "[Dead Space] has  a part(s) that has as a <platform>  [Xbox 360]   and give me the number of part(s)",
        "Sparklis ID based": "<Q1180862> has a part(s) that has as a <P400> <Q48263> and give me the number of part(s)",
        "Sparql label based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:[Dead Space] p:<has part(s)> [ ps:<has part(s)> ?P527_8 ] . ?P527_8 p:<platform> [ ps:<platform> wd:[Xbox 360] ] . }",
        "Sparql ID based": "SELECT DISTINCT (COUNT(DISTINCT ?P527_8) AS ?number_of_46) WHERE { wd:Q1180862 p:P527 [ ps:P527 ?P527_8 ] . ?P527_8 p:P400 [ ps:P400 wd:Q48263 ] . }",
        "Squall label based": "how many thing is a <has part(s)> of [Dead Space] and has <platform> [Xbox 360]?",
        "Squall ID based": "how many thing is a <P527> of <Q1180862> and has <P400> <Q48263>?"
    },
    {
        "Question": "Is Russell Wilson older than Aaron Rodgers?",
        "ID": "d1e0a003",
        "Entities": "Q302581:Aaron Rodgers, Q1149781:Russell Wilson",
        "Mintaka Answer": "FALSE",
        "Sparklis label based": "aron Rodgers has  a <date of birth>  and [Russell Wilson] has  a <date of birth>  and give me the year of the 1st <date of birth> and give me the year of the 2nd <date of birth>",
        "Sparklis ID based": "aron Rodgers has a <P569> and <Q1149781> has a <P569> and give me the year of the 1st <P569> and give me the year of the 2nd <P569>",
        "Sparql label based": "ASK { wd:[Russell Wilson] p:<date of birth> [ ps:<date of birth> ?area1 ] . wd:[Aaron Rodgers] p:<date of birth> [ ps:<date of birth> ?area2 ] . FILTER (?area1 < ?area2) }",
        "Sparql ID based": "ASK { wd:Q1149781 p:P569 [ ps:P569 ?area1 ] . wd:Q302581 p:P569 [ ps:P569 ?area2 ] . FILTER (?area1 < ?area2) }",
        "Squall label based": "whether [Russell Wilson] has a <date of birth> lesser than a <date of birth> of [Aaron Rodgers]?",
        "Squall ID based": "whether <Q1149781> has a <P569> lesser than a <P569> of <Q302581>?"
    },
    {
        "Question": "Was Beat It or Billie Jean released first?",
        "ID": "e8793b93",
        "Entities": "Q193319:Billie Jean, Q210218:Beat It",
        "Mintaka Answer": "Q193319:Billie Jean",
        "Sparklis label based": "[Billie Jean] has  a <publication date>  and Beat It has  a <publication date>",
        "Sparklis ID based": "<Q193319> has a <P577> and Beat It has a <P577>",
        "Sparql label based": "SELECT ?x WHERE { VALUES ?x { wd:[Beat It] wd:[Billie Jean] } ?x p:<publication date> [ ps:<publication date> ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Sparql ID based": "SELECT ?x WHERE { VALUES ?x { wd:Q210218 wd:Q193319 } ?x p:P577 [ ps:P577 ?date ] . } ORDER BY ASC(?date) LIMIT 1",
        "Squall label based": "what is [Beat It] or [Billie Jean] and has the lowest <publication date>?",
        "Squall ID based": "what is <Q210218> or <Q193319> and has the lowest <P577>?"
    },
    {
        "Question": "What's the largest city in Canada by population?",
        "ID": "09ec6f90",
        "Entities": "Q16:Canada",
        "Mintaka Answer": "Q172:Toronto",
        "Sparklis label based": "give me every [city] that has as a <country>  [Canada]  and that has  the highest-to-lowest <population>",
        "Sparklis ID based": "give me every <Q515> that has as a <P17> <Q16> and that has the highest-to-lowest <P1082>",
        "Sparql label based": "SELECT DISTINCT ?Q515_1 ?P1082_38 WHERE { ?Q515_1 wdt:<instance of> wd:[City] . ?Q515_1 p:<country> [ ps:<country> wd:[Canada] ] . ?Q515_1 p:<population> [ ps:<population> ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q515_1 ?P1082_38 WHERE { ?Q515_1 wdt:P31 wd:Q515 . ?Q515_1 p:P17 [ ps:P17 wd:Q16 ] . ?Q515_1 p:P1082 [ ps:P1082 ?P1082_38 ] . } ORDER BY DESC(?P1082_38) LIMIT 1",
        "Squall label based": "which [City] has <country> [Canada] and has the highest <population>?",
        "Squall ID based": "which <Q515> has <P17> <Q16> and has the highest <P1082>?"
    },
    {
        "Question": "What team plays at Lumen Field and used to have Doug Baldwin?",
        "ID": "bd7848a6",
        "Entities": "Q3714584:Doug Baldwin, Q612736:Lumen Field",
        "Mintaka Answer": "Q221878:Seattle Seahawks",
        "Sparklis label based": "give me every [American football team] that is the <member of sports team> of [Doug Baldwin]  and that has as a <home venue>  [Lumen Field]",
        "Sparklis ID based": "give me every <Q17156793> that is the <P54> of <Q3714584> and that has as a <P115> <Q612736>",
        "Sparql label based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:<instance of> wd:[American Football Team] . wd:[Doug Baldwin] p:<member of sports team> [ ps:<member of sports team> ?Q17156793_8 ] . ?Q17156793_8 p:<home venue> [ ps:<home venue> wd:[Lumen Field] ] . } LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q17156793_8 WHERE { ?Q17156793_8 wdt:P31 wd:Q17156793 . wd:Q3714584 p:P54 [ ps:P54 ?Q17156793_8 ] . ?Q17156793_8 p:P115 [ ps:P115 wd:Q612736 ] . } LIMIT 1",
        "Squall label based": "which [American Football Team] is a <member of sports team> of [Doug Baldwin] and has <home venue> [Lumen Field]?",
        "Squall ID based": "which <Q17156793> is a <P54> of <Q3714584> and has <P115> <Q612736>?"
    },
    {
        "Question": "The Eiffel Tower can be found in which European capital city?",
        "ID": "0db78efa",
        "Entities": "Q243:Eiffel Tower, Q46:Europe, Q5119:capital",
        "Mintaka Answer": "Q90:Paris",
        "Sparklis label based": "give me every [capital city]\nthat has as a <continent>  [Europe] and that is the <owner of> [Eiffel Tower]",
        "Sparklis ID based": "give me every [capital_city] that has as a <P30> <Q46> and that is the <P1830> <Q243>",
        "Sparql label based": "SELECT DISTINCT ?Q5119_1 WHERE { ?Q5119_1 wdt:<instance of> wd:[Capital] . ?Q5119_1 p:<continent> [ ps:<continent> wd:[Europe] ] . ?Q5119_1 p:<owner of> [ ps:<owner of> wd:[Eiffel Tower] ] . }",
        "Sparql ID based": "SELECT DISTINCT ?Q5119_1 WHERE { ?Q5119_1 wdt:P31 wd:Q5119 . ?Q5119_1 p:P30 [ ps:P30 wd:Q46 ] . ?Q5119_1 p:P1830 [ ps:P1830 wd:Q243 ] . }",
        "Squall label based": "which [Capital] has <continent> [Europe] and has <owner of> [Eiffel Tower]?",
        "Squall ID based": "which <Q5119> has <P30> <Q46> and has <P1830> <Q243>?"
    },
    {
        "Question": "What is the last Dune book?",
        "ID": "427f16b5",
        "Entities": "Q6095696:Dune novel series",
        "Mintaka Answer": "Q282814:Chapterhouse: Dune",
        "Sparklis label based": "give me every [literary work] that has as a <part of the series> with the highest-to-lowest <series ordinal>  [Dune novel series]",
        "Sparklis ID based": "give me every <Q7725634> that has as a <P179> with the highest-to-lowest <P1545> <Q6095696>",
        "Sparql label based": "SELECT DISTINCT ?Q7725634_1 ?P1545_5 WHERE { ?Q7725634_1 wdt:<instance of> wd:[Literary Work] . ?Q7725634_1 p:<part of the series> [ n1:<series ordinal> ?P1545_5 ; ps:<part of the series> wd:[Dune Novel Series] ] . } ORDER BY DESC(?P1545_5) LIMIT 1",
        "Sparql ID based": "SELECT DISTINCT ?Q7725634_1 ?P1545_5 WHERE { ?Q7725634_1 wdt:P31 wd:Q7725634 . ?Q7725634_1 p:P179 [ n1:P1545 ?P1545_5 ; ps:P179 wd:Q6095696 ] . } ORDER BY DESC(?P1545_5) LIMIT 1",
        "Squall label based": "which [Literary Work] has <part of the series> at the highest <series ordinal> [Dune Novel Series]?",
        "Squall ID based": "which <Q7725634> has <P179> at the highest <P1545> <Q6095696>?"
    },
    {
        "Question": "Which album by Tupac came out in 1991?",
        "ID": "a0da7591",
        "Entities": "Q6107:Tupac Shakur",
        "Mintaka Answer": "Q23349:2Pacalypse Now",
        "Sparklis label based": "give me every [album]\nthat has as a <performer> [Tupac Shakur] and that has a <publication date> \nand where the year of the <publication date> = 1991",
        "Sparklis ID based": "give me every <Q482994> that has as a <P175> <Q6107> and that has a <P577> and where the year of the <P577> = 1991",
        "Sparql label based": "SELECT DISTINCT ?Q482994_95 WHERE { ?Q482994_95 wdt:<instance of> wd:[Album] . ?Q482994_95 p:<performer> [ ps:<performer> wd:[Tupac Shakur] ] . ?Q482994_95 p:<publication date> [ ps:<publication date> ?P577_100 ] . FILTER ( (year(?P577_100) = \"1991\"^^xsd:integer) ) }",
        "Sparql ID based": "SELECT DISTINCT ?Q482994_95 WHERE { ?Q482994_95 wdt:P31 wd:Q482994 . ?Q482994_95 p:P175 [ ps:P175 wd:Q6107 ] . ?Q482994_95 p:P577 [ ps:P577 ?P577_100 ] . FILTER ( (year(?P577_100) = \"1991\"^^xsd:integer) ) }",
        "Squall label based": "which [Album] has <performer> [Tupac Shakur] and has a <publication date> whose year is 1991?",
        "Squall ID based": "which <Q482994> has <P175> <Q6107> and has a <P577> whose year is 1991?"
    }
]